{
	"id": "bf156b708095265e5206ae1e74892beb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.2",
	"solcLongVersion": "0.6.2+commit.bacdbe57",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC1155.sol": {
				"content": "// contracts/GameItems.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.2;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\";\r\n\r\ncontract GameItems is ERC1155 {\r\n    uint256 public constant GOLD = 0;\r\n    uint256 public constant SILVER = 1;\r\n    uint256 public constant THORS_HAMMER = 2;\r\n    uint256 public constant SWORD = 3;\r\n    uint256 public constant SHIELD = 4;\r\n\r\n    constructor() public ERC1155(\"ipfs://QmZ9JQ4wQ797k96sPgc31NFV8QfJqA2wWpht7thzUi3P5D/{id}.json\") {\r\n        _mint(msg.sender, GOLD, 10**18, \"\");\r\n        _mint(msg.sender, SILVER, 10**27, \"\");\r\n        _mint(msg.sender, THORS_HAMMER, 1, \"\");\r\n        _mint(msg.sender, SWORD, 10**9, \"\");\r\n        _mint(msg.sender, SHIELD, 10**9, \"\");\r\n    }\r\n}\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155MetadataURI.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"../../GSN/Context.sol\";\nimport \"../../introspection/ERC165.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n *\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using SafeMath for uint256;\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping (uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping (address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /*\n     *     bytes4(keccak256('balanceOf(address,uint256)')) == 0x00fdd58e\n     *     bytes4(keccak256('balanceOfBatch(address[],uint256[])')) == 0x4e1273f4\n     *     bytes4(keccak256('setApprovalForAll(address,bool)')) == 0xa22cb465\n     *     bytes4(keccak256('isApprovedForAll(address,address)')) == 0xe985e9c5\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256,uint256,bytes)')) == 0xf242432a\n     *     bytes4(keccak256('safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)')) == 0x2eb2c2d6\n     *\n     *     => 0x00fdd58e ^ 0x4e1273f4 ^ 0xa22cb465 ^\n     *        0xe985e9c5 ^ 0xf242432a ^ 0x2eb2c2d6 == 0xd9b67a26\n     */\n    bytes4 private constant _INTERFACE_ID_ERC1155 = 0xd9b67a26;\n\n    /*\n     *     bytes4(keccak256('uri(uint256)')) == 0x0e89341c\n     */\n    bytes4 private constant _INTERFACE_ID_ERC1155_METADATA_URI = 0x0e89341c;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor (string memory uri) public {\n        _setURI(uri);\n\n        // register the supported interfaces to conform to ERC1155 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC1155);\n\n        // register the supported interfaces to conform to ERC1155MetadataURI via ERC165\n        _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) external view override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    )\n        public\n        view\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            require(accounts[i] != address(0), \"ERC1155: batch balance query for the zero address\");\n            batchBalances[i] = _balances[ids[i]][accounts[i]];\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(_msgSender() != operator, \"ERC1155: setting approval status for self\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    )\n        public\n        virtual\n        override\n    {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][from] = _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\");\n        _balances[id][to] = _balances[id][to].add(amount);\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        public\n        virtual\n        override\n    {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            _balances[id][from] = _balances[id][from].sub(\n                amount,\n                \"ERC1155: insufficient balance for transfer\"\n            );\n            _balances[id][to] = _balances[id][to].add(amount);\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address account, uint256 id, uint256 amount, bytes memory data) internal virtual {\n        require(account != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][account] = _balances[id][account].add(amount);\n        emit TransferSingle(operator, address(0), account, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] = amounts[i].add(_balances[ids[i]][to]);\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `account`\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(address account, uint256 id, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        _balances[id][account] = _balances[id][account].sub(\n            amount,\n            \"ERC1155: burn amount exceeds balance\"\n        );\n\n        emit TransferSingle(operator, account, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(address account, uint256[] memory ids, uint256[] memory amounts) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, account, address(0), ids, amounts, \"\");\n\n        for (uint i = 0; i < ids.length; i++) {\n            _balances[ids[i]][account] = _balances[ids[i]][account].sub(\n                amounts[i],\n                \"ERC1155: burn amount exceeds balance\"\n            );\n        }\n\n        emit TransferBatch(operator, account, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        internal virtual\n    { }\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    )\n        private\n    {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver(to).onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        private\n    {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        return _functionCallWithValue(target, data, value, errorMessage);\n    }\n\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts may inherit from this and call {_registerInterface} to declare\n * their support of an interface.\n */\ncontract ERC165 is IERC165 {\n    /*\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\n     */\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\n\n    /**\n     * @dev Mapping of interface ids to whether or not it's supported.\n     */\n    mapping(bytes4 => bool) private _supportedInterfaces;\n\n    constructor () internal {\n        // Derived contracts need only register support for their own interfaces,\n        // we register support for ERC165 itself here\n        _registerInterface(_INTERFACE_ID_ERC165);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     *\n     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view override returns (bool) {\n        return _supportedInterfaces[interfaceId];\n    }\n\n    /**\n     * @dev Registers the contract as an implementer of the interface defined by\n     * `interfaceId`. Support of the actual ERC165 interface is automatic and\n     * registering its interface id is not required.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * Requirements:\n     *\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\n     */\n    function _registerInterface(bytes4 interfaceId) internal virtual {\n        require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\");\n        _supportedInterfaces[interfaceId] = true;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"../../introspection/IERC165.sol\";\n\n/**\n * _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n\n    /**\n        @dev Handles the receipt of a single ERC1155 token type. This function is\n        called at the end of a `safeTransferFrom` after the balance has been updated.\n        To accept the transfer, this must return\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n        (i.e. 0xf23a6e61, or its own function selector).\n        @param operator The address which initiated the transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param id The ID of the token being transferred\n        @param value The amount of tokens being transferred\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n    */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    )\n        external\n        returns(bytes4);\n\n    /**\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\n        is called at the end of a `safeBatchTransferFrom` after the balances have\n        been updated. To accept the transfer(s), this must return\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n        (i.e. 0xbc197c81, or its own function selector).\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n    */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    )\n        external\n        returns(bytes4);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\nimport \"./IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\nimport \"../../introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"ERC1155.sol": {
				"GameItems": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "GOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SHIELD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SILVER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SWORD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "THORS_HAMMER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}.     * Requirements:     * - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}.     * Requirements:     * - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}.     * This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].     * Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"ERC1155.sol\":204:794  contract GameItems is ERC1155 {\r... */\n  mstore(0x40, 0x80)\n    /* \"ERC1155.sol\":451:791  constructor() public ERC1155(\"ipfs://QmZ9JQ4wQ797k96sPgc31NFV8QfJqA2wWpht7thzUi3P5D/{id}.json\") {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"ERC1155.sol\":451:791  constructor() public ERC1155(\"ipfs://QmZ9JQ4wQ797k96sPgc31NFV8QfJqA2wWpht7thzUi3P5D/{id}.json\") {\r... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":1966:2318  constructor (string memory uri) public {... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x3f\n  dup2\n  mstore\n  0x20\n  add\n  data_3fe3d9245796ae3f66210b6549bb463a5ed2dd5deb86674e732053186f957f6f\n  0x3f\n  swap2\n  codecopy\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":751:791  _registerInterface(_INTERFACE_ID_ERC165) */\n  tag_6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":418:428  0x01ffc9a7 */\n  0x01ffc9a7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":770:790  _INTERFACE_ID_ERC165 */\n  0xe0\n  shl\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":751:769  _registerInterface */\n  shl(0x20, tag_7)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":751:791  _registerInterface(_INTERFACE_ID_ERC165) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2015:2027  _setURI(uri) */\n  tag_9\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2023:2026  uri */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2015:2022  _setURI */\n  shl(0x20, tag_10)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2015:2027  _setURI(uri) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2116:2157  _registerInterface(_INTERFACE_ID_ERC1155) */\n  tag_11\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":1754:1764  0xd9b67a26 */\n  0xd9b67a26\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2135:2156  _INTERFACE_ID_ERC1155 */\n  0xe0\n  shl\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2116:2134  _registerInterface */\n  shl(0x20, tag_7)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2116:2157  _registerInterface(_INTERFACE_ID_ERC1155) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2257:2311  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  tag_12\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":1906:1916  0x0e89341c */\n  0x0e89341c\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2276:2310  _INTERFACE_ID_ERC1155_METADATA_URI */\n  0xe0\n  shl\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2257:2275  _registerInterface */\n  shl(0x20, tag_7)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2257:2311  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":1966:2318  constructor (string memory uri) public {... */\n  pop\n    /* \"ERC1155.sol\":558:593  _mint(msg.sender, GOLD, 10**18, \"\") */\n  tag_14\n    /* \"ERC1155.sol\":564:574  msg.sender */\n  caller\n    /* \"ERC1155.sol\":272:273  0 */\n  0x00\n    /* \"ERC1155.sol\":582:588  10**18 */\n  0x0de0b6b3a7640000\n    /* \"ERC1155.sol\":558:593  _mint(msg.sender, GOLD, 10**18, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"ERC1155.sol\":558:563  _mint */\n  shl(0x20, tag_15)\n    /* \"ERC1155.sol\":558:593  _mint(msg.sender, GOLD, 10**18, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"ERC1155.sol\":604:641  _mint(msg.sender, SILVER, 10**27, \"\") */\n  tag_16\n    /* \"ERC1155.sol\":610:620  msg.sender */\n  caller\n    /* \"ERC1155.sol\":313:314  1 */\n  0x01\n    /* \"ERC1155.sol\":630:636  10**27 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"ERC1155.sol\":604:641  _mint(msg.sender, SILVER, 10**27, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"ERC1155.sol\":604:609  _mint */\n  shl(0x20, tag_15)\n    /* \"ERC1155.sol\":604:641  _mint(msg.sender, SILVER, 10**27, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"ERC1155.sol\":652:690  _mint(msg.sender, THORS_HAMMER, 1, \"\") */\n  tag_17\n    /* \"ERC1155.sol\":658:668  msg.sender */\n  caller\n    /* \"ERC1155.sol\":360:361  2 */\n  0x02\n    /* \"ERC1155.sol\":684:685  1 */\n  0x01\n    /* \"ERC1155.sol\":652:690  _mint(msg.sender, THORS_HAMMER, 1, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"ERC1155.sol\":652:657  _mint */\n  shl(0x20, tag_15)\n    /* \"ERC1155.sol\":652:690  _mint(msg.sender, THORS_HAMMER, 1, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"ERC1155.sol\":701:736  _mint(msg.sender, SWORD, 10**9, \"\") */\n  tag_18\n    /* \"ERC1155.sol\":707:717  msg.sender */\n  caller\n    /* \"ERC1155.sol\":400:401  3 */\n  0x03\n    /* \"ERC1155.sol\":726:731  10**9 */\n  0x3b9aca00\n    /* \"ERC1155.sol\":701:736  _mint(msg.sender, SWORD, 10**9, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"ERC1155.sol\":701:706  _mint */\n  shl(0x20, tag_15)\n    /* \"ERC1155.sol\":701:736  _mint(msg.sender, SWORD, 10**9, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"ERC1155.sol\":747:783  _mint(msg.sender, SHIELD, 10**9, \"\") */\n  tag_19\n    /* \"ERC1155.sol\":753:763  msg.sender */\n  caller\n    /* \"ERC1155.sol\":441:442  4 */\n  0x04\n    /* \"ERC1155.sol\":773:778  10**9 */\n  0x3b9aca00\n    /* \"ERC1155.sol\":747:783  _mint(msg.sender, SHIELD, 10**9, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"ERC1155.sol\":747:752  _mint */\n  shl(0x20, tag_15)\n    /* \"ERC1155.sol\":747:783  _mint(msg.sender, SHIELD, 10**9, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"ERC1155.sol\":204:794  contract GameItems is ERC1155 {\r... */\n  jump(tag_20)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1482:1680  function _registerInterface(bytes4 interfaceId) internal virtual {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1580:1590  0xffffffff */\n  0xffffffff\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1565:1590  interfaceId != 0xffffffff */\n  0xe0\n  shl\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1565:1576  interfaceId */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1565:1590  interfaceId != 0xffffffff */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  eq\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1557:1623  require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\") */\n  tag_22\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1c\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x4552433136353a20696e76616c696420696e7465726661636520696400000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_22:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1669:1673  true */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1633:1653  _supportedInterfaces */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1633:1666  _supportedInterfaces[interfaceId] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1654:1665  interfaceId */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1633:1666  _supportedInterfaces[interfaceId] */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1633:1673  _supportedInterfaces[interfaceId] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1482:1680  function _registerInterface(bytes4 interfaceId) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":7590:7676  function _setURI(string memory newuri) internal virtual {... */\ntag_10:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":7663:7669  newuri */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":7656:7660  _uri */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":7656:7669  _uri = newuri */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_24\n  swap3\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":7590:7676  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8059:8631  function _mint(address account, uint256 id, uint256 amount, bytes memory data) internal virtual {... */\ntag_15:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8192:8193  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8173:8194  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8173:8180  account */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8173:8194  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8165:8232  require(account != address(0), \"ERC1155: mint to the zero address\") */\n  tag_27\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x21\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2\n  0x21\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_27:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8243:8259  address operator */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8262:8274  _msgSender() */\n  tag_28\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8262:8272  _msgSender */\n  shl(0x20, tag_29)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8262:8274  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8243:8274  address operator = _msgSender() */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8285:8392  _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data) */\n  tag_30\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8306:8314  operator */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8324:8325  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8328:8335  account */\n  dup8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8337:8358  _asSingletonArray(id) */\n  tag_31\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8355:8357  id */\n  dup9\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8337:8354  _asSingletonArray */\n  shl(0x20, tag_32)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8337:8358  _asSingletonArray(id) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8360:8385  _asSingletonArray(amount) */\n  tag_33\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8378:8384  amount */\n  dup9\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8360:8377  _asSingletonArray */\n  shl(0x20, tag_32)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8360:8385  _asSingletonArray(amount) */\n  0x20\n  shr\n  jump\t// in\ntag_33:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8387:8391  data */\n  dup8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8285:8305  _beforeTokenTransfer */\n  shl(0x20, tag_34)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8285:8392  _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8428:8462  _balances[id][account].add(amount) */\n  tag_35\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8455:8461  amount */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8428:8437  _balances */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8428:8441  _balances[id] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8438:8440  id */\n  dup8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8428:8441  _balances[id] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8428:8450  _balances[id][account] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8442:8449  account */\n  dup9\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8428:8450  _balances[id][account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8428:8454  _balances[id][account].add */\n  or(tag_0_104, shl(0x20, tag_36))\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8428:8462  _balances[id][account].add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_35:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8403:8412  _balances */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8403:8416  _balances[id] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8413:8415  id */\n  dup7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8403:8416  _balances[id] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8403:8425  _balances[id][account] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8417:8424  account */\n  dup8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8403:8425  _balances[id][account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8403:8462  _balances[id][account] = _balances[id][account].add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8514:8521  account */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8477:8534  TransferSingle(operator, address(0), account, id, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8510:8511  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8477:8534  TransferSingle(operator, address(0), account, id, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8492:8500  operator */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8477:8534  TransferSingle(operator, address(0), account, id, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8523:8525  id */\n  dup8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8527:8533  amount */\n  dup8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8477:8534  TransferSingle(operator, address(0), account, id, amount) */\n  mload(0x40)\n  dup1\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8545:8624  _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data) */\n  tag_37\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8576:8584  operator */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8594:8595  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8598:8605  account */\n  dup8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8607:8609  id */\n  dup8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8611:8617  amount */\n  dup8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8619:8623  data */\n  dup8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8545:8575  _doSafeTransferAcceptanceCheck */\n  shl(0x20, tag_38)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8545:8624  _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":8059:8631  function _mint(address account, uint256 id, uint256 amount, bytes memory data) internal virtual {... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\ntag_29:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":643:658  address payable */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":677:687  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":670:687  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14060:14253  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\ntag_32:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14126:14142  uint256[] memory */\n  0x60\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14154:14176  uint256[] memory array */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14193:14194  1 */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14179:14195  new uint256[](1) */\n  mload(0x40)\n  swap1\n  dup1\n  dup3\n  mstore\n  dup1\n  0x20\n  mul\n  0x20\n  add\n  dup3\n  add\n  0x40\n  mstore\n  dup1\n  iszero\n  tag_41\n  jumpi\n  dup2\n  0x20\n  add\n    /* \"--CODEGEN--\":29:31   */\n  0x20\n    /* \"--CODEGEN--\":21:27   */\n  dup3\n    /* \"--CODEGEN--\":17:32   */\n  mul\n    /* \"--CODEGEN--\":117:121   */\n  dup1\n    /* \"--CODEGEN--\":105:115   */\n  codesize\n    /* \"--CODEGEN--\":97:103   */\n  dup4\n    /* \"--CODEGEN--\":88:122   */\n  codecopy\n    /* \"--CODEGEN--\":148:152   */\n  dup1\n    /* \"--CODEGEN--\":140:146   */\n  dup3\n    /* \"--CODEGEN--\":136:153   */\n  add\n    /* \"--CODEGEN--\":126:153   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":0:157   */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14179:14195  new uint256[](1) */\n  swap1\n  pop\ntag_41:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14154:14195  uint256[] memory array = new uint256[](1) */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14216:14223  element */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14205:14210  array */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14211:14212  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14205:14213  array[0] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_42\n  jumpi\n  invalid\ntag_42:\n  0x20\n  mul\n  0x20\n  add\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14205:14223  array[0] = element */\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14241:14246  array */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14234:14246  return array */\n  swap2\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14060:14253  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12296:12523  function _beforeTokenTransfer(... */\ntag_34:\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":874:1050  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_36:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":932:939  uint256 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":951:960  uint256 c */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":967:968  b */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":963:964  a */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":963:968  a + b */\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":951:968  uint256 c = a + b */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":991:992  a */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":986:987  c */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":986:992  c >= a */\n  lt\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":978:1024  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_45\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1b\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_45:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1042:1043  c */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1035:1043  return c */\n  swap2\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":874:1050  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12529:13270  function _doSafeTransferAcceptanceCheck(... */\ntag_38:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12748:12763  to.isContract() */\n  tag_47\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12748:12750  to */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12748:12761  to.isContract */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  or(tag_0_158, shl(0x20, tag_48))\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12748:12763  to.isContract() */\n  0x20\n  shr\n  jump\t// in\ntag_47:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12744:13264  if (to.isContract()) {... */\n  iszero\n  tag_49\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12800:12802  to */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12783:12821  IERC1155Receiver(to).onERC1155Received */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xf23a6e61\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12822:12830  operator */\n  dup8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12832:12836  from */\n  dup8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12838:12840  id */\n  dup7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12842:12848  amount */\n  dup7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12850:12854  data */\n  dup7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12783:12855  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n  mload(0x40)\n  dup7\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup7\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  dup4\n  dup2\n  dup2\n  mload\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_50:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_52\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_50)\ntag_52:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12783:12855  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_53\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_53:\n  pop\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_54\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_54:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12783:12855  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n  pop\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_55\n  jumpi\n  pop\n  mload(0x40)\n  returndatasize\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_56\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_56:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12783:12855  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n  0x01\ntag_55:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12779:13254  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n  tag_57\n  jumpi\n  0x00\n    /* \"--CODEGEN--\":20:24   */\n  0x40\n    /* \"--CODEGEN--\":14:25   */\n  mload\n    /* \"--CODEGEN--\":6:25   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":43:44   */\n  0x00\n    /* \"--CODEGEN--\":37:41   */\n  dup2\n    /* \"--CODEGEN--\":30:45   */\n  mstore\n    /* \"--CODEGEN--\":57:58   */\n  0x01\n    /* \"--CODEGEN--\":50:780   */\n  iszero\n  tag_62\n  jumpi\n    /* \"--CODEGEN--\":93:97   */\n  0x44\n    /* \"--CODEGEN--\":75:91   */\n  returndatasize\n    /* \"--CODEGEN--\":72:98   */\n  lt\n    /* \"--CODEGEN--\":69:71   */\n  iszero\n  tag_63\n  jumpi\n    /* \"--CODEGEN--\":109:110   */\n  0x00\n    /* \"--CODEGEN--\":101:110   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":111:116   */\n  jump(tag_62)\n    /* \"--CODEGEN--\":69:71   */\ntag_63:\n    /* \"--CODEGEN--\":145:146   */\n  0x04\n    /* \"--CODEGEN--\":142:143   */\n  0x00\n    /* \"--CODEGEN--\":139:140   */\n  dup1\n    /* \"--CODEGEN--\":124:147   */\n  returndatacopy\n    /* \"--CODEGEN--\":179:180   */\n  0x00\n    /* \"--CODEGEN--\":173:181   */\n  mload\n    /* \"--CODEGEN--\":168:171   */\n  0xe0\n    /* \"--CODEGEN--\":164:182   */\n  shr\n    /* \"--CODEGEN--\":206:216   */\n  0x08c379a0\n    /* \"--CODEGEN--\":201:204   */\n  dup2\n    /* \"--CODEGEN--\":198:217   */\n  eq\n    /* \"--CODEGEN--\":188:190   */\n  tag_64\n  jumpi\n    /* \"--CODEGEN--\":229:230   */\n  0x00\n    /* \"--CODEGEN--\":221:230   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":231:236   */\n  pop\n  jump(tag_62)\n    /* \"--CODEGEN--\":188:190   */\ntag_64:\n    /* \"--CODEGEN--\":290:291   */\n  0x04\n    /* \"--CODEGEN--\":272:288   */\n  returndatasize\n    /* \"--CODEGEN--\":268:292   */\n  sub\n    /* \"--CODEGEN--\":265:266   */\n  0x04\n    /* \"--CODEGEN--\":259:263   */\n  dup4\n    /* \"--CODEGEN--\":244:293   */\n  returndatacopy\n    /* \"--CODEGEN--\":319:323   */\n  dup2\n    /* \"--CODEGEN--\":313:324   */\n  mload\n    /* \"--CODEGEN--\":403:419   */\n  returndatasize\n    /* \"--CODEGEN--\":396:400   */\n  0x24\n    /* \"--CODEGEN--\":388:394   */\n  dup3\n    /* \"--CODEGEN--\":384:401   */\n  add\n    /* \"--CODEGEN--\":381:420   */\n  gt\n    /* \"--CODEGEN--\":354:372   */\n  0xffffffffffffffff\n    /* \"--CODEGEN--\":346:352   */\n  dup3\n    /* \"--CODEGEN--\":343:373   */\n  gt\n    /* \"--CODEGEN--\":333:427   */\n  or\n    /* \"--CODEGEN--\":330:332   */\n  iszero\n  tag_65\n  jumpi\n    /* \"--CODEGEN--\":444:445   */\n  0x00\n    /* \"--CODEGEN--\":436:445   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":452:457   */\n  pop\n  pop\n  jump(tag_62)\n    /* \"--CODEGEN--\":330:332   */\ntag_65:\n    /* \"--CODEGEN--\":491:497   */\n  dup1\n    /* \"--CODEGEN--\":485:489   */\n  dup4\n    /* \"--CODEGEN--\":481:498   */\n  add\n    /* \"--CODEGEN--\":524:527   */\n  dup1\n    /* \"--CODEGEN--\":518:528   */\n  mload\n    /* \"--CODEGEN--\":548:566   */\n  0xffffffffffffffff\n    /* \"--CODEGEN--\":540:546   */\n  dup2\n    /* \"--CODEGEN--\":537:567   */\n  gt\n    /* \"--CODEGEN--\":534:536   */\n  iszero\n  tag_66\n  jumpi\n    /* \"--CODEGEN--\":578:579   */\n  0x00\n    /* \"--CODEGEN--\":570:579   */\n  swap5\n  pop\n    /* \"--CODEGEN--\":580:585   */\n  pop\n  pop\n  pop\n  pop\n  jump(tag_62)\n    /* \"--CODEGEN--\":534:536   */\ntag_66:\n    /* \"--CODEGEN--\":624:630   */\n  dup1\n    /* \"--CODEGEN--\":617:621   */\n  0x20\n    /* \"--CODEGEN--\":612:615   */\n  dup4\n    /* \"--CODEGEN--\":608:622   */\n  add\n    /* \"--CODEGEN--\":604:631   */\n  add\n    /* \"--CODEGEN--\":658:674   */\n  returndatasize\n    /* \"--CODEGEN--\":652:656   */\n  dup7\n    /* \"--CODEGEN--\":648:675   */\n  add\n    /* \"--CODEGEN--\":643:646   */\n  dup2\n    /* \"--CODEGEN--\":640:676   */\n  gt\n    /* \"--CODEGEN--\":637:639   */\n  iszero\n  tag_67\n  jumpi\n    /* \"--CODEGEN--\":687:688   */\n  0x00\n    /* \"--CODEGEN--\":679:688   */\n  swap6\n  pop\n    /* \"--CODEGEN--\":689:694   */\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump(tag_62)\n    /* \"--CODEGEN--\":637:639   */\ntag_67:\n    /* \"--CODEGEN--\":739:743   */\n  0x1f\n    /* \"--CODEGEN--\":735:744   */\n  not\n    /* \"--CODEGEN--\":728:732   */\n  0x1f\n    /* \"--CODEGEN--\":723:726   */\n  dup3\n    /* \"--CODEGEN--\":719:733   */\n  add\n    /* \"--CODEGEN--\":715:745   */\n  and\n    /* \"--CODEGEN--\":709:713   */\n  0x40\n    /* \"--CODEGEN--\":702:746   */\n  mstore\n    /* \"--CODEGEN--\":760:763   */\n  dup3\n    /* \"--CODEGEN--\":752:763   */\n  swap6\n  pop\n    /* \"--CODEGEN--\":769:774   */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"--CODEGEN--\":50:780   */\ntag_62:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12779:13254  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n  dup1\n  tag_68\n  jumpi\n  pop\n  jump(tag_59)\ntag_68:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13130:13136  reason */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13123:13137  revert(reason) */\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  dup4\n  dup2\n  dup2\n  mload\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_69:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_71\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_69)\ntag_71:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13123:13137  revert(reason) */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_72\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_72:\n  pop\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12779:13254  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\ntag_59:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13177:13239  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x34\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed\n  0x34\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12779:13254  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\ntag_57:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12916:12963  IERC1155Receiver(to).onERC1155Received.selector */\n  shl(0xe0, 0xf23a6e61)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12904:12963  response != IERC1155Receiver(to).onERC1155Received.selector */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12904:12912  response */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12904:12963  response != IERC1155Receiver(to).onERC1155Received.selector */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  eq\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12900:13056  if (response != IERC1155Receiver(to).onERC1155Received.selector) {... */\n  tag_74\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12987:13037  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x28\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503\n  0x28\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12900:13056  if (response != IERC1155Receiver(to).onERC1155Received.selector) {... */\ntag_74:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12856:13070  returns (bytes4 response) {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12744:13264  if (to.isContract()) {... */\ntag_49:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12529:13270  function _doSafeTransferAcceptanceCheck(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\ntag_48:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":778:782  bool */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":981:993  uint256 size */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1090:1097  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1078:1098  extcodesize(account) */\n  extcodesize\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1070:1098  size := extcodesize(account) */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1123:1124  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1116:1120  size */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1116:1124  size > 0 */\n  gt\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1109:1124  return size > 0 */\n  swap2\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"ERC1155.sol\":204:794  contract GameItems is ERC1155 {\r... */\ntag_25:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_77\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_76)\ntag_77:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_76\n  jumpi\n  swap2\n  dup3\n  add\ntag_78:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_79\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_78)\ntag_79:\ntag_76:\n  pop\n  swap1\n  pop\n  tag_80\n  swap2\n  swap1\n  tag_81\n  jump\t// in\ntag_80:\n  pop\n  swap1\n  jump\t// out\ntag_81:\n  tag_82\n  swap2\n  swap1\ntag_83:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_84\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_83)\ntag_84:\n  pop\n  swap1\n  jump\ntag_82:\n  swap1\n  jump\t// out\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed 455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572\ndata_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503 455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73\ndata_3fe3d9245796ae3f66210b6549bb463a5ed2dd5deb86674e732053186f957f6f 697066733a2f2f516d5a394a513477513739376b39367350676333314e46563851664a71413277577068743774687a5569335035442f7b69647d2e6a736f6e\ndata_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2 455243313135353a206d696e7420746f20746865207a65726f2061646472657373\n\nsub_0: assembly {\n        /* \"ERC1155.sol\":204:794  contract GameItems is ERC1155 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"ERC1155.sol\":204:794  contract GameItems is ERC1155 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xd562e204\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xd562e204\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe3e55f08\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x4e1273f4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5b2725ed\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x13dc989f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3e4bee38\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2956:3176  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_19:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2956:3176  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":948:1088  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":948:1088  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2717:2814  function uri(uint256) external view override returns (string memory) {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2717:2814  function uri(uint256) external view override returns (string memory) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_27:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_27)\n    tag_29:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2717:2814  function uri(uint256) external view override returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_30\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_30:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":368:401  uint256 public constant SWORD = 3 */\n    tag_6:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n    tag_7:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_35:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_37:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_43:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_44\n      jump\t// in\n    tag_33:\n      stop\n        /* \"ERC1155.sol\":241:273  uint256 public constant GOLD = 0 */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_49:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_53:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_56:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_56)\n    tag_58:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":408:442  uint256 public constant SHIELD = 4 */\n    tag_10:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4016:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4016:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"ERC1155.sol\":321:361  uint256 public constant THORS_HAMMER = 2 */\n    tag_12:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":280:314  uint256 public constant SILVER = 1 */\n    tag_13:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4389:4547  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4389:4547  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_73\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_74:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_75\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_76\n      jump\t// in\n    tag_71:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2956:3176  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n    tag_20:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3034:3041  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3080:3081  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3061:3082  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3061:3068  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3061:3082  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3053:3130  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3147:3156  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3147:3160  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3157:3159  id */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3147:3160  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3147:3169  _balances[id][account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3161:3168  account */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3147:3169  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3140:3169  return _balances[id][account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2956:3176  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":948:1088  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n    tag_23:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1025:1029  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1048:1068  _supportedInterfaces */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1048:1081  _supportedInterfaces[interfaceId] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1069:1080  interfaceId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1048:1081  _supportedInterfaces[interfaceId] */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1041:1081  return _supportedInterfaces[interfaceId] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":948:1088  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2717:2814  function uri(uint256) external view override returns (string memory) {... */\n    tag_26:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2771:2784  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2803:2807  _uri */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2796:2807  return _uri */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_82\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_81)\n    tag_82:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_83:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_83\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2717:2814  function uri(uint256) external view override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":368:401  uint256 public constant SWORD = 3 */\n    tag_32:\n        /* \"ERC1155.sol\":400:401  3 */\n      0x03\n        /* \"ERC1155.sol\":368:401  uint256 public constant SWORD = 3 */\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5837:5844  amounts */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5837:5851  amounts.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5823:5826  ids */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5823:5833  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5823:5851  ids.length == amounts.length */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5815:5896  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5928:5929  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5914:5930  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5914:5916  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5914:5930  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5906:5972  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6011:6023  _msgSender() */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6011:6021  _msgSender */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6011:6023  _msgSender() */\n      jump\t// in\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6003:6023  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6003:6007  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6003:6023  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6003:6063  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_89\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6027:6063  isApprovedForAll(from, _msgSender()) */\n      tag_90\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6044:6048  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6050:6062  _msgSender() */\n      tag_91\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6050:6060  _msgSender */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6050:6062  _msgSender() */\n      jump\t// in\n    tag_91:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6027:6043  isApprovedForAll */\n      tag_70\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6027:6063  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_90:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6003:6063  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_89:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5982:6139  require(... */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x32\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686\n      0x32\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6150:6166  address operator */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6169:6181  _msgSender() */\n      tag_93\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6169:6179  _msgSender */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6169:6181  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6150:6181  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6192:6252  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_94\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6213:6221  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6223:6227  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6229:6231  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6233:6236  ids */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6238:6245  amounts */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6247:6251  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6192:6212  _beforeTokenTransfer */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6192:6252  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6268:6277  uint256 i */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6280:6281  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6268:6281  uint256 i = 0 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6263:6612  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_96:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6287:6290  ids */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6287:6297  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6283:6284  i */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6283:6297  i < ids.length */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6263:6612  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_97\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6318:6328  uint256 id */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6331:6334  ids */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6335:6336  i */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6331:6337  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_99\n      jumpi\n      invalid\n    tag_99:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6318:6337  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6351:6365  uint256 amount */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6368:6375  amounts */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6376:6377  i */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6368:6378  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_100\n      jumpi\n      invalid\n    tag_100:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6351:6378  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6538  _balances[id][from].sub(... */\n      tag_101\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6456:6462  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6538  _balances[id][from].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6424  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6428  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6425:6427  id */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6428  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6434  _balances[id][from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6429:6433  from */\n      dup14\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6434  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6438  _balances[id][from].sub */\n      tag_102\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6538  _balances[id][from].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6393:6402  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6393:6406  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6403:6405  id */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6393:6406  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6393:6412  _balances[id][from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6407:6411  from */\n      dup12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6393:6412  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6393:6538  _balances[id][from] = _balances[id][from].sub(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6572:6601  _balances[id][to].add(amount) */\n      tag_103\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6594:6600  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6572:6581  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6572:6585  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6582:6584  id */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6572:6585  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6572:6589  _balances[id][to] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6586:6588  to */\n      dup12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6572:6589  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6572:6593  _balances[id][to].add */\n      tag_104\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6572:6601  _balances[id][to].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6552:6561  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6552:6565  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6562:6564  id */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6552:6565  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6552:6569  _balances[id][to] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6566:6568  to */\n      dup11\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6552:6569  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6552:6601  _balances[id][to] = _balances[id][to].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6263:6612  for (uint256 i = 0; i < ids.length; ++i) {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6299:6302  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6263:6612  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_96)\n    tag_97:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6657:6659  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6651:6655  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6641:6649  operator */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6661:6664  ids */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6666:6673  amounts */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      sub\n      dup4\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_105:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_107\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_105)\n    tag_107:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup4\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_108:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_110\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_108)\n    tag_110:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6685:6760  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6721:6729  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6731:6735  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6737:6739  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6741:6744  ids */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6746:6753  amounts */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6755:6759  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6685:6720  _doSafeBatchTransferAcceptanceCheck */\n      tag_112\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6685:6760  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_111:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":241:273  uint256 public constant GOLD = 0 */\n    tag_46:\n        /* \"ERC1155.sol\":272:273  0 */\n      0x00\n        /* \"ERC1155.sol\":241:273  uint256 public constant GOLD = 0 */\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n    tag_55:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3490:3506  uint256[] memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3549:3552  ids */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3549:3559  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3530:3538  accounts */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3530:3545  accounts.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3530:3559  accounts.length == ids.length */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3522:3605  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3616:3646  uint256[] memory batchBalances */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3663:3671  accounts */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3663:3678  accounts.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3649:3679  new uint256[](accounts.length) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_115\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3649:3679  new uint256[](accounts.length) */\n      swap1\n      pop\n    tag_115:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3616:3679  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3695:3704  uint256 i */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3707:3708  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3695:3708  uint256 i = 0 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3690:3911  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_116:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3714:3722  accounts */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3714:3729  accounts.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3710:3711  i */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3710:3729  i < accounts.length */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3690:3911  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3781:3782  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3758:3783  accounts[i] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3758:3766  accounts */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3767:3768  i */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3758:3769  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_119\n      jumpi\n      invalid\n    tag_119:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3758:3783  accounts[i] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3750:3837  require(accounts[i] != address(0), \"ERC1155: batch balance query for the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x31\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c\n      0x31\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3870:3879  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3870:3887  _balances[ids[i]] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3880:3883  ids */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3884:3885  i */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3880:3886  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_121\n      jumpi\n      invalid\n    tag_121:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3870:3887  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3870:3900  _balances[ids[i]][accounts[i]] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3888:3896  accounts */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3897:3898  i */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3888:3899  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_122\n      jumpi\n      invalid\n    tag_122:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3870:3900  _balances[ids[i]][accounts[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3851:3864  batchBalances */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3865:3866  i */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3851:3867  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_123\n      jumpi\n      invalid\n    tag_123:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3851:3900  batchBalances[i] = _balances[ids[i]][accounts[i]] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3731:3734  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3690:3911  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_116)\n    tag_117:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3928:3941  batchBalances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3921:3941  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":408:442  uint256 public constant SHIELD = 4 */\n    tag_60:\n        /* \"ERC1155.sol\":441:442  4 */\n      0x04\n        /* \"ERC1155.sol\":408:442  uint256 public constant SHIELD = 4 */\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4016:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4134:4142  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4118:4142  _msgSender() != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4118:4130  _msgSender() */\n      tag_125\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4118:4128  _msgSender */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4118:4130  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4118:4142  _msgSender() != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4110:4188  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4244:4252  approved */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4199:4217  _operatorApprovals */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4199:4231  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4218:4230  _msgSender() */\n      tag_127\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4218:4228  _msgSender */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4218:4230  _msgSender() */\n      jump\t// in\n    tag_127:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4199:4231  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4199:4241  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4232:4240  operator */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4199:4241  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4199:4252  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4296:4304  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4267:4315  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4282:4294  _msgSender() */\n      tag_128\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4282:4292  _msgSender */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4282:4294  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4267:4315  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4306:4314  approved */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4267:4315  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4016:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":321:361  uint256 public constant THORS_HAMMER = 2 */\n    tag_65:\n        /* \"ERC1155.sol\":360:361  2 */\n      0x02\n        /* \"ERC1155.sol\":321:361  uint256 public constant THORS_HAMMER = 2 */\n      dup2\n      jump\t// out\n        /* \"ERC1155.sol\":280:314  uint256 public constant SILVER = 1 */\n    tag_67:\n        /* \"ERC1155.sol\":313:314  1 */\n      0x01\n        /* \"ERC1155.sol\":280:314  uint256 public constant SILVER = 1 */\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4389:4547  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4480:4484  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4503:4521  _operatorApprovals */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4503:4530  _operatorApprovals[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4522:4529  account */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4503:4530  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4503:4540  _operatorApprovals[account][operator] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4531:4539  operator */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4503:4540  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4496:4540  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4389:4547  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4843:4844  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4829:4845  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4829:4831  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4829:4845  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4821:4887  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4926:4938  _msgSender() */\n      tag_132\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4926:4936  _msgSender */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4926:4938  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4918:4938  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4918:4922  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4918:4938  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4918:4978  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_133\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4942:4978  isApprovedForAll(from, _msgSender()) */\n      tag_134\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4959:4963  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4965:4977  _msgSender() */\n      tag_135\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4965:4975  _msgSender */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4965:4977  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4942:4958  isApprovedForAll */\n      tag_70\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4942:4978  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_134:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4918:4978  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_133:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4897:5045  require(... */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5056:5072  address operator */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5075:5087  _msgSender() */\n      tag_137\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5075:5085  _msgSender */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5075:5087  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5056:5087  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5098:5194  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_138\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5119:5127  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5129:5133  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5135:5137  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5139:5160  _asSingletonArray(id) */\n      tag_139\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5157:5159  id */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5139:5156  _asSingletonArray */\n      tag_140\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5139:5160  _asSingletonArray(id) */\n      jump\t// in\n    tag_139:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5162:5187  _asSingletonArray(amount) */\n      tag_141\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5180:5186  amount */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5162:5179  _asSingletonArray */\n      tag_140\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5162:5187  _asSingletonArray(amount) */\n      jump\t// in\n    tag_141:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5189:5193  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5098:5118  _beforeTokenTransfer */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5098:5194  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      jump\t// in\n    tag_138:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5304  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_142\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5251:5257  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5304  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5236  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5240  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5237:5239  id */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5240  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5246  _balances[id][from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5241:5245  from */\n      dup11\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5246  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5250  _balances[id][from].sub */\n      tag_102\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5304  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5205:5214  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5205:5218  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5215:5217  id */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5205:5218  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5205:5224  _balances[id][from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5219:5223  from */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5205:5224  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5205:5304  _balances[id][from] = _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5334:5363  _balances[id][to].add(amount) */\n      tag_143\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5356:5362  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5334:5343  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5334:5347  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5344:5346  id */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5334:5347  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5334:5351  _balances[id][to] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5348:5350  to */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5334:5351  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5334:5355  _balances[id][to].add */\n      tag_104\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5334:5363  _balances[id][to].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5314:5323  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5314:5327  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5324:5326  id */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5314:5327  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5314:5331  _balances[id][to] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5328:5330  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5314:5331  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5314:5363  _balances[id][to] = _balances[id][to].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5410:5412  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5379:5425  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5404:5408  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5379:5425  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5394:5402  operator */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5379:5425  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5414:5416  id */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5418:5424  amount */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5379:5425  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5436:5504  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_144\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5467:5475  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5477:5481  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5483:5485  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5487:5489  id */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5491:5497  amount */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5499:5503  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5436:5466  _doSafeTransferAcceptanceCheck */\n      tag_145\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5436:5504  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_144:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_88:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":643:658  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":677:687  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":670:687  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12296:12523  function _beforeTokenTransfer(... */\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_102:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1832:1839  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1864:1865  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1859:1860  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1859:1865  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1867:1879  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1851:1880  require(b <= a, errorMessage) */\n      swap1\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_150:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_152\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_150)\n    tag_152:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1851:1880  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_153\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_153:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1890:1899  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1906:1907  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1902:1903  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1902:1907  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1890:1907  uint256 c = a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1925:1926  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1918:1926  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":874:1050  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_104:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":932:939  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":951:960  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":967:968  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":963:964  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":963:968  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":951:968  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":991:992  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":986:987  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":986:992  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":978:1024  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1042:1043  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1035:1043  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":874:1050  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13276:14054  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_112:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13520:13535  to.isContract() */\n      tag_157\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13520:13522  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13520:13533  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_158\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13520:13535  to.isContract() */\n      jump\t// in\n    tag_157:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13516:14048  if (to.isContract()) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13572:13574  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13555:13598  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13599:13607  operator */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13609:13613  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13615:13618  ids */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13620:13627  amounts */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13629:13633  data */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13555:13634  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup5\n      dup2\n      sub\n      dup5\n      mstore\n      dup8\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_160:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_162\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_160)\n    tag_162:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13555:13634  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup2\n      sub\n      dup4\n      mstore\n      dup7\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_163:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_165\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_163)\n    tag_165:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13555:13634  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup2\n      sub\n      dup3\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_166:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_168\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_166)\n    tag_168:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13555:13634  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_169\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_169:\n      pop\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_170\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_170:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13555:13634  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_171\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_172\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_172:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13555:13634  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      0x01\n    tag_171:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13551:14038  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n      tag_173\n      jumpi\n      0x00\n        /* \"--CODEGEN--\":20:24   */\n      0x40\n        /* \"--CODEGEN--\":14:25   */\n      mload\n        /* \"--CODEGEN--\":6:25   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":43:44   */\n      0x00\n        /* \"--CODEGEN--\":37:41   */\n      dup2\n        /* \"--CODEGEN--\":30:45   */\n      mstore\n        /* \"--CODEGEN--\":57:58   */\n      0x01\n        /* \"--CODEGEN--\":50:780   */\n      iszero\n      tag_178\n      jumpi\n        /* \"--CODEGEN--\":93:97   */\n      0x44\n        /* \"--CODEGEN--\":75:91   */\n      returndatasize\n        /* \"--CODEGEN--\":72:98   */\n      lt\n        /* \"--CODEGEN--\":69:71   */\n      iszero\n      tag_179\n      jumpi\n        /* \"--CODEGEN--\":109:110   */\n      0x00\n        /* \"--CODEGEN--\":101:110   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":111:116   */\n      jump(tag_178)\n        /* \"--CODEGEN--\":69:71   */\n    tag_179:\n        /* \"--CODEGEN--\":145:146   */\n      0x04\n        /* \"--CODEGEN--\":142:143   */\n      0x00\n        /* \"--CODEGEN--\":139:140   */\n      dup1\n        /* \"--CODEGEN--\":124:147   */\n      returndatacopy\n        /* \"--CODEGEN--\":179:180   */\n      0x00\n        /* \"--CODEGEN--\":173:181   */\n      mload\n        /* \"--CODEGEN--\":168:171   */\n      0xe0\n        /* \"--CODEGEN--\":164:182   */\n      shr\n        /* \"--CODEGEN--\":206:216   */\n      0x08c379a0\n        /* \"--CODEGEN--\":201:204   */\n      dup2\n        /* \"--CODEGEN--\":198:217   */\n      eq\n        /* \"--CODEGEN--\":188:190   */\n      tag_180\n      jumpi\n        /* \"--CODEGEN--\":229:230   */\n      0x00\n        /* \"--CODEGEN--\":221:230   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":231:236   */\n      pop\n      jump(tag_178)\n        /* \"--CODEGEN--\":188:190   */\n    tag_180:\n        /* \"--CODEGEN--\":290:291   */\n      0x04\n        /* \"--CODEGEN--\":272:288   */\n      returndatasize\n        /* \"--CODEGEN--\":268:292   */\n      sub\n        /* \"--CODEGEN--\":265:266   */\n      0x04\n        /* \"--CODEGEN--\":259:263   */\n      dup4\n        /* \"--CODEGEN--\":244:293   */\n      returndatacopy\n        /* \"--CODEGEN--\":319:323   */\n      dup2\n        /* \"--CODEGEN--\":313:324   */\n      mload\n        /* \"--CODEGEN--\":403:419   */\n      returndatasize\n        /* \"--CODEGEN--\":396:400   */\n      0x24\n        /* \"--CODEGEN--\":388:394   */\n      dup3\n        /* \"--CODEGEN--\":384:401   */\n      add\n        /* \"--CODEGEN--\":381:420   */\n      gt\n        /* \"--CODEGEN--\":354:372   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":346:352   */\n      dup3\n        /* \"--CODEGEN--\":343:373   */\n      gt\n        /* \"--CODEGEN--\":333:427   */\n      or\n        /* \"--CODEGEN--\":330:332   */\n      iszero\n      tag_181\n      jumpi\n        /* \"--CODEGEN--\":444:445   */\n      0x00\n        /* \"--CODEGEN--\":436:445   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":452:457   */\n      pop\n      pop\n      jump(tag_178)\n        /* \"--CODEGEN--\":330:332   */\n    tag_181:\n        /* \"--CODEGEN--\":491:497   */\n      dup1\n        /* \"--CODEGEN--\":485:489   */\n      dup4\n        /* \"--CODEGEN--\":481:498   */\n      add\n        /* \"--CODEGEN--\":524:527   */\n      dup1\n        /* \"--CODEGEN--\":518:528   */\n      mload\n        /* \"--CODEGEN--\":548:566   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":540:546   */\n      dup2\n        /* \"--CODEGEN--\":537:567   */\n      gt\n        /* \"--CODEGEN--\":534:536   */\n      iszero\n      tag_182\n      jumpi\n        /* \"--CODEGEN--\":578:579   */\n      0x00\n        /* \"--CODEGEN--\":570:579   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":580:585   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_178)\n        /* \"--CODEGEN--\":534:536   */\n    tag_182:\n        /* \"--CODEGEN--\":624:630   */\n      dup1\n        /* \"--CODEGEN--\":617:621   */\n      0x20\n        /* \"--CODEGEN--\":612:615   */\n      dup4\n        /* \"--CODEGEN--\":608:622   */\n      add\n        /* \"--CODEGEN--\":604:631   */\n      add\n        /* \"--CODEGEN--\":658:674   */\n      returndatasize\n        /* \"--CODEGEN--\":652:656   */\n      dup7\n        /* \"--CODEGEN--\":648:675   */\n      add\n        /* \"--CODEGEN--\":643:646   */\n      dup2\n        /* \"--CODEGEN--\":640:676   */\n      gt\n        /* \"--CODEGEN--\":637:639   */\n      iszero\n      tag_183\n      jumpi\n        /* \"--CODEGEN--\":687:688   */\n      0x00\n        /* \"--CODEGEN--\":679:688   */\n      swap6\n      pop\n        /* \"--CODEGEN--\":689:694   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_178)\n        /* \"--CODEGEN--\":637:639   */\n    tag_183:\n        /* \"--CODEGEN--\":739:743   */\n      0x1f\n        /* \"--CODEGEN--\":735:744   */\n      not\n        /* \"--CODEGEN--\":728:732   */\n      0x1f\n        /* \"--CODEGEN--\":723:726   */\n      dup3\n        /* \"--CODEGEN--\":719:733   */\n      add\n        /* \"--CODEGEN--\":715:745   */\n      and\n        /* \"--CODEGEN--\":709:713   */\n      0x40\n        /* \"--CODEGEN--\":702:746   */\n      mstore\n        /* \"--CODEGEN--\":760:763   */\n      dup3\n        /* \"--CODEGEN--\":752:763   */\n      swap6\n      pop\n        /* \"--CODEGEN--\":769:774   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":50:780   */\n    tag_178:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13551:14038  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n      dup1\n      tag_184\n      jumpi\n      pop\n      jump(tag_175)\n    tag_184:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13914:13920  reason */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13907:13921  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_185:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_187\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_185)\n    tag_187:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13907:13921  revert(reason) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_188\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_188:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13551:14038  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_175:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13961:14023  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed\n      0x34\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13551:14038  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_173:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13695:13747  IERC1155Receiver(to).onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13683:13747  response != IERC1155Receiver(to).onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13683:13691  response */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13683:13747  response != IERC1155Receiver(to).onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13679:13840  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n      tag_190\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13771:13821  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13679:13840  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n    tag_190:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13635:13854  returns (bytes4 response) {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13516:14048  if (to.isContract()) {... */\n    tag_159:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13276:14054  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14060:14253  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_140:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14126:14142  uint256[] memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14154:14176  uint256[] memory array */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14193:14194  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14179:14195  new uint256[](1) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_192\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14179:14195  new uint256[](1) */\n      swap1\n      pop\n    tag_192:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14154:14195  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14216:14223  element */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14205:14210  array */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14211:14212  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14205:14213  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_193\n      jumpi\n      invalid\n    tag_193:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14205:14223  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14241:14246  array */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14234:14246  return array */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14060:14253  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12529:13270  function _doSafeTransferAcceptanceCheck(... */\n    tag_145:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12748:12763  to.isContract() */\n      tag_195\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12748:12750  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12748:12761  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_158\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12748:12763  to.isContract() */\n      jump\t// in\n    tag_195:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12744:13264  if (to.isContract()) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12800:12802  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12783:12821  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12822:12830  operator */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12832:12836  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12838:12840  id */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12842:12848  amount */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12850:12854  data */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12783:12855  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_197:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_199\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_197)\n    tag_199:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12783:12855  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_200\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_200:\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_201\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_201:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12783:12855  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_202\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_203\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_203:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12783:12855  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      0x01\n    tag_202:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12779:13254  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_204\n      jumpi\n      0x00\n        /* \"--CODEGEN--\":20:24   */\n      0x40\n        /* \"--CODEGEN--\":14:25   */\n      mload\n        /* \"--CODEGEN--\":6:25   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":43:44   */\n      0x00\n        /* \"--CODEGEN--\":37:41   */\n      dup2\n        /* \"--CODEGEN--\":30:45   */\n      mstore\n        /* \"--CODEGEN--\":57:58   */\n      0x01\n        /* \"--CODEGEN--\":50:780   */\n      iszero\n      tag_209\n      jumpi\n        /* \"--CODEGEN--\":93:97   */\n      0x44\n        /* \"--CODEGEN--\":75:91   */\n      returndatasize\n        /* \"--CODEGEN--\":72:98   */\n      lt\n        /* \"--CODEGEN--\":69:71   */\n      iszero\n      tag_210\n      jumpi\n        /* \"--CODEGEN--\":109:110   */\n      0x00\n        /* \"--CODEGEN--\":101:110   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":111:116   */\n      jump(tag_209)\n        /* \"--CODEGEN--\":69:71   */\n    tag_210:\n        /* \"--CODEGEN--\":145:146   */\n      0x04\n        /* \"--CODEGEN--\":142:143   */\n      0x00\n        /* \"--CODEGEN--\":139:140   */\n      dup1\n        /* \"--CODEGEN--\":124:147   */\n      returndatacopy\n        /* \"--CODEGEN--\":179:180   */\n      0x00\n        /* \"--CODEGEN--\":173:181   */\n      mload\n        /* \"--CODEGEN--\":168:171   */\n      0xe0\n        /* \"--CODEGEN--\":164:182   */\n      shr\n        /* \"--CODEGEN--\":206:216   */\n      0x08c379a0\n        /* \"--CODEGEN--\":201:204   */\n      dup2\n        /* \"--CODEGEN--\":198:217   */\n      eq\n        /* \"--CODEGEN--\":188:190   */\n      tag_211\n      jumpi\n        /* \"--CODEGEN--\":229:230   */\n      0x00\n        /* \"--CODEGEN--\":221:230   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":231:236   */\n      pop\n      jump(tag_209)\n        /* \"--CODEGEN--\":188:190   */\n    tag_211:\n        /* \"--CODEGEN--\":290:291   */\n      0x04\n        /* \"--CODEGEN--\":272:288   */\n      returndatasize\n        /* \"--CODEGEN--\":268:292   */\n      sub\n        /* \"--CODEGEN--\":265:266   */\n      0x04\n        /* \"--CODEGEN--\":259:263   */\n      dup4\n        /* \"--CODEGEN--\":244:293   */\n      returndatacopy\n        /* \"--CODEGEN--\":319:323   */\n      dup2\n        /* \"--CODEGEN--\":313:324   */\n      mload\n        /* \"--CODEGEN--\":403:419   */\n      returndatasize\n        /* \"--CODEGEN--\":396:400   */\n      0x24\n        /* \"--CODEGEN--\":388:394   */\n      dup3\n        /* \"--CODEGEN--\":384:401   */\n      add\n        /* \"--CODEGEN--\":381:420   */\n      gt\n        /* \"--CODEGEN--\":354:372   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":346:352   */\n      dup3\n        /* \"--CODEGEN--\":343:373   */\n      gt\n        /* \"--CODEGEN--\":333:427   */\n      or\n        /* \"--CODEGEN--\":330:332   */\n      iszero\n      tag_212\n      jumpi\n        /* \"--CODEGEN--\":444:445   */\n      0x00\n        /* \"--CODEGEN--\":436:445   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":452:457   */\n      pop\n      pop\n      jump(tag_209)\n        /* \"--CODEGEN--\":330:332   */\n    tag_212:\n        /* \"--CODEGEN--\":491:497   */\n      dup1\n        /* \"--CODEGEN--\":485:489   */\n      dup4\n        /* \"--CODEGEN--\":481:498   */\n      add\n        /* \"--CODEGEN--\":524:527   */\n      dup1\n        /* \"--CODEGEN--\":518:528   */\n      mload\n        /* \"--CODEGEN--\":548:566   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":540:546   */\n      dup2\n        /* \"--CODEGEN--\":537:567   */\n      gt\n        /* \"--CODEGEN--\":534:536   */\n      iszero\n      tag_213\n      jumpi\n        /* \"--CODEGEN--\":578:579   */\n      0x00\n        /* \"--CODEGEN--\":570:579   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":580:585   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_209)\n        /* \"--CODEGEN--\":534:536   */\n    tag_213:\n        /* \"--CODEGEN--\":624:630   */\n      dup1\n        /* \"--CODEGEN--\":617:621   */\n      0x20\n        /* \"--CODEGEN--\":612:615   */\n      dup4\n        /* \"--CODEGEN--\":608:622   */\n      add\n        /* \"--CODEGEN--\":604:631   */\n      add\n        /* \"--CODEGEN--\":658:674   */\n      returndatasize\n        /* \"--CODEGEN--\":652:656   */\n      dup7\n        /* \"--CODEGEN--\":648:675   */\n      add\n        /* \"--CODEGEN--\":643:646   */\n      dup2\n        /* \"--CODEGEN--\":640:676   */\n      gt\n        /* \"--CODEGEN--\":637:639   */\n      iszero\n      tag_214\n      jumpi\n        /* \"--CODEGEN--\":687:688   */\n      0x00\n        /* \"--CODEGEN--\":679:688   */\n      swap6\n      pop\n        /* \"--CODEGEN--\":689:694   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_209)\n        /* \"--CODEGEN--\":637:639   */\n    tag_214:\n        /* \"--CODEGEN--\":739:743   */\n      0x1f\n        /* \"--CODEGEN--\":735:744   */\n      not\n        /* \"--CODEGEN--\":728:732   */\n      0x1f\n        /* \"--CODEGEN--\":723:726   */\n      dup3\n        /* \"--CODEGEN--\":719:733   */\n      add\n        /* \"--CODEGEN--\":715:745   */\n      and\n        /* \"--CODEGEN--\":709:713   */\n      0x40\n        /* \"--CODEGEN--\":702:746   */\n      mstore\n        /* \"--CODEGEN--\":760:763   */\n      dup3\n        /* \"--CODEGEN--\":752:763   */\n      swap6\n      pop\n        /* \"--CODEGEN--\":769:774   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":50:780   */\n    tag_209:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12779:13254  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      dup1\n      tag_215\n      jumpi\n      pop\n      jump(tag_206)\n    tag_215:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13130:13136  reason */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13123:13137  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_216:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_218\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_216)\n    tag_218:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13123:13137  revert(reason) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_219\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_219:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12779:13254  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_206:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13177:13239  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed\n      0x34\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12779:13254  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_204:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12916:12963  IERC1155Receiver(to).onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12904:12963  response != IERC1155Receiver(to).onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12904:12912  response */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12904:12963  response != IERC1155Receiver(to).onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12900:13056  if (response != IERC1155Receiver(to).onERC1155Received.selector) {... */\n      tag_221\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12987:13037  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12900:13056  if (response != IERC1155Receiver(to).onERC1155Received.selector) {... */\n    tag_221:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12856:13070  returns (bytes4 response) {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12744:13264  if (to.isContract()) {... */\n    tag_196:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12529:13270  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n    tag_158:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":778:782  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":981:993  uint256 size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1090:1097  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1078:1098  extcodesize(account) */\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1070:1098  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1123:1124  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1116:1120  size */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1116:1124  size > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1109:1124  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed 455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572\n    data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503 455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73\n    data_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9 455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373\n    data_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c 455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373\n    data_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a 455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564\n    data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d 455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686 455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564\n    data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf 455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572\n    data_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2 455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66\n    data_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5 455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368\n    data_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807 455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368\n\n    auxdata: 0xa2646970667358221220a0da423d1858c5357054a08eaab99fcec179822e65bac57f5bcb85c1e80b7f0a64736f6c63430006020033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060600160405280603f815260200162002dc4603f9139620000446301ffc9a760e01b6200015d60201b60201c565b62000055816200026660201b60201c565b6200006d63d9b67a2660e01b6200015d60201b60201c565b62000085630e89341c60e01b6200015d60201b60201c565b50620000b2336000670de0b6b3a7640000604051806020016040528060008152506200028260201b60201c565b620000e23360016b033b2e3c9fd0803ce8000000604051806020016040528060008152506200028260201b60201c565b620001073360026001604051806020016040528060008152506200028260201b60201c565b6200012f336003633b9aca00604051806020016040528060008152506200028260201b60201c565b62000157336004633b9aca00604051806020016040528060008152506200028260201b60201c565b62000a8a565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b80600390805190602001906200027e929190620009db565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156200030a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018062002e036021913960400191505060405180910390fd5b60006200031c620004b660201b60201c565b905062000355816000876200033788620004be60201b60201c565b6200034888620004be60201b60201c565b876200051960201b60201c565b620003bf836001600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200052160201b6200175a1790919060201c565b6001600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4620004af81600087878787620005aa60201b60201c565b5050505050565b600033905090565b6060806001604051908082528060200260200182016040528015620004f25781602001602082028038833980820191505090505b50905082816000815181106200050457fe5b60200260200101818152505080915050919050565b505050505050565b600080828401905083811015620005a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b620005d68473ffffffffffffffffffffffffffffffffffffffff16620009c860201b620020a91760201c565b15620009c0578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015620006be578082015181840152602081019050620006a1565b50505050905090810190601f168015620006ec5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b1580156200071057600080fd5b505af19250505080156200074657506040513d60208110156200073257600080fd5b810190808051906020019092919050505060015b6200091f5760006040519050600081526001156200081b5760443d10156200077257600090506200081b565b60046000803e60005160e01c6308c379a08114620007955760009150506200081b565b60043d036004833e81513d602482011167ffffffffffffffff82111715620007c3576000925050506200081b565b808301805167ffffffffffffffff811115620007e75760009450505050506200081b565b8060208301013d860181111562000807576000955050505050506200081b565b601f19601f82011660405282955050505050505b80620008285750620008cd565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200089157808201518184015260208101905062000874565b50505050905090810190601f168015620008bf5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603481526020018062002d686034913960400191505060405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614620009be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018062002d9c6028913960400191505060405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000a1e57805160ff191683800117855562000a4f565b8280016001018555821562000a4f579182015b8281111562000a4e57825182559160200191906001019062000a31565b5b50905062000a5e919062000a62565b5090565b62000a8791905b8082111562000a8357600081600090555060010162000a69565b5090565b90565b6122ce8062000a9a6000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80634e1273f41161008c578063d562e20411610066578063d562e204146106af578063e3e55f08146106cd578063e985e9c5146106eb578063f242432a14610767576100ce565b80634e1273f4146104a05780635b2725ed14610641578063a22cb4651461065f576100ce565b8062fdd58e146100d357806301ffc9a7146101355780630e89341c1461019a57806313dc989f146102415780632eb2c2d61461025f5780633e4bee3814610482575b600080fd5b61011f600480360360408110156100e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610876565b6040518082815260200191505060405180910390f35b6101806004803603602081101561014b57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610956565b604051808215151515815260200191505060405180910390f35b6101c6600480360360208110156101b057600080fd5b81019080803590602001909291905050506109bd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102065780820151818401526020810190506101eb565b50505050905090810190601f1680156102335780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610249610a61565b6040518082815260200191505060405180910390f35b610480600480360360a081101561027557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102d257600080fd5b8201836020820111156102e457600080fd5b8035906020019184602083028401116401000000008311171561030657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561036657600080fd5b82018360208201111561037857600080fd5b8035906020019184602083028401116401000000008311171561039a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103fa57600080fd5b82018360208201111561040c57600080fd5b8035906020019184600183028401116401000000008311171561042e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610a66565b005b61048a610ef4565b6040518082815260200191505060405180910390f35b6105ea600480360360408110156104b657600080fd5b81019080803590602001906401000000008111156104d357600080fd5b8201836020820111156104e557600080fd5b8035906020019184602083028401116401000000008311171561050757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561056757600080fd5b82018360208201111561057957600080fd5b8035906020019184602083028401116401000000008311171561059b57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610ef9565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561062d578082015181840152602081019050610612565b505050509050019250505060405180910390f35b6106496110d7565b6040518082815260200191505060405180910390f35b6106ad6004803603604081101561067557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506110dc565b005b6106b7611277565b6040518082815260200191505060405180910390f35b6106d561127c565b6040518082815260200191505060405180910390f35b61074d6004803603604081101561070157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611281565b604051808215151515815260200191505060405180910390f35b610874600480360360a081101561077d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001906401000000008111156107ee57600080fd5b82018360208201111561080057600080fd5b8035906020019184600183028401116401000000008311171561082257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611315565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612119602b913960400191505060405180910390fd5b6001600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a555780601f10610a2a57610100808354040283529160200191610a55565b820191906000526020600020905b815481529060010190602001808311610a3857829003601f168201915b50505050509050919050565b600381565b8151835114610ac0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806122716028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610b46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061219e6025913960400191505060405180910390fd5b610b4e61168a565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480610b945750610b9385610b8e61168a565b611281565b5b610be9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806121c36032913960400191505060405180910390fd5b6000610bf361168a565b9050610c03818787878787611692565b60008090505b8451811015610dd7576000858281518110610c2057fe5b602002602001015190506000858381518110610c3857fe5b60200260200101519050610cbf816040518060600160405280602a81526020016121f5602a91396001600086815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461169a9092919063ffffffff16565b6001600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d76816001600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461175a90919063ffffffff16565b6001600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050806001019050610c09565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610e87578082015181840152602081019050610e6c565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015610ec9578082015181840152602081019050610eae565b5050505090500194505050505060405180910390a4610eec8187878787876117e2565b505050505050565b600081565b60608151835114610f55576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806122486029913960400191505060405180910390fd5b60608351604051908082528060200260200182016040528015610f875781602001602082028038833980820191505090505b50905060008090505b84518110156110cc57600073ffffffffffffffffffffffffffffffffffffffff16858281518110610fbd57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415611032576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806121446031913960400191505060405180910390fd5b6001600085838151811061104257fe5b60200260200101518152602001908152602001600020600086838151811061106657fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548282815181106110b557fe5b602002602001018181525050806001019050610f90565b508091505092915050565b600481565b8173ffffffffffffffffffffffffffffffffffffffff166110fb61168a565b73ffffffffffffffffffffffffffffffffffffffff161415611168576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061221f6029913960400191505060405180910390fd5b806002600061117561168a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661122261168a565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b600281565b600181565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561139b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061219e6025913960400191505060405180910390fd5b6113a361168a565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806113e957506113e8856113e361168a565b611281565b5b61143e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806121756029913960400191505060405180910390fd5b600061144861168a565b905061146881878761145988611c5a565b61146288611c5a565b87611692565b6114e5836040518060600160405280602a81526020016121f5602a91396001600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461169a9092919063ffffffff16565b6001600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061159c836001600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461175a90919063ffffffff16565b6001600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4611682818787878787611cb3565b505050505050565b600033905090565b505050505050565b6000838311158290611747576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561170c5780820151818401526020810190506116f1565b50505050905090810190601f1680156117395780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156117d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6118018473ffffffffffffffffffffffffffffffffffffffff166120a9565b15611c52578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156118e55780820151818401526020810190506118ca565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561192757808201518184015260208101905061190c565b50505050905001848103825285818151815260200191508051906020019080838360005b8381101561196657808201518184015260208101905061194b565b50505050905090810190601f1680156119935780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1580156119b857600080fd5b505af19250505080156119ec57506040513d60208110156119d857600080fd5b810190808051906020019092919050505060015b611bb3576000604051905060008152600115611ab55760443d1015611a145760009050611ab5565b60046000803e60005160e01c6308c379a08114611a35576000915050611ab5565b60043d036004833e81513d602482011167ffffffffffffffff82111715611a6157600092505050611ab5565b808301805167ffffffffffffffff811115611a83576000945050505050611ab5565b8060208301013d8601811115611aa157600095505050505050611ab5565b601f19601f82011660405282955050505050505b80611ac05750611b62565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611b27578082015181840152602081019050611b0c565b50505050905090810190601f168015611b545780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806120bd6034913960400191505060405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611c50576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806120f16028913960400191505060405180910390fd5b505b505050505050565b6060806001604051908082528060200260200182016040528015611c8d5781602001602082028038833980820191505090505b5090508281600081518110611c9e57fe5b60200260200101818152505080915050919050565b611cd28473ffffffffffffffffffffffffffffffffffffffff166120a9565b156120a1578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611db7578082015181840152602081019050611d9c565b50505050905090810190601f168015611de45780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015611e0757600080fd5b505af1925050508015611e3b57506040513d6020811015611e2757600080fd5b810190808051906020019092919050505060015b612002576000604051905060008152600115611f045760443d1015611e635760009050611f04565b60046000803e60005160e01c6308c379a08114611e84576000915050611f04565b60043d036004833e81513d602482011167ffffffffffffffff82111715611eb057600092505050611f04565b808301805167ffffffffffffffff811115611ed2576000945050505050611f04565b8060208301013d8601811115611ef057600095505050505050611f04565b601f19601f82011660405282955050505050505b80611f0f5750611fb1565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f76578082015181840152602081019050611f5b565b50505050905090810190601f168015611fa35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806120bd6034913960400191505060405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461209f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806120f16028913960400191505060405180910390fd5b505b505050505050565b600080823b90506000811191505091905056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368a2646970667358221220a0da423d1858c5357054a08eaab99fcec179822e65bac57f5bcb85c1e80b7f0a64736f6c63430006020033455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73697066733a2f2f516d5a394a513477513739376b39367350676333314e46563851664a71413277577068743774687a5569335035442f7b69647d2e6a736f6e455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2DC4 PUSH1 0x3F SWAP2 CODECOPY PUSH3 0x44 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH3 0x15D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x55 DUP2 PUSH3 0x266 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x6D PUSH4 0xD9B67A26 PUSH1 0xE0 SHL PUSH3 0x15D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x85 PUSH4 0xE89341C PUSH1 0xE0 SHL PUSH3 0x15D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xB2 CALLER PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x282 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE2 CALLER PUSH1 0x1 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x282 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x107 CALLER PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x282 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x12F CALLER PUSH1 0x3 PUSH4 0x3B9ACA00 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x282 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x157 CALLER PUSH1 0x4 PUSH4 0x3B9ACA00 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x282 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA8A JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO PUSH3 0x1FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552433136353A20696E76616C696420696E7465726661636520696400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x27E SWAP3 SWAP2 SWAP1 PUSH3 0x9DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x30A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x2E03 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x31C PUSH3 0x4B6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x355 DUP2 PUSH1 0x0 DUP8 PUSH3 0x337 DUP9 PUSH3 0x4BE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x348 DUP9 PUSH3 0x4BE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP8 PUSH3 0x519 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3BF DUP4 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH3 0x521 PUSH1 0x20 SHL PUSH3 0x175A OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH3 0x4AF DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH3 0x5AA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x1 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x4F2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x504 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH3 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x5D6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x9C8 PUSH1 0x20 SHL PUSH3 0x20A9 OR PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x9C0 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x6BE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x6A1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x6EC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x710 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x746 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 JUMPDEST PUSH3 0x91F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 ISZERO PUSH3 0x81B JUMPI PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH3 0x772 JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0x81B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0xE0 SHR PUSH4 0x8C379A0 DUP2 EQ PUSH3 0x795 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH3 0x81B JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x7C3 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH3 0x81B JUMP JUMPDEST DUP1 DUP4 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x7E7 JUMPI PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH3 0x81B JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD RETURNDATASIZE DUP7 ADD DUP2 GT ISZERO PUSH3 0x807 JUMPI PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH3 0x81B JUMP JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST DUP1 PUSH3 0x828 JUMPI POP PUSH3 0x8CD JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x891 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x874 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x8BF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x2D68 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH3 0x9BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x2D9C PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0xA1E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xA4F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xA4F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xA4E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xA31 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xA5E SWAP2 SWAP1 PUSH3 0xA62 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0xA87 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xA83 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0xA69 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x22CE DUP1 PUSH3 0xA9A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD562E204 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD562E204 EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0xE3E55F08 EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x767 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0x5B2725ED EQ PUSH2 0x641 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x65F JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x13DC989F EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x3E4BEE38 EQ PUSH2 0x482 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x876 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x956 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x206 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x233 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH2 0xA61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x480 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xA66 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48A PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x62D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x612 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x649 PUSH2 0x10D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B7 PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6D5 PUSH2 0x127C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x874 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x1315 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2119 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA55 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA2A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA55 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA38 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xAC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2271 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x219E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB4E PUSH2 0x168A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB94 JUMPI POP PUSH2 0xB93 DUP6 PUSH2 0xB8E PUSH2 0x168A JUMP JUMPDEST PUSH2 0x1281 JUMP JUMPDEST JUMPDEST PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21C3 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBF3 PUSH2 0x168A JUMP JUMPDEST SWAP1 POP PUSH2 0xC03 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1692 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC20 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC38 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0xCBF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F5 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x169A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD76 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x175A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xC09 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE87 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE6C JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEC9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEAE JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xEEC DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x17E2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2248 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF87 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x10CC JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFBD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1032 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2144 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1042 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1066 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10B5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xF90 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10FB PUSH2 0x168A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1168 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x221F PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x1175 PUSH2 0x168A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1222 PUSH2 0x168A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x139B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x219E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13A3 PUSH2 0x168A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x13E9 JUMPI POP PUSH2 0x13E8 DUP6 PUSH2 0x13E3 PUSH2 0x168A JUMP JUMPDEST PUSH2 0x1281 JUMP JUMPDEST JUMPDEST PUSH2 0x143E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2175 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1448 PUSH2 0x168A JUMP JUMPDEST SWAP1 POP PUSH2 0x1468 DUP2 DUP8 DUP8 PUSH2 0x1459 DUP9 PUSH2 0x1C5A JUMP JUMPDEST PUSH2 0x1462 DUP9 PUSH2 0x1C5A JUMP JUMPDEST DUP8 PUSH2 0x1692 JUMP JUMPDEST PUSH2 0x14E5 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F5 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x169A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x159C DUP4 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x175A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1682 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1CB3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1747 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x170C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16F1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1739 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x17D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1801 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20A9 JUMP JUMPDEST ISZERO PUSH2 0x1C52 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18E5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18CA JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1927 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x190C JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1966 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x194B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1993 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19EC JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 JUMPDEST PUSH2 0x1BB3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 ISZERO PUSH2 0x1AB5 JUMPI PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1A14 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0xE0 SHR PUSH4 0x8C379A0 DUP2 EQ PUSH2 0x1A35 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A61 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x1AB5 JUMP JUMPDEST DUP1 DUP4 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A83 JUMPI PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0x1AB5 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD RETURNDATASIZE DUP7 ADD DUP2 GT ISZERO PUSH2 0x1AA1 JUMPI PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST DUP1 PUSH2 0x1AC0 JUMPI POP PUSH2 0x1B62 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B27 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B0C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B54 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20BD PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1C50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20F1 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x1 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C8D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1C9E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20A9 JUMP JUMPDEST ISZERO PUSH2 0x20A1 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DB7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D9C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1DE4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1E3B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 JUMPDEST PUSH2 0x2002 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 ISZERO PUSH2 0x1F04 JUMPI PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1E63 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1F04 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0xE0 SHR PUSH4 0x8C379A0 DUP2 EQ PUSH2 0x1E84 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1F04 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1EB0 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x1F04 JUMP JUMPDEST DUP1 DUP4 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ED2 JUMPI PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0x1F04 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD RETURNDATASIZE DUP7 ADD DUP2 GT ISZERO PUSH2 0x1EF0 JUMPI PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH2 0x1F04 JUMP JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST DUP1 PUSH2 0x1F0F JUMPI POP PUSH2 0x1FB1 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F76 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F5B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1FA3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20BD PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x209F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20F1 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243313135 CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH19 0x656A656374656420746F6B656E734552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2062617463682062 PUSH2 0x6C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2063616C6C657220 PUSH10 0x73206E6F74206F776E65 PUSH19 0x206E6F7220617070726F766564455243313135 CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0x4552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F72207472616E73666572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH20 0x657474696E6720617070726F76616C2073746174 PUSH22 0x7320666F722073656C66455243313135353A20616363 PUSH16 0x756E747320616E6420696473206C656E PUSH8 0x7468206D69736D61 PUSH21 0x6368455243313135353A2069647320616E6420616D PUSH16 0x756E7473206C656E677468206D69736D PUSH2 0x7463 PUSH9 0xA26469706673582212 KECCAK256 LOG0 0xDA TIMESTAMP RETURNDATASIZE XOR PC 0xC5 CALLDATALOAD PUSH17 0x54A08EAAB99FCEC179822E65BAC57F5BCB DUP6 0xC1 0xE8 SIGNEXTEND PUSH32 0xA64736F6C63430006020033455243313135353A207472616E7366657220746F KECCAK256 PUSH15 0x6F6E20455243313135355265636569 PUSH23 0x657220696D706C656D656E746572455243313135353A20 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH19 0x656A656374656420746F6B656E73697066733A 0x2F 0x2F MLOAD PUSH14 0x5A394A513477513739376B393673 POP PUSH8 0x6333314E46563851 PUSH7 0x4A714132775770 PUSH9 0x743774687A55693350 CALLDATALOAD DIFFICULTY 0x2F PUSH28 0x69647D2E6A736F6E455243313135353A206D696E7420746F20746865 KECCAK256 PUSH27 0x65726F206164647265737300000000000000000000000000000000 ",
							"sourceMap": "204:590:0:-:0;;;451:340;8:9:-1;5:2;;;30:1;27;20:12;5:2;451:340:0;1966:352:5;;;;;;;;;;;;;;;;;751:40:2;418:10;770:20;;751:18;;;:40;;:::i;:::-;2015:12:5;2023:3;2015:7;;;:12;;:::i;:::-;2116:41;1754:10;2135:21;;2116:18;;;:41;;:::i;:::-;2257:54;1906:10;2276:34;;2257:18;;;:54;;:::i;:::-;1966:352;558:35:0::1;564:10;272:1;582:6;558:35;;;;;;;;;;;::::0;:5:::1;;;:35;;:::i;:::-;604:37;610:10;313:1;630:6;604:37;;;;;;;;;;;::::0;:5:::1;;;:37;;:::i;:::-;652:38;658:10;360:1;684;652:38;;;;;;;;;;;::::0;:5:::1;;;:38;;:::i;:::-;701:35;707:10;400:1;726:5;701:35;;;;;;;;;;;::::0;:5:::1;;;:35;;:::i;:::-;747:36;753:10;441:1;773:5;747:36;;;;;;;;;;;::::0;:5:::1;;;:36;;:::i;:::-;204:590:::0;;1482:198:2;1580:10;1565:25;;:11;:25;;;;;1557:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1669:4;1633:20;:33;1654:11;1633:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1482:198;:::o;7590:86:5:-;7663:6;7656:4;:13;;;;;;;;;;;;:::i;:::-;;7590:86;:::o;8059:572::-;8192:1;8173:21;;:7;:21;;;;8165:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8243:16;8262:12;:10;;;:12;;:::i;:::-;8243:31;;8285:107;8306:8;8324:1;8328:7;8337:21;8355:2;8337:17;;;:21;;:::i;:::-;8360:25;8378:6;8360:17;;;:25;;:::i;:::-;8387:4;8285:20;;;:107;;:::i;:::-;8428:34;8455:6;8428:9;:13;8438:2;8428:13;;;;;;;;;;;:22;8442:7;8428:22;;;;;;;;;;;;;;;;:26;;;;;;:34;;;;:::i;:::-;8403:9;:13;8413:2;8403:13;;;;;;;;;;;:22;8417:7;8403:22;;;;;;;;;;;;;;;:59;;;;8514:7;8477:57;;8510:1;8477:57;;8492:8;8477:57;;;8523:2;8527:6;8477:57;;;;;;;;;;;;;;;;;;;;;;;;8545:79;8576:8;8594:1;8598:7;8607:2;8611:6;8619:4;8545:30;;;:79;;:::i;:::-;8059:572;;;;;:::o;590:104:1:-;643:15;677:10;670:17;;590:104;:::o;14060:193:5:-;14126:16;14154:22;14193:1;14179:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;14179:16:5;;;;14154:41;;14216:7;14205:5;14211:1;14205:8;;;;;;;;;;;;;:18;;;;;14241:5;14234:12;;;14060:193;;;:::o;12296:227::-;;;;;;;:::o;874:176:4:-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;12529:741:5:-;12748:15;:2;:13;;;;;;;:15;;:::i;:::-;12744:520;;;12800:2;12783:38;;;12822:8;12832:4;12838:2;12842:6;12850:4;12783:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12783:72:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12783:72:5;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12783:72:5;;;;;;;;;;;;;;;;;;12779:475;;;20:4:-1;14:11;6:19;;43:1;37:4;30:15;57:1;50:730;;;93:4;75:16;72:26;69:2;;;109:1;101:9;;111:5;;69:2;145:1;142;139;124:23;179:1;173:8;168:3;164:18;206:10;201:3;198:19;188:2;;229:1;221:9;;231:5;;;188:2;290:1;272:16;268:24;265:1;259:4;244:49;319:4;313:11;403:16;396:4;388:6;384:17;381:39;354:18;346:6;343:30;333:94;330:2;;;444:1;436:9;;452:5;;;;330:2;491:6;485:4;481:17;524:3;518:10;548:18;540:6;537:30;534:2;;;578:1;570:9;;580:5;;;;;;534:2;624:6;617:4;612:3;608:14;604:27;658:16;652:4;648:27;643:3;640:36;637:2;;;687:1;679:9;;689:5;;;;;;;637:2;739:4;735:9;728:4;723:3;719:14;715:30;709:4;702:44;760:3;752:11;;769:5;;;;;50:730;12779:475:5;;;;;;;13130:6;13123:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13123::5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12779:475;13177:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12779:475;12916:47;;;12904:59;;;:8;:59;;;;12900:156;;12987:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12900:156;12856:214;12744:520;12529:741;;;;;;:::o;718:413:9:-;778:4;981:12;1090:7;1078:20;1070:28;;1123:1;1116:4;:8;1109:15;;;718:413;;;:::o;204:590:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ce5760003560e01c80634e1273f41161008c578063d562e20411610066578063d562e204146106af578063e3e55f08146106cd578063e985e9c5146106eb578063f242432a14610767576100ce565b80634e1273f4146104a05780635b2725ed14610641578063a22cb4651461065f576100ce565b8062fdd58e146100d357806301ffc9a7146101355780630e89341c1461019a57806313dc989f146102415780632eb2c2d61461025f5780633e4bee3814610482575b600080fd5b61011f600480360360408110156100e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610876565b6040518082815260200191505060405180910390f35b6101806004803603602081101561014b57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610956565b604051808215151515815260200191505060405180910390f35b6101c6600480360360208110156101b057600080fd5b81019080803590602001909291905050506109bd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102065780820151818401526020810190506101eb565b50505050905090810190601f1680156102335780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610249610a61565b6040518082815260200191505060405180910390f35b610480600480360360a081101561027557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102d257600080fd5b8201836020820111156102e457600080fd5b8035906020019184602083028401116401000000008311171561030657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561036657600080fd5b82018360208201111561037857600080fd5b8035906020019184602083028401116401000000008311171561039a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103fa57600080fd5b82018360208201111561040c57600080fd5b8035906020019184600183028401116401000000008311171561042e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610a66565b005b61048a610ef4565b6040518082815260200191505060405180910390f35b6105ea600480360360408110156104b657600080fd5b81019080803590602001906401000000008111156104d357600080fd5b8201836020820111156104e557600080fd5b8035906020019184602083028401116401000000008311171561050757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561056757600080fd5b82018360208201111561057957600080fd5b8035906020019184602083028401116401000000008311171561059b57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610ef9565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561062d578082015181840152602081019050610612565b505050509050019250505060405180910390f35b6106496110d7565b6040518082815260200191505060405180910390f35b6106ad6004803603604081101561067557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506110dc565b005b6106b7611277565b6040518082815260200191505060405180910390f35b6106d561127c565b6040518082815260200191505060405180910390f35b61074d6004803603604081101561070157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611281565b604051808215151515815260200191505060405180910390f35b610874600480360360a081101561077d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001906401000000008111156107ee57600080fd5b82018360208201111561080057600080fd5b8035906020019184600183028401116401000000008311171561082257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611315565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612119602b913960400191505060405180910390fd5b6001600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a555780601f10610a2a57610100808354040283529160200191610a55565b820191906000526020600020905b815481529060010190602001808311610a3857829003601f168201915b50505050509050919050565b600381565b8151835114610ac0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806122716028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610b46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061219e6025913960400191505060405180910390fd5b610b4e61168a565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480610b945750610b9385610b8e61168a565b611281565b5b610be9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806121c36032913960400191505060405180910390fd5b6000610bf361168a565b9050610c03818787878787611692565b60008090505b8451811015610dd7576000858281518110610c2057fe5b602002602001015190506000858381518110610c3857fe5b60200260200101519050610cbf816040518060600160405280602a81526020016121f5602a91396001600086815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461169a9092919063ffffffff16565b6001600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d76816001600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461175a90919063ffffffff16565b6001600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050806001019050610c09565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610e87578082015181840152602081019050610e6c565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015610ec9578082015181840152602081019050610eae565b5050505090500194505050505060405180910390a4610eec8187878787876117e2565b505050505050565b600081565b60608151835114610f55576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806122486029913960400191505060405180910390fd5b60608351604051908082528060200260200182016040528015610f875781602001602082028038833980820191505090505b50905060008090505b84518110156110cc57600073ffffffffffffffffffffffffffffffffffffffff16858281518110610fbd57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415611032576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806121446031913960400191505060405180910390fd5b6001600085838151811061104257fe5b60200260200101518152602001908152602001600020600086838151811061106657fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548282815181106110b557fe5b602002602001018181525050806001019050610f90565b508091505092915050565b600481565b8173ffffffffffffffffffffffffffffffffffffffff166110fb61168a565b73ffffffffffffffffffffffffffffffffffffffff161415611168576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061221f6029913960400191505060405180910390fd5b806002600061117561168a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661122261168a565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b600281565b600181565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561139b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061219e6025913960400191505060405180910390fd5b6113a361168a565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806113e957506113e8856113e361168a565b611281565b5b61143e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806121756029913960400191505060405180910390fd5b600061144861168a565b905061146881878761145988611c5a565b61146288611c5a565b87611692565b6114e5836040518060600160405280602a81526020016121f5602a91396001600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461169a9092919063ffffffff16565b6001600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061159c836001600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461175a90919063ffffffff16565b6001600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4611682818787878787611cb3565b505050505050565b600033905090565b505050505050565b6000838311158290611747576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561170c5780820151818401526020810190506116f1565b50505050905090810190601f1680156117395780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156117d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6118018473ffffffffffffffffffffffffffffffffffffffff166120a9565b15611c52578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156118e55780820151818401526020810190506118ca565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561192757808201518184015260208101905061190c565b50505050905001848103825285818151815260200191508051906020019080838360005b8381101561196657808201518184015260208101905061194b565b50505050905090810190601f1680156119935780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1580156119b857600080fd5b505af19250505080156119ec57506040513d60208110156119d857600080fd5b810190808051906020019092919050505060015b611bb3576000604051905060008152600115611ab55760443d1015611a145760009050611ab5565b60046000803e60005160e01c6308c379a08114611a35576000915050611ab5565b60043d036004833e81513d602482011167ffffffffffffffff82111715611a6157600092505050611ab5565b808301805167ffffffffffffffff811115611a83576000945050505050611ab5565b8060208301013d8601811115611aa157600095505050505050611ab5565b601f19601f82011660405282955050505050505b80611ac05750611b62565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611b27578082015181840152602081019050611b0c565b50505050905090810190601f168015611b545780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806120bd6034913960400191505060405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611c50576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806120f16028913960400191505060405180910390fd5b505b505050505050565b6060806001604051908082528060200260200182016040528015611c8d5781602001602082028038833980820191505090505b5090508281600081518110611c9e57fe5b60200260200101818152505080915050919050565b611cd28473ffffffffffffffffffffffffffffffffffffffff166120a9565b156120a1578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611db7578082015181840152602081019050611d9c565b50505050905090810190601f168015611de45780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015611e0757600080fd5b505af1925050508015611e3b57506040513d6020811015611e2757600080fd5b810190808051906020019092919050505060015b612002576000604051905060008152600115611f045760443d1015611e635760009050611f04565b60046000803e60005160e01c6308c379a08114611e84576000915050611f04565b60043d036004833e81513d602482011167ffffffffffffffff82111715611eb057600092505050611f04565b808301805167ffffffffffffffff811115611ed2576000945050505050611f04565b8060208301013d8601811115611ef057600095505050505050611f04565b601f19601f82011660405282955050505050505b80611f0f5750611fb1565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f76578082015181840152602081019050611f5b565b50505050905090810190601f168015611fa35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806120bd6034913960400191505060405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461209f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806120f16028913960400191505060405180910390fd5b505b505050505050565b600080823b90506000811191505091905056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368a2646970667358221220a0da423d1858c5357054a08eaab99fcec179822e65bac57f5bcb85c1e80b7f0a64736f6c63430006020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD562E204 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD562E204 EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0xE3E55F08 EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x767 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0x5B2725ED EQ PUSH2 0x641 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x65F JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x13DC989F EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x3E4BEE38 EQ PUSH2 0x482 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x876 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x956 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x206 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x233 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH2 0xA61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x480 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xA66 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48A PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x62D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x612 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x649 PUSH2 0x10D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B7 PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6D5 PUSH2 0x127C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x874 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x1315 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2119 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA55 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA2A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA55 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA38 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xAC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2271 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x219E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB4E PUSH2 0x168A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB94 JUMPI POP PUSH2 0xB93 DUP6 PUSH2 0xB8E PUSH2 0x168A JUMP JUMPDEST PUSH2 0x1281 JUMP JUMPDEST JUMPDEST PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21C3 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBF3 PUSH2 0x168A JUMP JUMPDEST SWAP1 POP PUSH2 0xC03 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1692 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC20 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC38 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0xCBF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F5 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x169A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD76 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x175A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xC09 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE87 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE6C JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEC9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEAE JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xEEC DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x17E2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2248 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF87 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x10CC JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFBD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1032 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2144 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1042 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1066 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10B5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xF90 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10FB PUSH2 0x168A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1168 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x221F PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x1175 PUSH2 0x168A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1222 PUSH2 0x168A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x139B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x219E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13A3 PUSH2 0x168A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x13E9 JUMPI POP PUSH2 0x13E8 DUP6 PUSH2 0x13E3 PUSH2 0x168A JUMP JUMPDEST PUSH2 0x1281 JUMP JUMPDEST JUMPDEST PUSH2 0x143E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2175 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1448 PUSH2 0x168A JUMP JUMPDEST SWAP1 POP PUSH2 0x1468 DUP2 DUP8 DUP8 PUSH2 0x1459 DUP9 PUSH2 0x1C5A JUMP JUMPDEST PUSH2 0x1462 DUP9 PUSH2 0x1C5A JUMP JUMPDEST DUP8 PUSH2 0x1692 JUMP JUMPDEST PUSH2 0x14E5 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F5 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x169A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x159C DUP4 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x175A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1682 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1CB3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1747 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x170C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16F1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1739 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x17D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1801 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20A9 JUMP JUMPDEST ISZERO PUSH2 0x1C52 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18E5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18CA JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1927 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x190C JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1966 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x194B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1993 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19EC JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 JUMPDEST PUSH2 0x1BB3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 ISZERO PUSH2 0x1AB5 JUMPI PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1A14 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0xE0 SHR PUSH4 0x8C379A0 DUP2 EQ PUSH2 0x1A35 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A61 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x1AB5 JUMP JUMPDEST DUP1 DUP4 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A83 JUMPI PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0x1AB5 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD RETURNDATASIZE DUP7 ADD DUP2 GT ISZERO PUSH2 0x1AA1 JUMPI PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST DUP1 PUSH2 0x1AC0 JUMPI POP PUSH2 0x1B62 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B27 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B0C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B54 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20BD PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1C50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20F1 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x1 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C8D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1C9E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20A9 JUMP JUMPDEST ISZERO PUSH2 0x20A1 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DB7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D9C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1DE4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1E3B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 JUMPDEST PUSH2 0x2002 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 ISZERO PUSH2 0x1F04 JUMPI PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1E63 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1F04 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0xE0 SHR PUSH4 0x8C379A0 DUP2 EQ PUSH2 0x1E84 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1F04 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1EB0 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x1F04 JUMP JUMPDEST DUP1 DUP4 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ED2 JUMPI PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0x1F04 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD RETURNDATASIZE DUP7 ADD DUP2 GT ISZERO PUSH2 0x1EF0 JUMPI PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH2 0x1F04 JUMP JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST DUP1 PUSH2 0x1F0F JUMPI POP PUSH2 0x1FB1 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F76 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F5B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1FA3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20BD PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x209F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20F1 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243313135 CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH19 0x656A656374656420746F6B656E734552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2062617463682062 PUSH2 0x6C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2063616C6C657220 PUSH10 0x73206E6F74206F776E65 PUSH19 0x206E6F7220617070726F766564455243313135 CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0x4552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F72207472616E73666572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH20 0x657474696E6720617070726F76616C2073746174 PUSH22 0x7320666F722073656C66455243313135353A20616363 PUSH16 0x756E747320616E6420696473206C656E PUSH8 0x7468206D69736D61 PUSH21 0x6368455243313135353A2069647320616E6420616D PUSH16 0x756E7473206C656E677468206D69736D PUSH2 0x7463 PUSH9 0xA26469706673582212 KECCAK256 LOG0 0xDA TIMESTAMP RETURNDATASIZE XOR PC 0xC5 CALLDATALOAD PUSH17 0x54A08EAAB99FCEC179822E65BAC57F5BCB DUP6 0xC1 0xE8 SIGNEXTEND PUSH32 0xA64736F6C634300060200330000000000000000000000000000000000000000 ",
							"sourceMap": "204:590:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;204:590:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2956:220:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2956:220:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;948:140:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;948:140:2;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2717:97:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2717:97:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2717:97:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;368:33:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5583:1184:5;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5583:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5583:1184:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5583:1184:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5583:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5583:1184:5;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5583:1184:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5583:1184:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5583:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5583:1184:5;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5583:1184:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5583:1184:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5583:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5583:1184:5;;;;;;;;;;;;;;;:::i;:::-;;241:32:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3333:615:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3333:615:5;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3333:615:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3333:615:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3333:615:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3333:615:5;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3333:615:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3333:615:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3333:615:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3333:615:5;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3333:615:5;;;;;;;;;;;;;;;;;408:34:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4016:306:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4016:306:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;321:40:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;280:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4389:158:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4389:158:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4614:897;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4614:897:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4614:897:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4614:897:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4614:897:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4614:897:5;;;;;;;;;;;;;;;:::i;:::-;;2956:220;3034:7;3080:1;3061:21;;:7;:21;;;;3053:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3147:9;:13;3157:2;3147:13;;;;;;;;;;;:22;3161:7;3147:22;;;;;;;;;;;;;;;;3140:29;;2956:220;;;;:::o;948:140:2:-;1025:4;1048:20;:33;1069:11;1048:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1041:40;;948:140;;;:::o;2717:97:5:-;2771:13;2803:4;2796:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2717:97;;;:::o;368:33:0:-;400:1;368:33;:::o;5583:1184:5:-;5837:7;:14;5823:3;:10;:28;5815:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5928:1;5914:16;;:2;:16;;;;5906:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6011:12;:10;:12::i;:::-;6003:20;;:4;:20;;;:60;;;;6027:36;6044:4;6050:12;:10;:12::i;:::-;6027:16;:36::i;:::-;6003:60;5982:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6150:16;6169:12;:10;:12::i;:::-;6150:31;;6192:60;6213:8;6223:4;6229:2;6233:3;6238:7;6247:4;6192:20;:60::i;:::-;6268:9;6280:1;6268:13;;6263:349;6287:3;:10;6283:1;:14;6263:349;;;6318:10;6331:3;6335:1;6331:6;;;;;;;;;;;;;;6318:19;;6351:14;6368:7;6376:1;6368:10;;;;;;;;;;;;;;6351:27;;6415:123;6456:6;6415:123;;;;;;;;;;;;;;;;;:9;:13;6425:2;6415:13;;;;;;;;;;;:19;6429:4;6415:19;;;;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;6393:9;:13;6403:2;6393:13;;;;;;;;;;;:19;6407:4;6393:19;;;;;;;;;;;;;;;:145;;;;6572:29;6594:6;6572:9;:13;6582:2;6572:13;;;;;;;;;;;:17;6586:2;6572:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;6552:9;:13;6562:2;6552:13;;;;;;;;;;;:17;6566:2;6552:17;;;;;;;;;;;;;;;:49;;;;6263:349;;6299:3;;;;;6263:349;;;;6657:2;6627:47;;6651:4;6627:47;;6641:8;6627:47;;;6661:3;6666:7;6627:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6627:47:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6627:47:5;;;;;;;;;;;;;;;;;;;6685:75;6721:8;6731:4;6737:2;6741:3;6746:7;6755:4;6685:35;:75::i;:::-;5583:1184;;;;;;:::o;241:32:0:-;272:1;241:32;:::o;3333:615:5:-;3490:16;3549:3;:10;3530:8;:15;:29;3522:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3616:30;3663:8;:15;3649:30;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;3649:30:5;;;;3616:63;;3695:9;3707:1;3695:13;;3690:221;3714:8;:15;3710:1;:19;3690:221;;;3781:1;3758:25;;:8;3767:1;3758:11;;;;;;;;;;;;;;:25;;;;3750:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3870:9;:17;3880:3;3884:1;3880:6;;;;;;;;;;;;;;3870:17;;;;;;;;;;;:30;3888:8;3897:1;3888:11;;;;;;;;;;;;;;3870:30;;;;;;;;;;;;;;;;3851:13;3865:1;3851:16;;;;;;;;;;;;;:49;;;;;3731:3;;;;;3690:221;;;;3928:13;3921:20;;;3333:615;;;;:::o;408:34:0:-;441:1;408:34;:::o;4016:306:5:-;4134:8;4118:24;;:12;:10;:12::i;:::-;:24;;;;4110:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:8;4199:18;:32;4218:12;:10;:12::i;:::-;4199:32;;;;;;;;;;;;;;;:42;4232:8;4199:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;4296:8;4267:48;;4282:12;:10;:12::i;:::-;4267:48;;;4306:8;4267:48;;;;;;;;;;;;;;;;;;;;;;4016:306;;:::o;321:40:0:-;360:1;321:40;:::o;280:34::-;313:1;280:34;:::o;4389:158:5:-;4480:4;4503:18;:27;4522:7;4503:27;;;;;;;;;;;;;;;:37;4531:8;4503:37;;;;;;;;;;;;;;;;;;;;;;;;;4496:44;;4389:158;;;;:::o;4614:897::-;4843:1;4829:16;;:2;:16;;;;4821:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4926:12;:10;:12::i;:::-;4918:20;;:4;:20;;;:60;;;;4942:36;4959:4;4965:12;:10;:12::i;:::-;4942:16;:36::i;:::-;4918:60;4897:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5056:16;5075:12;:10;:12::i;:::-;5056:31;;5098:96;5119:8;5129:4;5135:2;5139:21;5157:2;5139:17;:21::i;:::-;5162:25;5180:6;5162:17;:25::i;:::-;5189:4;5098:20;:96::i;:::-;5227:77;5251:6;5227:77;;;;;;;;;;;;;;;;;:9;:13;5237:2;5227:13;;;;;;;;;;;:19;5241:4;5227:19;;;;;;;;;;;;;;;;:23;;:77;;;;;:::i;:::-;5205:9;:13;5215:2;5205:13;;;;;;;;;;;:19;5219:4;5205:19;;;;;;;;;;;;;;;:99;;;;5334:29;5356:6;5334:9;:13;5344:2;5334:13;;;;;;;;;;;:17;5348:2;5334:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;5314:9;:13;5324:2;5314:13;;;;;;;;;;;:17;5328:2;5314:17;;;;;;;;;;;;;;;:49;;;;5410:2;5379:46;;5404:4;5379:46;;5394:8;5379:46;;;5414:2;5418:6;5379:46;;;;;;;;;;;;;;;;;;;;;;;;5436:68;5467:8;5477:4;5483:2;5487;5491:6;5499:4;5436:30;:68::i;:::-;4614:897;;;;;;:::o;590:104:1:-;643:15;677:10;670:17;;590:104;:::o;12296:227:5:-;;;;;;;:::o;1746:187:4:-;1832:7;1864:1;1859;:6;;1867:12;1851:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1851:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1890:9;1906:1;1902;:5;1890:17;;1925:1;1918:8;;;1746:187;;;;;:::o;874:176::-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;13276:778:5:-;13520:15;:2;:13;;;:15::i;:::-;13516:532;;;13572:2;13555:43;;;13599:8;13609:4;13615:3;13620:7;13629:4;13555:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13555:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13555:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13555:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13555:79:5;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13555:79:5;;;;;;;;;;;;;;;;;;13551:487;;;20:4:-1;14:11;6:19;;43:1;37:4;30:15;57:1;50:730;;;93:4;75:16;72:26;69:2;;;109:1;101:9;;111:5;;69:2;145:1;142;139;124:23;179:1;173:8;168:3;164:18;206:10;201:3;198:19;188:2;;229:1;221:9;;231:5;;;188:2;290:1;272:16;268:24;265:1;259:4;244:49;319:4;313:11;403:16;396:4;388:6;384:17;381:39;354:18;346:6;343:30;333:94;330:2;;;444:1;436:9;;452:5;;;;330:2;491:6;485:4;481:17;524:3;518:10;548:18;540:6;537:30;534:2;;;578:1;570:9;;580:5;;;;;;534:2;624:6;617:4;612:3;608:14;604:27;658:16;652:4;648:27;643:3;640:36;637:2;;;687:1;679:9;;689:5;;;;;;;637:2;739:4;735:9;728:4;723:3;719:14;715:30;709:4;702:44;760:3;752:11;;769:5;;;;;50:730;13551:487:5;;;;;;;13914:6;13907:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13907::5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13551:487;13961:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13551:487;13695:52;;;13683:64;;;:8;:64;;;;13679:161;;13771:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13679:161;13635:219;13516:532;13276:778;;;;;;:::o;14060:193::-;14126:16;14154:22;14193:1;14179:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;14179:16:5;;;;14154:41;;14216:7;14205:5;14211:1;14205:8;;;;;;;;;;;;;:18;;;;;14241:5;14234:12;;;14060:193;;;:::o;12529:741::-;12748:15;:2;:13;;;:15::i;:::-;12744:520;;;12800:2;12783:38;;;12822:8;12832:4;12838:2;12842:6;12850:4;12783:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12783:72:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12783:72:5;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12783:72:5;;;;;;;;;;;;;;;;;;12779:475;;;20:4:-1;14:11;6:19;;43:1;37:4;30:15;57:1;50:730;;;93:4;75:16;72:26;69:2;;;109:1;101:9;;111:5;;69:2;145:1;142;139;124:23;179:1;173:8;168:3;164:18;206:10;201:3;198:19;188:2;;229:1;221:9;;231:5;;;188:2;290:1;272:16;268:24;265:1;259:4;244:49;319:4;313:11;403:16;396:4;388:6;384:17;381:39;354:18;346:6;343:30;333:94;330:2;;;444:1;436:9;;452:5;;;;330:2;491:6;485:4;481:17;524:3;518:10;548:18;540:6;537:30;534:2;;;578:1;570:9;;580:5;;;;;;534:2;624:6;617:4;612:3;608:14;604:27;658:16;652:4;648:27;643:3;640:36;637:2;;;687:1;679:9;;689:5;;;;;;;637:2;739:4;735:9;728:4;723:3;719:14;715:30;709:4;702:44;760:3;752:11;;769:5;;;;;50:730;12779:475:5;;;;;;;13130:6;13123:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13123::5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12779:475;13177:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12779:475;12916:47;;;12904:59;;;:8;:59;;;;12900:156;;12987:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12900:156;12856:214;12744:520;12529:741;;;;;;:::o;718:413:9:-;778:4;981:12;1090:7;1078:20;1070:28;;1123:1;1116:4;:8;1109:15;;;718:413;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1782000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"GOLD()": "316",
								"SHIELD()": "250",
								"SILVER()": "249",
								"SWORD()": "272",
								"THORS_HAMMER()": "227",
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "1435",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "1276",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "MSTORE"
								},
								{
									"begin": 451,
									"end": 791,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 451,
									"end": 791,
									"name": "POP"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MLOAD"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MSTORE"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"value": "3F"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MSTORE"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH data",
									"value": "3FE3D9245796AE3F66210B6549BB463A5ED2DD5DEB86674E732053186F957F6F"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"value": "3F"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP2"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "CODECOPY"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 418,
									"end": 428,
									"name": "PUSH",
									"value": "1FFC9A7"
								},
								{
									"begin": 770,
									"end": 790,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 770,
									"end": 790,
									"name": "SHL"
								},
								{
									"begin": 751,
									"end": 769,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 751,
									"end": 769,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 751,
									"end": 769,
									"name": "SHL"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "SHR"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "JUMPDEST"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 2023,
									"end": 2026,
									"name": "DUP2"
								},
								{
									"begin": 2015,
									"end": 2022,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 2015,
									"end": 2022,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2015,
									"end": 2022,
									"name": "SHL"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "SHR"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "JUMPDEST"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 1754,
									"end": 1764,
									"name": "PUSH",
									"value": "D9B67A26"
								},
								{
									"begin": 2135,
									"end": 2156,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 2135,
									"end": 2156,
									"name": "SHL"
								},
								{
									"begin": 2116,
									"end": 2134,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 2116,
									"end": 2134,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2116,
									"end": 2134,
									"name": "SHL"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "SHR"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "JUMPDEST"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 1906,
									"end": 1916,
									"name": "PUSH",
									"value": "E89341C"
								},
								{
									"begin": 2276,
									"end": 2310,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 2276,
									"end": 2310,
									"name": "SHL"
								},
								{
									"begin": 2257,
									"end": 2275,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 2257,
									"end": 2275,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2257,
									"end": 2275,
									"name": "SHL"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "SHR"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "JUMPDEST"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 564,
									"end": 574,
									"name": "CALLER"
								},
								{
									"begin": 272,
									"end": 273,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 582,
									"end": 588,
									"name": "PUSH",
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "MLOAD"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "DUP1"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "ADD"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "MSTORE"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "DUP1"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "DUP2"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "MSTORE"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "POP"
								},
								{
									"begin": 558,
									"end": 563,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 558,
									"end": 563,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 558,
									"end": 563,
									"name": "SHL"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "SHR"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 558,
									"end": 593,
									"name": "JUMPDEST"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 610,
									"end": 620,
									"name": "CALLER"
								},
								{
									"begin": 313,
									"end": 314,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 630,
									"end": 636,
									"name": "PUSH",
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "MLOAD"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "DUP1"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "ADD"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "MSTORE"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "DUP1"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "DUP2"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "MSTORE"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "POP"
								},
								{
									"begin": 604,
									"end": 609,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 604,
									"end": 609,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 604,
									"end": 609,
									"name": "SHL"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "SHR"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 604,
									"end": 641,
									"name": "JUMPDEST"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 658,
									"end": 668,
									"name": "CALLER"
								},
								{
									"begin": 360,
									"end": 361,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 684,
									"end": 685,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "MLOAD"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "DUP1"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "ADD"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "MSTORE"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "DUP1"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "DUP2"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "MSTORE"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "POP"
								},
								{
									"begin": 652,
									"end": 657,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 652,
									"end": 657,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 652,
									"end": 657,
									"name": "SHL"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "SHR"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 652,
									"end": 690,
									"name": "JUMPDEST"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 707,
									"end": 717,
									"name": "CALLER"
								},
								{
									"begin": 400,
									"end": 401,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 726,
									"end": 731,
									"name": "PUSH",
									"value": "3B9ACA00"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "MLOAD"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "DUP1"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "ADD"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "MSTORE"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "DUP1"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "DUP2"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "MSTORE"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "POP"
								},
								{
									"begin": 701,
									"end": 706,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 701,
									"end": 706,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 701,
									"end": 706,
									"name": "SHL"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "SHR"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 701,
									"end": 736,
									"name": "JUMPDEST"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 753,
									"end": 763,
									"name": "CALLER"
								},
								{
									"begin": 441,
									"end": 442,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 773,
									"end": 778,
									"name": "PUSH",
									"value": "3B9ACA00"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "MLOAD"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "DUP1"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "ADD"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "MSTORE"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "DUP1"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "DUP2"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "MSTORE"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "POP"
								},
								{
									"begin": 747,
									"end": 752,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 747,
									"end": 752,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 747,
									"end": 752,
									"name": "SHL"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "SHR"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 747,
									"end": 783,
									"name": "JUMPDEST"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMP"
								},
								{
									"begin": 1482,
									"end": 1680,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 1482,
									"end": 1680,
									"name": "JUMPDEST"
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "PUSH",
									"value": "FFFFFFFF"
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "SHL"
								},
								{
									"begin": 1565,
									"end": 1576,
									"name": "DUP2"
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "NOT"
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "AND"
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "EQ"
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "ISZERO"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "JUMPI"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MLOAD"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP2"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MSTORE"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "ADD"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP1"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP1"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "ADD"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP3"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP2"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SUB"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP3"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MSTORE"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "1C"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP2"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MSTORE"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "ADD"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP1"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "4552433136353A20696E76616C696420696E7465726661636520696400000000"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP2"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MSTORE"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "POP"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "ADD"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SWAP2"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "POP"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "POP"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MLOAD"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP1"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SWAP2"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SUB"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SWAP1"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "REVERT"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "JUMPDEST"
								},
								{
									"begin": 1669,
									"end": 1673,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1653,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "DUP1"
								},
								{
									"begin": 1654,
									"end": 1665,
									"name": "DUP4"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "NOT"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "AND"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "NOT"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "AND"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "DUP2"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "MSTORE"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "ADD"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "SWAP1"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "DUP2"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "MSTORE"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "ADD"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "KECCAK256"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "EXP"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "DUP2"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "SLOAD"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "DUP2"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "MUL"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "NOT"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "AND"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "SWAP1"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "DUP4"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "ISZERO"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "ISZERO"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "MUL"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "OR"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "SWAP1"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "SSTORE"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "POP"
								},
								{
									"begin": 1482,
									"end": 1680,
									"name": "POP"
								},
								{
									"begin": 1482,
									"end": 1680,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 7590,
									"end": 7676,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 7590,
									"end": 7676,
									"name": "JUMPDEST"
								},
								{
									"begin": 7663,
									"end": 7669,
									"name": "DUP1"
								},
								{
									"begin": 7656,
									"end": 7660,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "SWAP1"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "DUP1"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "MLOAD"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "SWAP1"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "ADD"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "SWAP1"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "SWAP3"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "SWAP2"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "SWAP1"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "JUMPDEST"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "POP"
								},
								{
									"begin": 7590,
									"end": 7676,
									"name": "POP"
								},
								{
									"begin": 7590,
									"end": 7676,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 8059,
									"end": 8631,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 8059,
									"end": 8631,
									"name": "JUMPDEST"
								},
								{
									"begin": 8192,
									"end": 8193,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8173,
									"end": 8194,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8173,
									"end": 8194,
									"name": "AND"
								},
								{
									"begin": 8173,
									"end": 8180,
									"name": "DUP5"
								},
								{
									"begin": 8173,
									"end": 8194,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8173,
									"end": 8194,
									"name": "AND"
								},
								{
									"begin": 8173,
									"end": 8194,
									"name": "EQ"
								},
								{
									"begin": 8173,
									"end": 8194,
									"name": "ISZERO"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "JUMPI"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "MLOAD"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "DUP2"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "MSTORE"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "ADD"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "DUP1"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "DUP1"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "ADD"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "DUP3"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "DUP2"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "SUB"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "DUP3"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "MSTORE"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "PUSH",
									"value": "21"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "DUP2"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "MSTORE"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "ADD"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "DUP1"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "PUSH data",
									"value": "EBF031A1B7EE1D0B3A7752B450A3268E8B6C334561B48C1C0BA0F5BAC05749F2"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "PUSH",
									"value": "21"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "SWAP2"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "CODECOPY"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "ADD"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "SWAP2"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "POP"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "POP"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "MLOAD"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "DUP1"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "SWAP2"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "SUB"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "SWAP1"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "REVERT"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "tag",
									"value": "27"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "JUMPDEST"
								},
								{
									"begin": 8243,
									"end": 8259,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8262,
									"end": 8274,
									"name": "PUSH [tag]",
									"value": "28"
								},
								{
									"begin": 8262,
									"end": 8272,
									"name": "PUSH [tag]",
									"value": "29"
								},
								{
									"begin": 8262,
									"end": 8272,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8262,
									"end": 8272,
									"name": "SHL"
								},
								{
									"begin": 8262,
									"end": 8274,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8262,
									"end": 8274,
									"name": "SHR"
								},
								{
									"begin": 8262,
									"end": 8274,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 8262,
									"end": 8274,
									"name": "tag",
									"value": "28"
								},
								{
									"begin": 8262,
									"end": 8274,
									"name": "JUMPDEST"
								},
								{
									"begin": 8243,
									"end": 8274,
									"name": "SWAP1"
								},
								{
									"begin": 8243,
									"end": 8274,
									"name": "POP"
								},
								{
									"begin": 8285,
									"end": 8392,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 8306,
									"end": 8314,
									"name": "DUP2"
								},
								{
									"begin": 8324,
									"end": 8325,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8328,
									"end": 8335,
									"name": "DUP8"
								},
								{
									"begin": 8337,
									"end": 8358,
									"name": "PUSH [tag]",
									"value": "31"
								},
								{
									"begin": 8355,
									"end": 8357,
									"name": "DUP9"
								},
								{
									"begin": 8337,
									"end": 8354,
									"name": "PUSH [tag]",
									"value": "32"
								},
								{
									"begin": 8337,
									"end": 8354,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8337,
									"end": 8354,
									"name": "SHL"
								},
								{
									"begin": 8337,
									"end": 8358,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8337,
									"end": 8358,
									"name": "SHR"
								},
								{
									"begin": 8337,
									"end": 8358,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 8337,
									"end": 8358,
									"name": "tag",
									"value": "31"
								},
								{
									"begin": 8337,
									"end": 8358,
									"name": "JUMPDEST"
								},
								{
									"begin": 8360,
									"end": 8385,
									"name": "PUSH [tag]",
									"value": "33"
								},
								{
									"begin": 8378,
									"end": 8384,
									"name": "DUP9"
								},
								{
									"begin": 8360,
									"end": 8377,
									"name": "PUSH [tag]",
									"value": "32"
								},
								{
									"begin": 8360,
									"end": 8377,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8360,
									"end": 8377,
									"name": "SHL"
								},
								{
									"begin": 8360,
									"end": 8385,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8360,
									"end": 8385,
									"name": "SHR"
								},
								{
									"begin": 8360,
									"end": 8385,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 8360,
									"end": 8385,
									"name": "tag",
									"value": "33"
								},
								{
									"begin": 8360,
									"end": 8385,
									"name": "JUMPDEST"
								},
								{
									"begin": 8387,
									"end": 8391,
									"name": "DUP8"
								},
								{
									"begin": 8285,
									"end": 8305,
									"name": "PUSH [tag]",
									"value": "34"
								},
								{
									"begin": 8285,
									"end": 8305,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8285,
									"end": 8305,
									"name": "SHL"
								},
								{
									"begin": 8285,
									"end": 8392,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8285,
									"end": 8392,
									"name": "SHR"
								},
								{
									"begin": 8285,
									"end": 8392,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 8285,
									"end": 8392,
									"name": "tag",
									"value": "30"
								},
								{
									"begin": 8285,
									"end": 8392,
									"name": "JUMPDEST"
								},
								{
									"begin": 8428,
									"end": 8462,
									"name": "PUSH [tag]",
									"value": "35"
								},
								{
									"begin": 8455,
									"end": 8461,
									"name": "DUP4"
								},
								{
									"begin": 8428,
									"end": 8437,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 8428,
									"end": 8441,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8438,
									"end": 8440,
									"name": "DUP8"
								},
								{
									"begin": 8428,
									"end": 8441,
									"name": "DUP2"
								},
								{
									"begin": 8428,
									"end": 8441,
									"name": "MSTORE"
								},
								{
									"begin": 8428,
									"end": 8441,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8428,
									"end": 8441,
									"name": "ADD"
								},
								{
									"begin": 8428,
									"end": 8441,
									"name": "SWAP1"
								},
								{
									"begin": 8428,
									"end": 8441,
									"name": "DUP2"
								},
								{
									"begin": 8428,
									"end": 8441,
									"name": "MSTORE"
								},
								{
									"begin": 8428,
									"end": 8441,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8428,
									"end": 8441,
									"name": "ADD"
								},
								{
									"begin": 8428,
									"end": 8441,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8428,
									"end": 8441,
									"name": "KECCAK256"
								},
								{
									"begin": 8428,
									"end": 8450,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8442,
									"end": 8449,
									"name": "DUP9"
								},
								{
									"begin": 8428,
									"end": 8450,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8428,
									"end": 8450,
									"name": "AND"
								},
								{
									"begin": 8428,
									"end": 8450,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8428,
									"end": 8450,
									"name": "AND"
								},
								{
									"begin": 8428,
									"end": 8450,
									"name": "DUP2"
								},
								{
									"begin": 8428,
									"end": 8450,
									"name": "MSTORE"
								},
								{
									"begin": 8428,
									"end": 8450,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8428,
									"end": 8450,
									"name": "ADD"
								},
								{
									"begin": 8428,
									"end": 8450,
									"name": "SWAP1"
								},
								{
									"begin": 8428,
									"end": 8450,
									"name": "DUP2"
								},
								{
									"begin": 8428,
									"end": 8450,
									"name": "MSTORE"
								},
								{
									"begin": 8428,
									"end": 8450,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8428,
									"end": 8450,
									"name": "ADD"
								},
								{
									"begin": 8428,
									"end": 8450,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8428,
									"end": 8450,
									"name": "KECCAK256"
								},
								{
									"begin": 8428,
									"end": 8450,
									"name": "SLOAD"
								},
								{
									"begin": 8428,
									"end": 8454,
									"name": "PUSH [tag]",
									"value": "36"
								},
								{
									"begin": 8428,
									"end": 8454,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8428,
									"end": 8454,
									"name": "SHL"
								},
								{
									"begin": 8428,
									"end": 8454,
									"name": "PUSH [tag]",
									"value": "18446744073709551720"
								},
								{
									"begin": 8428,
									"end": 8454,
									"name": "OR"
								},
								{
									"begin": 8428,
									"end": 8454,
									"name": "SWAP1"
								},
								{
									"begin": 8428,
									"end": 8462,
									"name": "SWAP2"
								},
								{
									"begin": 8428,
									"end": 8462,
									"name": "SWAP1"
								},
								{
									"begin": 8428,
									"end": 8462,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8428,
									"end": 8462,
									"name": "SHR"
								},
								{
									"begin": 8428,
									"end": 8462,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 8428,
									"end": 8462,
									"name": "tag",
									"value": "35"
								},
								{
									"begin": 8428,
									"end": 8462,
									"name": "JUMPDEST"
								},
								{
									"begin": 8403,
									"end": 8412,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 8403,
									"end": 8416,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8413,
									"end": 8415,
									"name": "DUP7"
								},
								{
									"begin": 8403,
									"end": 8416,
									"name": "DUP2"
								},
								{
									"begin": 8403,
									"end": 8416,
									"name": "MSTORE"
								},
								{
									"begin": 8403,
									"end": 8416,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8403,
									"end": 8416,
									"name": "ADD"
								},
								{
									"begin": 8403,
									"end": 8416,
									"name": "SWAP1"
								},
								{
									"begin": 8403,
									"end": 8416,
									"name": "DUP2"
								},
								{
									"begin": 8403,
									"end": 8416,
									"name": "MSTORE"
								},
								{
									"begin": 8403,
									"end": 8416,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8403,
									"end": 8416,
									"name": "ADD"
								},
								{
									"begin": 8403,
									"end": 8416,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8403,
									"end": 8416,
									"name": "KECCAK256"
								},
								{
									"begin": 8403,
									"end": 8425,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8417,
									"end": 8424,
									"name": "DUP8"
								},
								{
									"begin": 8403,
									"end": 8425,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8403,
									"end": 8425,
									"name": "AND"
								},
								{
									"begin": 8403,
									"end": 8425,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8403,
									"end": 8425,
									"name": "AND"
								},
								{
									"begin": 8403,
									"end": 8425,
									"name": "DUP2"
								},
								{
									"begin": 8403,
									"end": 8425,
									"name": "MSTORE"
								},
								{
									"begin": 8403,
									"end": 8425,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8403,
									"end": 8425,
									"name": "ADD"
								},
								{
									"begin": 8403,
									"end": 8425,
									"name": "SWAP1"
								},
								{
									"begin": 8403,
									"end": 8425,
									"name": "DUP2"
								},
								{
									"begin": 8403,
									"end": 8425,
									"name": "MSTORE"
								},
								{
									"begin": 8403,
									"end": 8425,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8403,
									"end": 8425,
									"name": "ADD"
								},
								{
									"begin": 8403,
									"end": 8425,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8403,
									"end": 8425,
									"name": "KECCAK256"
								},
								{
									"begin": 8403,
									"end": 8462,
									"name": "DUP2"
								},
								{
									"begin": 8403,
									"end": 8462,
									"name": "SWAP1"
								},
								{
									"begin": 8403,
									"end": 8462,
									"name": "SSTORE"
								},
								{
									"begin": 8403,
									"end": 8462,
									"name": "POP"
								},
								{
									"begin": 8514,
									"end": 8521,
									"name": "DUP5"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "AND"
								},
								{
									"begin": 8510,
									"end": 8511,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "AND"
								},
								{
									"begin": 8492,
									"end": 8500,
									"name": "DUP3"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "AND"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "PUSH",
									"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
								},
								{
									"begin": 8523,
									"end": 8525,
									"name": "DUP8"
								},
								{
									"begin": 8527,
									"end": 8533,
									"name": "DUP8"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "MLOAD"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "DUP1"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "DUP4"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "DUP2"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "MSTORE"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "ADD"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "DUP3"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "DUP2"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "MSTORE"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "ADD"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "SWAP3"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "POP"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "POP"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "POP"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "MLOAD"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "DUP1"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "SWAP2"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "SUB"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "SWAP1"
								},
								{
									"begin": 8477,
									"end": 8534,
									"name": "LOG4"
								},
								{
									"begin": 8545,
									"end": 8624,
									"name": "PUSH [tag]",
									"value": "37"
								},
								{
									"begin": 8576,
									"end": 8584,
									"name": "DUP2"
								},
								{
									"begin": 8594,
									"end": 8595,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8598,
									"end": 8605,
									"name": "DUP8"
								},
								{
									"begin": 8607,
									"end": 8609,
									"name": "DUP8"
								},
								{
									"begin": 8611,
									"end": 8617,
									"name": "DUP8"
								},
								{
									"begin": 8619,
									"end": 8623,
									"name": "DUP8"
								},
								{
									"begin": 8545,
									"end": 8575,
									"name": "PUSH [tag]",
									"value": "38"
								},
								{
									"begin": 8545,
									"end": 8575,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8545,
									"end": 8575,
									"name": "SHL"
								},
								{
									"begin": 8545,
									"end": 8624,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8545,
									"end": 8624,
									"name": "SHR"
								},
								{
									"begin": 8545,
									"end": 8624,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 8545,
									"end": 8624,
									"name": "tag",
									"value": "37"
								},
								{
									"begin": 8545,
									"end": 8624,
									"name": "JUMPDEST"
								},
								{
									"begin": 8059,
									"end": 8631,
									"name": "POP"
								},
								{
									"begin": 8059,
									"end": 8631,
									"name": "POP"
								},
								{
									"begin": 8059,
									"end": 8631,
									"name": "POP"
								},
								{
									"begin": 8059,
									"end": 8631,
									"name": "POP"
								},
								{
									"begin": 8059,
									"end": 8631,
									"name": "POP"
								},
								{
									"begin": 8059,
									"end": 8631,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 590,
									"end": 694,
									"name": "tag",
									"value": "29"
								},
								{
									"begin": 590,
									"end": 694,
									"name": "JUMPDEST"
								},
								{
									"begin": 643,
									"end": 658,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 677,
									"end": 687,
									"name": "CALLER"
								},
								{
									"begin": 670,
									"end": 687,
									"name": "SWAP1"
								},
								{
									"begin": 670,
									"end": 687,
									"name": "POP"
								},
								{
									"begin": 590,
									"end": 694,
									"name": "SWAP1"
								},
								{
									"begin": 590,
									"end": 694,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 14060,
									"end": 14253,
									"name": "tag",
									"value": "32"
								},
								{
									"begin": 14060,
									"end": 14253,
									"name": "JUMPDEST"
								},
								{
									"begin": 14126,
									"end": 14142,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 14154,
									"end": 14176,
									"name": "DUP1"
								},
								{
									"begin": 14193,
									"end": 14194,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "MLOAD"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "SWAP1"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "DUP1"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "DUP3"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "MSTORE"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "DUP1"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "MUL"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "ADD"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "DUP3"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "ADD"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "MSTORE"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "DUP1"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "ISZERO"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "PUSH [tag]",
									"value": "41"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "JUMPI"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "DUP2"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "ADD"
								},
								{
									"begin": 29,
									"end": 31,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 21,
									"end": 27,
									"name": "DUP3"
								},
								{
									"begin": 17,
									"end": 32,
									"name": "MUL"
								},
								{
									"begin": 117,
									"end": 121,
									"name": "DUP1"
								},
								{
									"begin": 105,
									"end": 115,
									"name": "CODESIZE"
								},
								{
									"begin": 97,
									"end": 103,
									"name": "DUP4"
								},
								{
									"begin": 88,
									"end": 122,
									"name": "CODECOPY"
								},
								{
									"begin": 148,
									"end": 152,
									"name": "DUP1"
								},
								{
									"begin": 140,
									"end": 146,
									"name": "DUP3"
								},
								{
									"begin": 136,
									"end": 153,
									"name": "ADD"
								},
								{
									"begin": 126,
									"end": 153,
									"name": "SWAP2"
								},
								{
									"begin": 126,
									"end": 153,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 157,
									"name": "POP"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "SWAP1"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "POP"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "tag",
									"value": "41"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "JUMPDEST"
								},
								{
									"begin": 14179,
									"end": 14195,
									"name": "POP"
								},
								{
									"begin": 14154,
									"end": 14195,
									"name": "SWAP1"
								},
								{
									"begin": 14154,
									"end": 14195,
									"name": "POP"
								},
								{
									"begin": 14216,
									"end": 14223,
									"name": "DUP3"
								},
								{
									"begin": 14205,
									"end": 14210,
									"name": "DUP2"
								},
								{
									"begin": 14211,
									"end": 14212,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 14205,
									"end": 14213,
									"name": "DUP2"
								},
								{
									"begin": 14205,
									"end": 14213,
									"name": "MLOAD"
								},
								{
									"begin": 14205,
									"end": 14213,
									"name": "DUP2"
								},
								{
									"begin": 14205,
									"end": 14213,
									"name": "LT"
								},
								{
									"begin": 14205,
									"end": 14213,
									"name": "PUSH [tag]",
									"value": "42"
								},
								{
									"begin": 14205,
									"end": 14213,
									"name": "JUMPI"
								},
								{
									"begin": 14205,
									"end": 14213,
									"name": "INVALID"
								},
								{
									"begin": 14205,
									"end": 14213,
									"name": "tag",
									"value": "42"
								},
								{
									"begin": 14205,
									"end": 14213,
									"name": "JUMPDEST"
								},
								{
									"begin": 14205,
									"end": 14213,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 14205,
									"end": 14213,
									"name": "MUL"
								},
								{
									"begin": 14205,
									"end": 14213,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 14205,
									"end": 14213,
									"name": "ADD"
								},
								{
									"begin": 14205,
									"end": 14213,
									"name": "ADD"
								},
								{
									"begin": 14205,
									"end": 14223,
									"name": "DUP2"
								},
								{
									"begin": 14205,
									"end": 14223,
									"name": "DUP2"
								},
								{
									"begin": 14205,
									"end": 14223,
									"name": "MSTORE"
								},
								{
									"begin": 14205,
									"end": 14223,
									"name": "POP"
								},
								{
									"begin": 14205,
									"end": 14223,
									"name": "POP"
								},
								{
									"begin": 14241,
									"end": 14246,
									"name": "DUP1"
								},
								{
									"begin": 14234,
									"end": 14246,
									"name": "SWAP2"
								},
								{
									"begin": 14234,
									"end": 14246,
									"name": "POP"
								},
								{
									"begin": 14234,
									"end": 14246,
									"name": "POP"
								},
								{
									"begin": 14060,
									"end": 14253,
									"name": "SWAP2"
								},
								{
									"begin": 14060,
									"end": 14253,
									"name": "SWAP1"
								},
								{
									"begin": 14060,
									"end": 14253,
									"name": "POP"
								},
								{
									"begin": 14060,
									"end": 14253,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 12296,
									"end": 12523,
									"name": "tag",
									"value": "34"
								},
								{
									"begin": 12296,
									"end": 12523,
									"name": "JUMPDEST"
								},
								{
									"begin": 12296,
									"end": 12523,
									"name": "POP"
								},
								{
									"begin": 12296,
									"end": 12523,
									"name": "POP"
								},
								{
									"begin": 12296,
									"end": 12523,
									"name": "POP"
								},
								{
									"begin": 12296,
									"end": 12523,
									"name": "POP"
								},
								{
									"begin": 12296,
									"end": 12523,
									"name": "POP"
								},
								{
									"begin": 12296,
									"end": 12523,
									"name": "POP"
								},
								{
									"begin": 12296,
									"end": 12523,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 874,
									"end": 1050,
									"name": "tag",
									"value": "36"
								},
								{
									"begin": 874,
									"end": 1050,
									"name": "JUMPDEST"
								},
								{
									"begin": 932,
									"end": 939,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 951,
									"end": 960,
									"name": "DUP1"
								},
								{
									"begin": 967,
									"end": 968,
									"name": "DUP3"
								},
								{
									"begin": 963,
									"end": 964,
									"name": "DUP5"
								},
								{
									"begin": 963,
									"end": 968,
									"name": "ADD"
								},
								{
									"begin": 951,
									"end": 968,
									"name": "SWAP1"
								},
								{
									"begin": 951,
									"end": 968,
									"name": "POP"
								},
								{
									"begin": 991,
									"end": 992,
									"name": "DUP4"
								},
								{
									"begin": 986,
									"end": 987,
									"name": "DUP2"
								},
								{
									"begin": 986,
									"end": 992,
									"name": "LT"
								},
								{
									"begin": 986,
									"end": 992,
									"name": "ISZERO"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "PUSH [tag]",
									"value": "45"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "JUMPI"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "MLOAD"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "DUP2"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "MSTORE"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "ADD"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "DUP1"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "DUP1"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "ADD"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "DUP3"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "DUP2"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "SUB"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "DUP3"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "MSTORE"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "PUSH",
									"value": "1B"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "DUP2"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "MSTORE"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "ADD"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "DUP1"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "PUSH",
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "DUP2"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "MSTORE"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "POP"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "ADD"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "SWAP2"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "POP"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "POP"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "MLOAD"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "DUP1"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "SWAP2"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "SUB"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "SWAP1"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "REVERT"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "tag",
									"value": "45"
								},
								{
									"begin": 978,
									"end": 1024,
									"name": "JUMPDEST"
								},
								{
									"begin": 1042,
									"end": 1043,
									"name": "DUP1"
								},
								{
									"begin": 1035,
									"end": 1043,
									"name": "SWAP2"
								},
								{
									"begin": 1035,
									"end": 1043,
									"name": "POP"
								},
								{
									"begin": 1035,
									"end": 1043,
									"name": "POP"
								},
								{
									"begin": 874,
									"end": 1050,
									"name": "SWAP3"
								},
								{
									"begin": 874,
									"end": 1050,
									"name": "SWAP2"
								},
								{
									"begin": 874,
									"end": 1050,
									"name": "POP"
								},
								{
									"begin": 874,
									"end": 1050,
									"name": "POP"
								},
								{
									"begin": 874,
									"end": 1050,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 12529,
									"end": 13270,
									"name": "tag",
									"value": "38"
								},
								{
									"begin": 12529,
									"end": 13270,
									"name": "JUMPDEST"
								},
								{
									"begin": 12748,
									"end": 12763,
									"name": "PUSH [tag]",
									"value": "47"
								},
								{
									"begin": 12748,
									"end": 12750,
									"name": "DUP5"
								},
								{
									"begin": 12748,
									"end": 12761,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12748,
									"end": 12761,
									"name": "AND"
								},
								{
									"begin": 12748,
									"end": 12761,
									"name": "PUSH [tag]",
									"value": "48"
								},
								{
									"begin": 12748,
									"end": 12761,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12748,
									"end": 12761,
									"name": "SHL"
								},
								{
									"begin": 12748,
									"end": 12761,
									"name": "PUSH [tag]",
									"value": "18446744073709551774"
								},
								{
									"begin": 12748,
									"end": 12761,
									"name": "OR"
								},
								{
									"begin": 12748,
									"end": 12763,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12748,
									"end": 12763,
									"name": "SHR"
								},
								{
									"begin": 12748,
									"end": 12763,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 12748,
									"end": 12763,
									"name": "tag",
									"value": "47"
								},
								{
									"begin": 12748,
									"end": 12763,
									"name": "JUMPDEST"
								},
								{
									"begin": 12744,
									"end": 13264,
									"name": "ISZERO"
								},
								{
									"begin": 12744,
									"end": 13264,
									"name": "PUSH [tag]",
									"value": "49"
								},
								{
									"begin": 12744,
									"end": 13264,
									"name": "JUMPI"
								},
								{
									"begin": 12800,
									"end": 12802,
									"name": "DUP4"
								},
								{
									"begin": 12783,
									"end": 12821,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12783,
									"end": 12821,
									"name": "AND"
								},
								{
									"begin": 12783,
									"end": 12821,
									"name": "PUSH",
									"value": "F23A6E61"
								},
								{
									"begin": 12822,
									"end": 12830,
									"name": "DUP8"
								},
								{
									"begin": 12832,
									"end": 12836,
									"name": "DUP8"
								},
								{
									"begin": 12838,
									"end": 12840,
									"name": "DUP7"
								},
								{
									"begin": 12842,
									"end": 12848,
									"name": "DUP7"
								},
								{
									"begin": 12850,
									"end": 12854,
									"name": "DUP7"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "MLOAD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP7"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "FFFFFFFF"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "AND"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SHL"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP2"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "MSTORE"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "ADD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP7"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "AND"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "AND"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP2"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "MSTORE"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "ADD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP6"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "AND"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "AND"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP2"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "MSTORE"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "ADD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP5"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP2"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "MSTORE"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "ADD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP4"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP2"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "MSTORE"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "ADD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "ADD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP3"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP2"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SUB"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP3"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "MSTORE"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP4"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP2"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP2"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "MLOAD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP2"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "MSTORE"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "ADD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SWAP2"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "MLOAD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SWAP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "ADD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SWAP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP4"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "50"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "52"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1"
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2"
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "50"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "52"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SWAP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SWAP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP2"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "ADD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SWAP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "AND"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "ISZERO"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH [tag]",
									"value": "53"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "JUMPI"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP3"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SUB"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "MLOAD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP4"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SUB"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "EXP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SUB"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "NOT"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "AND"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP2"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "MSTORE"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "ADD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SWAP2"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "tag",
									"value": "53"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "JUMPDEST"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SWAP7"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "MLOAD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP4"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SUB"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP2"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP8"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "EXTCODESIZE"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "54"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "54"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "GAS"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "CALL"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SWAP3"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "ISZERO"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH [tag]",
									"value": "55"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "JUMPI"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "MLOAD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "56"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "56"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP2"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "ADD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SWAP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "DUP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "MLOAD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SWAP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "ADD"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SWAP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SWAP3"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SWAP2"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "SWAP1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "POP"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "tag",
									"value": "55"
								},
								{
									"begin": 12783,
									"end": 12855,
									"name": "JUMPDEST"
								},
								{
									"begin": 12779,
									"end": 13254,
									"name": "PUSH [tag]",
									"value": "57"
								},
								{
									"begin": 12779,
									"end": 13254,
									"name": "JUMPI"
								},
								{
									"begin": 12779,
									"end": 13254,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 20,
									"end": 24,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 14,
									"end": 25,
									"name": "MLOAD"
								},
								{
									"begin": 6,
									"end": 25,
									"name": "SWAP1"
								},
								{
									"begin": 6,
									"end": 25,
									"name": "POP"
								},
								{
									"begin": 43,
									"end": 44,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 37,
									"end": 41,
									"name": "DUP2"
								},
								{
									"begin": 30,
									"end": 45,
									"name": "MSTORE"
								},
								{
									"begin": 57,
									"end": 58,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 50,
									"end": 780,
									"name": "ISZERO"
								},
								{
									"begin": 50,
									"end": 780,
									"name": "PUSH [tag]",
									"value": "62"
								},
								{
									"begin": 50,
									"end": 780,
									"name": "JUMPI"
								},
								{
									"begin": 93,
									"end": 97,
									"name": "PUSH",
									"value": "44"
								},
								{
									"begin": 75,
									"end": 91,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 72,
									"end": 98,
									"name": "LT"
								},
								{
									"begin": 69,
									"end": 71,
									"name": "ISZERO"
								},
								{
									"begin": 69,
									"end": 71,
									"name": "PUSH [tag]",
									"value": "63"
								},
								{
									"begin": 69,
									"end": 71,
									"name": "JUMPI"
								},
								{
									"begin": 109,
									"end": 110,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 101,
									"end": 110,
									"name": "SWAP1"
								},
								{
									"begin": 101,
									"end": 110,
									"name": "POP"
								},
								{
									"begin": 111,
									"end": 116,
									"name": "PUSH [tag]",
									"value": "62"
								},
								{
									"begin": 111,
									"end": 116,
									"name": "JUMP"
								},
								{
									"begin": 69,
									"end": 71,
									"name": "tag",
									"value": "63"
								},
								{
									"begin": 69,
									"end": 71,
									"name": "JUMPDEST"
								},
								{
									"begin": 145,
									"end": 146,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 142,
									"end": 143,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 139,
									"end": 140,
									"name": "DUP1"
								},
								{
									"begin": 124,
									"end": 147,
									"name": "RETURNDATACOPY"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 173,
									"end": 181,
									"name": "MLOAD"
								},
								{
									"begin": 168,
									"end": 171,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 164,
									"end": 182,
									"name": "SHR"
								},
								{
									"begin": 206,
									"end": 216,
									"name": "PUSH",
									"value": "8C379A0"
								},
								{
									"begin": 201,
									"end": 204,
									"name": "DUP2"
								},
								{
									"begin": 198,
									"end": 217,
									"name": "EQ"
								},
								{
									"begin": 188,
									"end": 190,
									"name": "PUSH [tag]",
									"value": "64"
								},
								{
									"begin": 188,
									"end": 190,
									"name": "JUMPI"
								},
								{
									"begin": 229,
									"end": 230,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 221,
									"end": 230,
									"name": "SWAP2"
								},
								{
									"begin": 221,
									"end": 230,
									"name": "POP"
								},
								{
									"begin": 231,
									"end": 236,
									"name": "POP"
								},
								{
									"begin": 231,
									"end": 236,
									"name": "PUSH [tag]",
									"value": "62"
								},
								{
									"begin": 231,
									"end": 236,
									"name": "JUMP"
								},
								{
									"begin": 188,
									"end": 190,
									"name": "tag",
									"value": "64"
								},
								{
									"begin": 188,
									"end": 190,
									"name": "JUMPDEST"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 272,
									"end": 288,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 268,
									"end": 292,
									"name": "SUB"
								},
								{
									"begin": 265,
									"end": 266,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 259,
									"end": 263,
									"name": "DUP4"
								},
								{
									"begin": 244,
									"end": 293,
									"name": "RETURNDATACOPY"
								},
								{
									"begin": 319,
									"end": 323,
									"name": "DUP2"
								},
								{
									"begin": 313,
									"end": 324,
									"name": "MLOAD"
								},
								{
									"begin": 403,
									"end": 419,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 396,
									"end": 400,
									"name": "PUSH",
									"value": "24"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3"
								},
								{
									"begin": 384,
									"end": 401,
									"name": "ADD"
								},
								{
									"begin": 381,
									"end": 420,
									"name": "GT"
								},
								{
									"begin": 354,
									"end": 372,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 346,
									"end": 352,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 373,
									"name": "GT"
								},
								{
									"begin": 333,
									"end": 427,
									"name": "OR"
								},
								{
									"begin": 330,
									"end": 332,
									"name": "ISZERO"
								},
								{
									"begin": 330,
									"end": 332,
									"name": "PUSH [tag]",
									"value": "65"
								},
								{
									"begin": 330,
									"end": 332,
									"name": "JUMPI"
								},
								{
									"begin": 444,
									"end": 445,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 436,
									"end": 445,
									"name": "SWAP3"
								},
								{
									"begin": 436,
									"end": 445,
									"name": "POP"
								},
								{
									"begin": 452,
									"end": 457,
									"name": "POP"
								},
								{
									"begin": 452,
									"end": 457,
									"name": "POP"
								},
								{
									"begin": 452,
									"end": 457,
									"name": "PUSH [tag]",
									"value": "62"
								},
								{
									"begin": 452,
									"end": 457,
									"name": "JUMP"
								},
								{
									"begin": 330,
									"end": 332,
									"name": "tag",
									"value": "65"
								},
								{
									"begin": 330,
									"end": 332,
									"name": "JUMPDEST"
								},
								{
									"begin": 491,
									"end": 497,
									"name": "DUP1"
								},
								{
									"begin": 485,
									"end": 489,
									"name": "DUP4"
								},
								{
									"begin": 481,
									"end": 498,
									"name": "ADD"
								},
								{
									"begin": 524,
									"end": 527,
									"name": "DUP1"
								},
								{
									"begin": 518,
									"end": 528,
									"name": "MLOAD"
								},
								{
									"begin": 548,
									"end": 566,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 540,
									"end": 546,
									"name": "DUP2"
								},
								{
									"begin": 537,
									"end": 567,
									"name": "GT"
								},
								{
									"begin": 534,
									"end": 536,
									"name": "ISZERO"
								},
								{
									"begin": 534,
									"end": 536,
									"name": "PUSH [tag]",
									"value": "66"
								},
								{
									"begin": 534,
									"end": 536,
									"name": "JUMPI"
								},
								{
									"begin": 578,
									"end": 579,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 570,
									"end": 579,
									"name": "SWAP5"
								},
								{
									"begin": 570,
									"end": 579,
									"name": "POP"
								},
								{
									"begin": 580,
									"end": 585,
									"name": "POP"
								},
								{
									"begin": 580,
									"end": 585,
									"name": "POP"
								},
								{
									"begin": 580,
									"end": 585,
									"name": "POP"
								},
								{
									"begin": 580,
									"end": 585,
									"name": "POP"
								},
								{
									"begin": 580,
									"end": 585,
									"name": "PUSH [tag]",
									"value": "62"
								},
								{
									"begin": 580,
									"end": 585,
									"name": "JUMP"
								},
								{
									"begin": 534,
									"end": 536,
									"name": "tag",
									"value": "66"
								},
								{
									"begin": 534,
									"end": 536,
									"name": "JUMPDEST"
								},
								{
									"begin": 624,
									"end": 630,
									"name": "DUP1"
								},
								{
									"begin": 617,
									"end": 621,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 612,
									"end": 615,
									"name": "DUP4"
								},
								{
									"begin": 608,
									"end": 622,
									"name": "ADD"
								},
								{
									"begin": 604,
									"end": 631,
									"name": "ADD"
								},
								{
									"begin": 658,
									"end": 674,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 652,
									"end": 656,
									"name": "DUP7"
								},
								{
									"begin": 648,
									"end": 675,
									"name": "ADD"
								},
								{
									"begin": 643,
									"end": 646,
									"name": "DUP2"
								},
								{
									"begin": 640,
									"end": 676,
									"name": "GT"
								},
								{
									"begin": 637,
									"end": 639,
									"name": "ISZERO"
								},
								{
									"begin": 637,
									"end": 639,
									"name": "PUSH [tag]",
									"value": "67"
								},
								{
									"begin": 637,
									"end": 639,
									"name": "JUMPI"
								},
								{
									"begin": 687,
									"end": 688,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 679,
									"end": 688,
									"name": "SWAP6"
								},
								{
									"begin": 679,
									"end": 688,
									"name": "POP"
								},
								{
									"begin": 689,
									"end": 694,
									"name": "POP"
								},
								{
									"begin": 689,
									"end": 694,
									"name": "POP"
								},
								{
									"begin": 689,
									"end": 694,
									"name": "POP"
								},
								{
									"begin": 689,
									"end": 694,
									"name": "POP"
								},
								{
									"begin": 689,
									"end": 694,
									"name": "POP"
								},
								{
									"begin": 689,
									"end": 694,
									"name": "PUSH [tag]",
									"value": "62"
								},
								{
									"begin": 689,
									"end": 694,
									"name": "JUMP"
								},
								{
									"begin": 637,
									"end": 639,
									"name": "tag",
									"value": "67"
								},
								{
									"begin": 637,
									"end": 639,
									"name": "JUMPDEST"
								},
								{
									"begin": 739,
									"end": 743,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 735,
									"end": 744,
									"name": "NOT"
								},
								{
									"begin": 728,
									"end": 732,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 723,
									"end": 726,
									"name": "DUP3"
								},
								{
									"begin": 719,
									"end": 733,
									"name": "ADD"
								},
								{
									"begin": 715,
									"end": 745,
									"name": "AND"
								},
								{
									"begin": 709,
									"end": 713,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 702,
									"end": 746,
									"name": "MSTORE"
								},
								{
									"begin": 760,
									"end": 763,
									"name": "DUP3"
								},
								{
									"begin": 752,
									"end": 763,
									"name": "SWAP6"
								},
								{
									"begin": 752,
									"end": 763,
									"name": "POP"
								},
								{
									"begin": 769,
									"end": 774,
									"name": "POP"
								},
								{
									"begin": 769,
									"end": 774,
									"name": "POP"
								},
								{
									"begin": 769,
									"end": 774,
									"name": "POP"
								},
								{
									"begin": 769,
									"end": 774,
									"name": "POP"
								},
								{
									"begin": 769,
									"end": 774,
									"name": "POP"
								},
								{
									"begin": 50,
									"end": 780,
									"name": "tag",
									"value": "62"
								},
								{
									"begin": 50,
									"end": 780,
									"name": "JUMPDEST"
								},
								{
									"begin": 12779,
									"end": 13254,
									"name": "DUP1"
								},
								{
									"begin": 12779,
									"end": 13254,
									"name": "PUSH [tag]",
									"value": "68"
								},
								{
									"begin": 12779,
									"end": 13254,
									"name": "JUMPI"
								},
								{
									"begin": 12779,
									"end": 13254,
									"name": "POP"
								},
								{
									"begin": 12779,
									"end": 13254,
									"name": "PUSH [tag]",
									"value": "59"
								},
								{
									"begin": 12779,
									"end": 13254,
									"name": "JUMP"
								},
								{
									"begin": 12779,
									"end": 13254,
									"name": "tag",
									"value": "68"
								},
								{
									"begin": 12779,
									"end": 13254,
									"name": "JUMPDEST"
								},
								{
									"begin": 13130,
									"end": 13136,
									"name": "DUP1"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "MLOAD"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP2"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "MSTORE"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "ADD"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP1"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP1"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "ADD"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP3"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP2"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "SUB"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP3"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "MSTORE"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP4"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP2"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP2"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "MLOAD"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP2"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "MSTORE"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "ADD"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "SWAP2"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "POP"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP1"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "MLOAD"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "SWAP1"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "ADD"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "SWAP1"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP1"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP4"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "69"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "71"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1"
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2"
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "69"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "71"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "POP"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "POP"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "POP"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "SWAP1"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "POP"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "SWAP1"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP2"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "ADD"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "SWAP1"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "AND"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP1"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "ISZERO"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "PUSH [tag]",
									"value": "72"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "JUMPI"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP1"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP3"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "SUB"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP1"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "MLOAD"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP4"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "SUB"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "EXP"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "SUB"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "NOT"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "AND"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP2"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "MSTORE"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "ADD"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "SWAP2"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "POP"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "tag",
									"value": "72"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "JUMPDEST"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "POP"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "SWAP3"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "POP"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "POP"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "POP"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "MLOAD"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "DUP1"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "SWAP2"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "SUB"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "SWAP1"
								},
								{
									"begin": 13123,
									"end": 13137,
									"name": "REVERT"
								},
								{
									"begin": 12779,
									"end": 13254,
									"name": "tag",
									"value": "59"
								},
								{
									"begin": 12779,
									"end": 13254,
									"name": "JUMPDEST"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "MLOAD"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "DUP2"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "MSTORE"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "ADD"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "DUP1"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "DUP1"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "ADD"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "DUP3"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "DUP2"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "SUB"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "DUP3"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "MSTORE"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "PUSH",
									"value": "34"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "DUP2"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "MSTORE"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "ADD"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "DUP1"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "PUSH data",
									"value": "AA752FB1526000E5241602AFFC3D70EF506DA48A27EA57140102B439E655ED"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "PUSH",
									"value": "34"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "SWAP2"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "CODECOPY"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "ADD"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "SWAP2"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "POP"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "POP"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "MLOAD"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "DUP1"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "SWAP2"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "SUB"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "SWAP1"
								},
								{
									"begin": 13177,
									"end": 13239,
									"name": "REVERT"
								},
								{
									"begin": 12779,
									"end": 13254,
									"name": "tag",
									"value": "57"
								},
								{
									"begin": 12779,
									"end": 13254,
									"name": "JUMPDEST"
								},
								{
									"begin": 12916,
									"end": 12963,
									"name": "PUSH",
									"value": "F23A6E61"
								},
								{
									"begin": 12916,
									"end": 12963,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 12916,
									"end": 12963,
									"name": "SHL"
								},
								{
									"begin": 12904,
									"end": 12963,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12904,
									"end": 12963,
									"name": "NOT"
								},
								{
									"begin": 12904,
									"end": 12963,
									"name": "AND"
								},
								{
									"begin": 12904,
									"end": 12912,
									"name": "DUP2"
								},
								{
									"begin": 12904,
									"end": 12963,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12904,
									"end": 12963,
									"name": "NOT"
								},
								{
									"begin": 12904,
									"end": 12963,
									"name": "AND"
								},
								{
									"begin": 12904,
									"end": 12963,
									"name": "EQ"
								},
								{
									"begin": 12900,
									"end": 13056,
									"name": "PUSH [tag]",
									"value": "74"
								},
								{
									"begin": 12900,
									"end": 13056,
									"name": "JUMPI"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "MLOAD"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "DUP2"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "MSTORE"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "ADD"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "DUP1"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "DUP1"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "ADD"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "DUP3"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "DUP2"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "SUB"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "DUP3"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "MSTORE"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "PUSH",
									"value": "28"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "DUP2"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "MSTORE"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "ADD"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "DUP1"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "PUSH data",
									"value": "587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "PUSH",
									"value": "28"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "SWAP2"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "CODECOPY"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "ADD"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "SWAP2"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "POP"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "POP"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "MLOAD"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "DUP1"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "SWAP2"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "SUB"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "SWAP1"
								},
								{
									"begin": 12987,
									"end": 13037,
									"name": "REVERT"
								},
								{
									"begin": 12900,
									"end": 13056,
									"name": "tag",
									"value": "74"
								},
								{
									"begin": 12900,
									"end": 13056,
									"name": "JUMPDEST"
								},
								{
									"begin": 12856,
									"end": 13070,
									"name": "POP"
								},
								{
									"begin": 12744,
									"end": 13264,
									"name": "tag",
									"value": "49"
								},
								{
									"begin": 12744,
									"end": 13264,
									"name": "JUMPDEST"
								},
								{
									"begin": 12529,
									"end": 13270,
									"name": "POP"
								},
								{
									"begin": 12529,
									"end": 13270,
									"name": "POP"
								},
								{
									"begin": 12529,
									"end": 13270,
									"name": "POP"
								},
								{
									"begin": 12529,
									"end": 13270,
									"name": "POP"
								},
								{
									"begin": 12529,
									"end": 13270,
									"name": "POP"
								},
								{
									"begin": 12529,
									"end": 13270,
									"name": "POP"
								},
								{
									"begin": 12529,
									"end": 13270,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 718,
									"end": 1131,
									"name": "tag",
									"value": "48"
								},
								{
									"begin": 718,
									"end": 1131,
									"name": "JUMPDEST"
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 981,
									"end": 993,
									"name": "DUP1"
								},
								{
									"begin": 1090,
									"end": 1097,
									"name": "DUP3"
								},
								{
									"begin": 1078,
									"end": 1098,
									"name": "EXTCODESIZE"
								},
								{
									"begin": 1070,
									"end": 1098,
									"name": "SWAP1"
								},
								{
									"begin": 1070,
									"end": 1098,
									"name": "POP"
								},
								{
									"begin": 1123,
									"end": 1124,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1116,
									"end": 1120,
									"name": "DUP2"
								},
								{
									"begin": 1116,
									"end": 1124,
									"name": "GT"
								},
								{
									"begin": 1109,
									"end": 1124,
									"name": "SWAP2"
								},
								{
									"begin": 1109,
									"end": 1124,
									"name": "POP"
								},
								{
									"begin": 1109,
									"end": 1124,
									"name": "POP"
								},
								{
									"begin": 718,
									"end": 1131,
									"name": "SWAP2"
								},
								{
									"begin": 718,
									"end": 1131,
									"name": "SWAP1"
								},
								{
									"begin": 718,
									"end": 1131,
									"name": "POP"
								},
								{
									"begin": 718,
									"end": 1131,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "tag",
									"value": "25"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMPDEST"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP3"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SLOAD"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP2"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "AND"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "ISZERO"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "MUL"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SUB"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "AND"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DIV"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "MSTORE"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "KECCAK256"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "ADD"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DIV"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP2"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "ADD"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP3"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP3"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "LT"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH [tag]",
									"value": "77"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMPI"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "MLOAD"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "NOT"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "AND"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP4"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "ADD"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "OR"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP6"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SSTORE"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH [tag]",
									"value": "76"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMP"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "tag",
									"value": "77"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMPDEST"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP3"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "ADD"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "ADD"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP6"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SSTORE"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP3"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "ISZERO"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH [tag]",
									"value": "76"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMPI"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP2"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP3"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "ADD"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "tag",
									"value": "78"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMPDEST"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP3"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP2"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "GT"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "ISZERO"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH [tag]",
									"value": "79"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMPI"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP3"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "MLOAD"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP3"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SSTORE"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP2"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "ADD"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP2"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "ADD"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH [tag]",
									"value": "78"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMP"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "tag",
									"value": "79"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMPDEST"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "tag",
									"value": "76"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMPDEST"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "POP"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "POP"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH [tag]",
									"value": "80"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP2"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH [tag]",
									"value": "81"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "tag",
									"value": "80"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMPDEST"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "POP"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "tag",
									"value": "81"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMPDEST"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH [tag]",
									"value": "82"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP2"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "tag",
									"value": "83"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMPDEST"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP3"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "GT"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "ISZERO"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH [tag]",
									"value": "84"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMPI"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP2"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SSTORE"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "POP"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "ADD"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH [tag]",
									"value": "83"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMP"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "tag",
									"value": "84"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMPDEST"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "POP"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMP"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "tag",
									"value": "82"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMPDEST"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "SWAP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "JUMPDEST"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "DUP1"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "CODECOPY"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 204,
									"end": 794,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a0da423d1858c5357054a08eaab99fcec179822e65bac57f5bcb85c1e80b7f0a64736f6c63430006020033",
									".code": [
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "MSTORE"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "POP"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "LT"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPI"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "SHR"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "4E1273F4"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "GT"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPI"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "D562E204"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "GT"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPI"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "D562E204"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "EQ"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPI"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "E3E55F08"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "EQ"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPI"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "E985E9C5"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "EQ"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPI"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "F242432A"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "EQ"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPI"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMP"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPDEST"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "4E1273F4"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "EQ"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPI"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "5B2725ED"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "EQ"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPI"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "A22CB465"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "EQ"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPI"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMP"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPDEST"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "FDD58E"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "EQ"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPI"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "1FFC9A7"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "EQ"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPI"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "E89341C"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "EQ"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPI"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "13DC989F"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "EQ"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPI"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "2EB2C2D6"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "EQ"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPI"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "3E4BEE38"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "EQ"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPI"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "JUMPDEST"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 204,
											"end": 794,
											"name": "REVERT"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMPDEST"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP2"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "ADD"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "AND"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "ADD"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP3"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP2"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "ADD"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP3"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP2"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "POP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "POP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "POP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMPDEST"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "MLOAD"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP3"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP2"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "MSTORE"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "ADD"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP2"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "POP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "POP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "MLOAD"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP2"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SUB"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "RETURN"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMPDEST"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP2"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ADD"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "NOT"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "AND"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ADD"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP3"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP2"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "POP"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "POP"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "POP"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMPDEST"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "MLOAD"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP3"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ISZERO"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ISZERO"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ISZERO"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ISZERO"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP2"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "MSTORE"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ADD"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP2"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "POP"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "POP"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "MLOAD"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP2"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SUB"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "RETURN"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP3"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP3"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP3"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MSTORE"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MSTORE"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "AND"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ISZERO"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPI"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP3"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "EXP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "NOT"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "AND"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MSTORE"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP3"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "RETURN"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "JUMPDEST"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "MLOAD"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "SWAP2"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "MLOAD"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "SWAP2"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "SUB"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "RETURN"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "AND"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "AND"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MLOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MLOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DIV"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MLOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "STOP"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "JUMPDEST"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "JUMPDEST"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "MLOAD"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "DUP3"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "MSTORE"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "SWAP2"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "MLOAD"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "SWAP2"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "SUB"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "RETURN"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SUB"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SUB"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "RETURN"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "JUMPDEST"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "JUMPDEST"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "MLOAD"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "DUP1"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "DUP3"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "DUP2"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "MSTORE"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "ADD"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "SWAP2"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "POP"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "POP"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "MLOAD"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "DUP1"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "SWAP2"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "SUB"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "SWAP1"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "RETURN"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMPDEST"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP2"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ADD"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "AND"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ADD"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP3"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP2"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ISZERO"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ISZERO"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ADD"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP3"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP2"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "POP"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "POP"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "POP"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMPDEST"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "STOP"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "MLOAD"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "DUP1"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "DUP3"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "DUP2"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "MSTORE"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "ADD"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "SWAP2"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "POP"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "POP"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "MLOAD"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "DUP1"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "SWAP2"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "SUB"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "RETURN"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "JUMPDEST"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "JUMPDEST"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "MLOAD"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "DUP1"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "DUP3"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "DUP2"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "MSTORE"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "ADD"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "SWAP2"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "POP"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "POP"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "MLOAD"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "DUP1"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "SWAP2"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "SUB"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "SWAP1"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "RETURN"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMPDEST"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP2"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ADD"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "AND"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ADD"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP3"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP2"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "AND"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ADD"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP3"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP2"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "POP"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "POP"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "POP"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMPDEST"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "MLOAD"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP3"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ISZERO"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ISZERO"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ISZERO"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ISZERO"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP2"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "MSTORE"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ADD"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP2"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "POP"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "POP"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "MLOAD"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP2"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SUB"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "RETURN"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "AND"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "AND"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP3"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DIV"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MUL"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MLOAD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MSTORE"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP4"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MSTORE"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP4"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "STOP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMPDEST"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3081,
											"name": "DUP1"
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "AND"
										},
										{
											"begin": 3061,
											"end": 3068,
											"name": "DUP4"
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "AND"
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "EQ"
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "ISZERO"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "JUMPI"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MLOAD"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP2"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MSTORE"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "ADD"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP1"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP1"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "ADD"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP3"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP2"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SUB"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP3"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MSTORE"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "2B"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP2"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MSTORE"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "ADD"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP1"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH data",
											"value": "1F4DE6A436172E7F7B1540476031CB037FC18EDE9CC346A56DA1697CBD352AA9"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "2B"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SWAP2"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "CODECOPY"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "ADD"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SWAP2"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "POP"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "POP"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MLOAD"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP1"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SWAP2"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SUB"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SWAP1"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "REVERT"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "JUMPDEST"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3159,
											"name": "DUP4"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "DUP2"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "MSTORE"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "ADD"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "SWAP1"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "DUP2"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "MSTORE"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "ADD"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "KECCAK256"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3168,
											"name": "DUP5"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "AND"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "AND"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "DUP2"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "MSTORE"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "ADD"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "SWAP1"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "DUP2"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "MSTORE"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "ADD"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "KECCAK256"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "SLOAD"
										},
										{
											"begin": 3140,
											"end": 3169,
											"name": "SWAP1"
										},
										{
											"begin": 3140,
											"end": 3169,
											"name": "POP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP3"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP2"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "POP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "POP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMPDEST"
										},
										{
											"begin": 1025,
											"end": 1029,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1080,
											"name": "DUP4"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "NOT"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "AND"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "NOT"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "AND"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "DUP2"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "MSTORE"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "ADD"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "DUP2"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "MSTORE"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "ADD"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "KECCAK256"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SLOAD"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "EXP"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "DIV"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "AND"
										},
										{
											"begin": 1041,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1041,
											"end": 1081,
											"name": "POP"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP2"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "POP"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST"
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2803,
											"end": 2807,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SLOAD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ISZERO"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MUL"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SUB"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DIV"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DIV"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MUL"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MLOAD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP3"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SLOAD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ISZERO"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MUL"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SUB"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DIV"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ISZERO"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPI"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "LT"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPI"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP4"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SLOAD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DIV"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MUL"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP4"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMP"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPDEST"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "KECCAK256"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPDEST"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SLOAD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP4"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "GT"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPI"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SUB"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPDEST"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 401,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 401,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST"
										},
										{
											"begin": 5837,
											"end": 5844,
											"name": "DUP2"
										},
										{
											"begin": 5837,
											"end": 5851,
											"name": "MLOAD"
										},
										{
											"begin": 5823,
											"end": 5826,
											"name": "DUP4"
										},
										{
											"begin": 5823,
											"end": 5833,
											"name": "MLOAD"
										},
										{
											"begin": 5823,
											"end": 5851,
											"name": "EQ"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "JUMPI"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MLOAD"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP2"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MSTORE"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "ADD"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP1"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP1"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "ADD"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP3"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP2"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SUB"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP3"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MSTORE"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP2"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MSTORE"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "ADD"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP1"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH data",
											"value": "E909E0C9A8F96B4F9AF03B716811ECE20BEB070BE416893ED1D50619B5930807"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SWAP2"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "CODECOPY"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "ADD"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SWAP2"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "POP"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "POP"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MLOAD"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP1"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SWAP2"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SUB"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SWAP1"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "REVERT"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "JUMPDEST"
										},
										{
											"begin": 5928,
											"end": 5929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5930,
											"name": "AND"
										},
										{
											"begin": 5914,
											"end": 5916,
											"name": "DUP5"
										},
										{
											"begin": 5914,
											"end": 5930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5930,
											"name": "AND"
										},
										{
											"begin": 5914,
											"end": 5930,
											"name": "EQ"
										},
										{
											"begin": 5914,
											"end": 5930,
											"name": "ISZERO"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "JUMPI"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MLOAD"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP2"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MSTORE"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "ADD"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP1"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP1"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "ADD"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP3"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP2"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SUB"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP3"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MSTORE"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP2"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MSTORE"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "ADD"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP1"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH data",
											"value": "6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SWAP2"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "CODECOPY"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "ADD"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SWAP2"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "POP"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "POP"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MLOAD"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP1"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SWAP2"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SUB"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SWAP1"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "REVERT"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "JUMPDEST"
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 6011,
											"end": 6021,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "JUMPDEST"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "AND"
										},
										{
											"begin": 6003,
											"end": 6007,
											"name": "DUP6"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "AND"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "EQ"
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "DUP1"
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "JUMPI"
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "POP"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 6044,
											"end": 6048,
											"name": "DUP6"
										},
										{
											"begin": 6050,
											"end": 6062,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 6050,
											"end": 6060,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 6050,
											"end": 6062,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6050,
											"end": 6062,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 6050,
											"end": 6062,
											"name": "JUMPDEST"
										},
										{
											"begin": 6027,
											"end": 6043,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "JUMPDEST"
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "JUMPDEST"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "JUMPI"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MLOAD"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP2"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MSTORE"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "ADD"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP1"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP1"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "ADD"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP3"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP2"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SUB"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP3"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MSTORE"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP2"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MSTORE"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "ADD"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP1"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH data",
											"value": "70A41C66829F5508884CDA9EF3D2F72551B34F23E4035BE97941681123D2D686"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SWAP2"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "CODECOPY"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "ADD"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SWAP2"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "POP"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "POP"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MLOAD"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP1"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SWAP2"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SUB"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SWAP1"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "REVERT"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "JUMPDEST"
										},
										{
											"begin": 6150,
											"end": 6166,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 6169,
											"end": 6179,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "JUMPDEST"
										},
										{
											"begin": 6150,
											"end": 6181,
											"name": "SWAP1"
										},
										{
											"begin": 6150,
											"end": 6181,
											"name": "POP"
										},
										{
											"begin": 6192,
											"end": 6252,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 6213,
											"end": 6221,
											"name": "DUP2"
										},
										{
											"begin": 6223,
											"end": 6227,
											"name": "DUP8"
										},
										{
											"begin": 6229,
											"end": 6231,
											"name": "DUP8"
										},
										{
											"begin": 6233,
											"end": 6236,
											"name": "DUP8"
										},
										{
											"begin": 6238,
											"end": 6245,
											"name": "DUP8"
										},
										{
											"begin": 6247,
											"end": 6251,
											"name": "DUP8"
										},
										{
											"begin": 6192,
											"end": 6212,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 6192,
											"end": 6252,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6192,
											"end": 6252,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 6192,
											"end": 6252,
											"name": "JUMPDEST"
										},
										{
											"begin": 6268,
											"end": 6277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6280,
											"end": 6281,
											"name": "DUP1"
										},
										{
											"begin": 6268,
											"end": 6281,
											"name": "SWAP1"
										},
										{
											"begin": 6268,
											"end": 6281,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "JUMPDEST"
										},
										{
											"begin": 6287,
											"end": 6290,
											"name": "DUP5"
										},
										{
											"begin": 6287,
											"end": 6297,
											"name": "MLOAD"
										},
										{
											"begin": 6283,
											"end": 6284,
											"name": "DUP2"
										},
										{
											"begin": 6283,
											"end": 6297,
											"name": "LT"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "ISZERO"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 6318,
											"end": 6328,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6331,
											"end": 6334,
											"name": "DUP6"
										},
										{
											"begin": 6335,
											"end": 6336,
											"name": "DUP3"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "DUP2"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "MLOAD"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "DUP2"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "LT"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "JUMPI"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "INVALID"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "JUMPDEST"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "MUL"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "ADD"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "ADD"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "MLOAD"
										},
										{
											"begin": 6318,
											"end": 6337,
											"name": "SWAP1"
										},
										{
											"begin": 6318,
											"end": 6337,
											"name": "POP"
										},
										{
											"begin": 6351,
											"end": 6365,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6368,
											"end": 6375,
											"name": "DUP6"
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "DUP4"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "DUP2"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "MLOAD"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "DUP2"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "LT"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "JUMPI"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "INVALID"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "JUMPDEST"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "MUL"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "ADD"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "ADD"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "MLOAD"
										},
										{
											"begin": 6351,
											"end": 6378,
											"name": "SWAP1"
										},
										{
											"begin": 6351,
											"end": 6378,
											"name": "POP"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 6456,
											"end": 6462,
											"name": "DUP2"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "MLOAD"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "DUP1"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "ADD"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "MSTORE"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "DUP1"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "DUP2"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "MSTORE"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "ADD"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH data",
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "SWAP2"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "CODECOPY"
										},
										{
											"begin": 6415,
											"end": 6424,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6427,
											"name": "DUP7"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "DUP2"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "MSTORE"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "ADD"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "SWAP1"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "DUP2"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "MSTORE"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "ADD"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "KECCAK256"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6433,
											"name": "DUP14"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "AND"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "AND"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "DUP2"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "MSTORE"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "ADD"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "SWAP1"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "DUP2"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "MSTORE"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "ADD"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "KECCAK256"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "SLOAD"
										},
										{
											"begin": 6415,
											"end": 6438,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 6415,
											"end": 6438,
											"name": "SWAP1"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "SWAP3"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "SWAP2"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "SWAP1"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "AND"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "JUMPDEST"
										},
										{
											"begin": 6393,
											"end": 6402,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6403,
											"end": 6405,
											"name": "DUP5"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "DUP2"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "MSTORE"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "ADD"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "SWAP1"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "DUP2"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "MSTORE"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "ADD"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "KECCAK256"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "DUP12"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "AND"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "AND"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "DUP2"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "MSTORE"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "ADD"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "SWAP1"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "DUP2"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "MSTORE"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "ADD"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "KECCAK256"
										},
										{
											"begin": 6393,
											"end": 6538,
											"name": "DUP2"
										},
										{
											"begin": 6393,
											"end": 6538,
											"name": "SWAP1"
										},
										{
											"begin": 6393,
											"end": 6538,
											"name": "SSTORE"
										},
										{
											"begin": 6393,
											"end": 6538,
											"name": "POP"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 6594,
											"end": 6600,
											"name": "DUP2"
										},
										{
											"begin": 6572,
											"end": 6581,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6584,
											"name": "DUP6"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "DUP2"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "MSTORE"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "ADD"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "SWAP1"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "DUP2"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "MSTORE"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "ADD"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "KECCAK256"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6588,
											"name": "DUP12"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "AND"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "AND"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "DUP2"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "MSTORE"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "ADD"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "SWAP1"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "DUP2"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "MSTORE"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "ADD"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "KECCAK256"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "SLOAD"
										},
										{
											"begin": 6572,
											"end": 6593,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 6572,
											"end": 6593,
											"name": "SWAP1"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "SWAP2"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "SWAP1"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "AND"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "JUMPDEST"
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6564,
											"name": "DUP5"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "DUP2"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "MSTORE"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "ADD"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "SWAP1"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "DUP2"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "MSTORE"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "ADD"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "KECCAK256"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6568,
											"name": "DUP11"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "AND"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "AND"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "DUP2"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "MSTORE"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "ADD"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "SWAP1"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "DUP2"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "MSTORE"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "ADD"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "KECCAK256"
										},
										{
											"begin": 6552,
											"end": 6601,
											"name": "DUP2"
										},
										{
											"begin": 6552,
											"end": 6601,
											"name": "SWAP1"
										},
										{
											"begin": 6552,
											"end": 6601,
											"name": "SSTORE"
										},
										{
											"begin": 6552,
											"end": 6601,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "POP"
										},
										{
											"begin": 6299,
											"end": 6302,
											"name": "DUP1"
										},
										{
											"begin": 6299,
											"end": 6302,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6299,
											"end": 6302,
											"name": "ADD"
										},
										{
											"begin": 6299,
											"end": 6302,
											"name": "SWAP1"
										},
										{
											"begin": 6299,
											"end": 6302,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "JUMP"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "JUMPDEST"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "POP"
										},
										{
											"begin": 6657,
											"end": 6659,
											"name": "DUP5"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "AND"
										},
										{
											"begin": 6651,
											"end": 6655,
											"name": "DUP7"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "AND"
										},
										{
											"begin": 6641,
											"end": 6649,
											"name": "DUP3"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "AND"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6661,
											"end": 6664,
											"name": "DUP8"
										},
										{
											"begin": 6666,
											"end": 6673,
											"name": "DUP8"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SUB"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP6"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MUL"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SUB"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP3"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP5"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MUL"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP5"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SUB"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "LOG4"
										},
										{
											"begin": 6685,
											"end": 6760,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 6721,
											"end": 6729,
											"name": "DUP2"
										},
										{
											"begin": 6731,
											"end": 6735,
											"name": "DUP8"
										},
										{
											"begin": 6737,
											"end": 6739,
											"name": "DUP8"
										},
										{
											"begin": 6741,
											"end": 6744,
											"name": "DUP8"
										},
										{
											"begin": 6746,
											"end": 6753,
											"name": "DUP8"
										},
										{
											"begin": 6755,
											"end": 6759,
											"name": "DUP8"
										},
										{
											"begin": 6685,
											"end": 6720,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 6685,
											"end": 6760,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6685,
											"end": 6760,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 6685,
											"end": 6760,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "JUMPDEST"
										},
										{
											"begin": 272,
											"end": 273,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 273,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST"
										},
										{
											"begin": 3490,
											"end": 3506,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3549,
											"end": 3552,
											"name": "DUP2"
										},
										{
											"begin": 3549,
											"end": 3559,
											"name": "MLOAD"
										},
										{
											"begin": 3530,
											"end": 3538,
											"name": "DUP4"
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "MLOAD"
										},
										{
											"begin": 3530,
											"end": 3559,
											"name": "EQ"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "JUMPI"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MLOAD"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP2"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MSTORE"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "ADD"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP1"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP1"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "ADD"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP3"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP2"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SUB"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP3"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MSTORE"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP2"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MSTORE"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "ADD"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP1"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH data",
											"value": "E155F5D69798C6205436A388A4F3A5FD42F54147B40F4D63A2C8071FF8A9FEE5"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SWAP2"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "CODECOPY"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "ADD"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SWAP2"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "POP"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "POP"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MLOAD"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP1"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SWAP2"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SUB"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SWAP1"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "REVERT"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "JUMPDEST"
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3663,
											"end": 3671,
											"name": "DUP4"
										},
										{
											"begin": 3663,
											"end": 3678,
											"name": "MLOAD"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MLOAD"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "SWAP1"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP3"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MSTORE"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MUL"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ADD"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP3"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ADD"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MSTORE"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ISZERO"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "JUMPI"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP2"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "SWAP1"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "POP"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "JUMPDEST"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "POP"
										},
										{
											"begin": 3616,
											"end": 3679,
											"name": "SWAP1"
										},
										{
											"begin": 3616,
											"end": 3679,
											"name": "POP"
										},
										{
											"begin": 3695,
											"end": 3704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3708,
											"name": "DUP1"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "SWAP1"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "POP"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "JUMPDEST"
										},
										{
											"begin": 3714,
											"end": 3722,
											"name": "DUP5"
										},
										{
											"begin": 3714,
											"end": 3729,
											"name": "MLOAD"
										},
										{
											"begin": 3710,
											"end": 3711,
											"name": "DUP2"
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "LT"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "ISZERO"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "JUMPI"
										},
										{
											"begin": 3781,
											"end": 3782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "AND"
										},
										{
											"begin": 3758,
											"end": 3766,
											"name": "DUP6"
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "DUP3"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "DUP2"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "MLOAD"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "DUP2"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "LT"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "JUMPI"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "INVALID"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "JUMPDEST"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "MUL"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "ADD"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "ADD"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "MLOAD"
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "AND"
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "EQ"
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "ISZERO"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "JUMPI"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MLOAD"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP2"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MSTORE"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "ADD"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP1"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP1"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "ADD"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP3"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP2"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SUB"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP3"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MSTORE"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "31"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP2"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MSTORE"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "ADD"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP1"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH data",
											"value": "1FBBB69D10332726591DC7EE4A23A94661EDA2BEC5CE6BF93A68249147DC8D9C"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "31"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SWAP2"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "CODECOPY"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "ADD"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SWAP2"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "POP"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "POP"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MLOAD"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP1"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SWAP2"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SUB"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SWAP1"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "REVERT"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "JUMPDEST"
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3883,
											"name": "DUP6"
										},
										{
											"begin": 3884,
											"end": 3885,
											"name": "DUP4"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "DUP2"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "MLOAD"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "DUP2"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "LT"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "JUMPI"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "INVALID"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "JUMPDEST"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "MUL"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "ADD"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "ADD"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "MLOAD"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "DUP2"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "SWAP1"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "DUP2"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "KECCAK256"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3896,
											"name": "DUP7"
										},
										{
											"begin": 3897,
											"end": 3898,
											"name": "DUP4"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "DUP2"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "MLOAD"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "DUP2"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "LT"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "JUMPI"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "INVALID"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "JUMPDEST"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "MUL"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "ADD"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "ADD"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "MLOAD"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "AND"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "AND"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "DUP2"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "SWAP1"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "DUP2"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "KECCAK256"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "SLOAD"
										},
										{
											"begin": 3851,
											"end": 3864,
											"name": "DUP3"
										},
										{
											"begin": 3865,
											"end": 3866,
											"name": "DUP3"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "DUP2"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "MLOAD"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "DUP2"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "LT"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "JUMPI"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "INVALID"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "JUMPDEST"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "MUL"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "ADD"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "ADD"
										},
										{
											"begin": 3851,
											"end": 3900,
											"name": "DUP2"
										},
										{
											"begin": 3851,
											"end": 3900,
											"name": "DUP2"
										},
										{
											"begin": 3851,
											"end": 3900,
											"name": "MSTORE"
										},
										{
											"begin": 3851,
											"end": 3900,
											"name": "POP"
										},
										{
											"begin": 3851,
											"end": 3900,
											"name": "POP"
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "DUP1"
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "ADD"
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "SWAP1"
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "POP"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "JUMP"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "JUMPDEST"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "POP"
										},
										{
											"begin": 3928,
											"end": 3941,
											"name": "DUP1"
										},
										{
											"begin": 3921,
											"end": 3941,
											"name": "SWAP2"
										},
										{
											"begin": 3921,
											"end": 3941,
											"name": "POP"
										},
										{
											"begin": 3921,
											"end": 3941,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "JUMPDEST"
										},
										{
											"begin": 441,
											"end": 442,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "DUP2"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMPDEST"
										},
										{
											"begin": 4134,
											"end": 4142,
											"name": "DUP2"
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "AND"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 4118,
											"end": 4128,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "JUMPDEST"
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "AND"
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "EQ"
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "ISZERO"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "JUMPI"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MLOAD"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP2"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MSTORE"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "ADD"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP1"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP1"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "ADD"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP3"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP2"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SUB"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP3"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MSTORE"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP2"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MSTORE"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "ADD"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP1"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH data",
											"value": "DF9806C6DC743DE602E49918A67B580590D69AB768BDB59F977C0A884A91A7C2"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SWAP2"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "CODECOPY"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "ADD"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SWAP2"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "POP"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "POP"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MLOAD"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP1"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SWAP2"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SUB"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SWAP1"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "REVERT"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "JUMPDEST"
										},
										{
											"begin": 4244,
											"end": 4252,
											"name": "DUP1"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4230,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 4218,
											"end": 4228,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 4218,
											"end": 4230,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4218,
											"end": 4230,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 4218,
											"end": 4230,
											"name": "JUMPDEST"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "AND"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "AND"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "DUP2"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "MSTORE"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "ADD"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "SWAP1"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "DUP2"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "MSTORE"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "ADD"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "KECCAK256"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4240,
											"name": "DUP5"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "AND"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "AND"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "DUP2"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "MSTORE"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "ADD"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "SWAP1"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "DUP2"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "MSTORE"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "ADD"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "KECCAK256"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "EXP"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "DUP2"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SLOAD"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "DUP2"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "MUL"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "NOT"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "AND"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SWAP1"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "DUP4"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "ISZERO"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "ISZERO"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "MUL"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "OR"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SWAP1"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SSTORE"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "POP"
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "DUP2"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "AND"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 4282,
											"end": 4292,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "JUMPDEST"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "AND"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "DUP4"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "MLOAD"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "DUP1"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "DUP3"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "ISZERO"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "ISZERO"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "ISZERO"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "ISZERO"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "DUP2"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "MSTORE"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "ADD"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "SWAP2"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "POP"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "POP"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "MLOAD"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "DUP1"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "SWAP2"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "SUB"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "SWAP1"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "LOG3"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "POP"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "POP"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "JUMPDEST"
										},
										{
											"begin": 360,
											"end": 361,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "DUP2"
										},
										{
											"begin": 321,
											"end": 361,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "JUMPDEST"
										},
										{
											"begin": 313,
											"end": 314,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "DUP2"
										},
										{
											"begin": 280,
											"end": 314,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMPDEST"
										},
										{
											"begin": 4480,
											"end": 4484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4529,
											"name": "DUP5"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "AND"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "AND"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "DUP2"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "MSTORE"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "ADD"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "DUP2"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "MSTORE"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "ADD"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "KECCAK256"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4539,
											"name": "DUP4"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "AND"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "AND"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "DUP2"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "MSTORE"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "ADD"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "DUP2"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "MSTORE"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "ADD"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "KECCAK256"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SLOAD"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "EXP"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "DIV"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "AND"
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "POP"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP3"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP2"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "POP"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "POP"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST"
										},
										{
											"begin": 4843,
											"end": 4844,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "AND"
										},
										{
											"begin": 4829,
											"end": 4831,
											"name": "DUP5"
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "AND"
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "EQ"
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "ISZERO"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "JUMPI"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MLOAD"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP2"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MSTORE"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "ADD"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP1"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP1"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "ADD"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP3"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP2"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SUB"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP3"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MSTORE"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP2"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MSTORE"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "ADD"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP1"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH data",
											"value": "6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SWAP2"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "CODECOPY"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "ADD"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SWAP2"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "POP"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "POP"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MLOAD"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP1"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SWAP2"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SUB"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SWAP1"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "REVERT"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "JUMPDEST"
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 4926,
											"end": 4936,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "JUMPDEST"
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "AND"
										},
										{
											"begin": 4918,
											"end": 4922,
											"name": "DUP6"
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "AND"
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "EQ"
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "DUP1"
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "JUMPI"
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "POP"
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 4959,
											"end": 4963,
											"name": "DUP6"
										},
										{
											"begin": 4965,
											"end": 4977,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 4965,
											"end": 4975,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 4965,
											"end": 4977,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4965,
											"end": 4977,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 4965,
											"end": 4977,
											"name": "JUMPDEST"
										},
										{
											"begin": 4942,
											"end": 4958,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "JUMPDEST"
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "JUMPDEST"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "JUMPI"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MLOAD"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP2"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MSTORE"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "ADD"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP1"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP1"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "ADD"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP3"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP2"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SUB"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP3"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MSTORE"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP2"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MSTORE"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "ADD"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP1"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH data",
											"value": "394AC917F53B95EE25DB2A5DA5874C5B1F0AF95A4FDF34992FF8B19C458F239A"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SWAP2"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "CODECOPY"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "ADD"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SWAP2"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "POP"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "POP"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MLOAD"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP1"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SWAP2"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SUB"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SWAP1"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "REVERT"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "JUMPDEST"
										},
										{
											"begin": 5056,
											"end": 5072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 5075,
											"end": 5085,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "JUMPDEST"
										},
										{
											"begin": 5056,
											"end": 5087,
											"name": "SWAP1"
										},
										{
											"begin": 5056,
											"end": 5087,
											"name": "POP"
										},
										{
											"begin": 5098,
											"end": 5194,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 5119,
											"end": 5127,
											"name": "DUP2"
										},
										{
											"begin": 5129,
											"end": 5133,
											"name": "DUP8"
										},
										{
											"begin": 5135,
											"end": 5137,
											"name": "DUP8"
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 5157,
											"end": 5159,
											"name": "DUP9"
										},
										{
											"begin": 5139,
											"end": 5156,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "JUMPDEST"
										},
										{
											"begin": 5162,
											"end": 5187,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 5180,
											"end": 5186,
											"name": "DUP9"
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 5162,
											"end": 5187,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5162,
											"end": 5187,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 5162,
											"end": 5187,
											"name": "JUMPDEST"
										},
										{
											"begin": 5189,
											"end": 5193,
											"name": "DUP8"
										},
										{
											"begin": 5098,
											"end": 5118,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5098,
											"end": 5194,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5098,
											"end": 5194,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 5098,
											"end": 5194,
											"name": "JUMPDEST"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 5251,
											"end": 5257,
											"name": "DUP4"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "MLOAD"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "DUP1"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "ADD"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "MSTORE"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "DUP1"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "DUP2"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "MSTORE"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "ADD"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH data",
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "SWAP2"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "CODECOPY"
										},
										{
											"begin": 5227,
											"end": 5236,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5237,
											"end": 5239,
											"name": "DUP9"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "DUP2"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "MSTORE"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "ADD"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "SWAP1"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "DUP2"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "MSTORE"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "ADD"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "KECCAK256"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5245,
											"name": "DUP11"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "AND"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "AND"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "DUP2"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "MSTORE"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "ADD"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "SWAP1"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "DUP2"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "MSTORE"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "ADD"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "KECCAK256"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "SLOAD"
										},
										{
											"begin": 5227,
											"end": 5250,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 5227,
											"end": 5250,
											"name": "SWAP1"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "SWAP3"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "SWAP2"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "SWAP1"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "AND"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "JUMPDEST"
										},
										{
											"begin": 5205,
											"end": 5214,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5217,
											"name": "DUP7"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "DUP2"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "MSTORE"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "ADD"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "SWAP1"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "DUP2"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "MSTORE"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "ADD"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "KECCAK256"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5223,
											"name": "DUP9"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "AND"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "AND"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "DUP2"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "MSTORE"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "ADD"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "SWAP1"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "DUP2"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "MSTORE"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "ADD"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "KECCAK256"
										},
										{
											"begin": 5205,
											"end": 5304,
											"name": "DUP2"
										},
										{
											"begin": 5205,
											"end": 5304,
											"name": "SWAP1"
										},
										{
											"begin": 5205,
											"end": 5304,
											"name": "SSTORE"
										},
										{
											"begin": 5205,
											"end": 5304,
											"name": "POP"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 5356,
											"end": 5362,
											"name": "DUP4"
										},
										{
											"begin": 5334,
											"end": 5343,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5346,
											"name": "DUP8"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "DUP2"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "MSTORE"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "ADD"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "SWAP1"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "DUP2"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "MSTORE"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "ADD"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "KECCAK256"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5348,
											"end": 5350,
											"name": "DUP9"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "AND"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "AND"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "DUP2"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "MSTORE"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "ADD"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "SWAP1"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "DUP2"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "MSTORE"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "ADD"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "KECCAK256"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "SLOAD"
										},
										{
											"begin": 5334,
											"end": 5355,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 5334,
											"end": 5355,
											"name": "SWAP1"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "SWAP2"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "SWAP1"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "AND"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "JUMPDEST"
										},
										{
											"begin": 5314,
											"end": 5323,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5324,
											"end": 5326,
											"name": "DUP7"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "DUP2"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "MSTORE"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "ADD"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "SWAP1"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "DUP2"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "MSTORE"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "ADD"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "KECCAK256"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5328,
											"end": 5330,
											"name": "DUP8"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "AND"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "AND"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "DUP2"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "MSTORE"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "ADD"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "SWAP1"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "DUP2"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "MSTORE"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "ADD"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "KECCAK256"
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "DUP2"
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "SWAP1"
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "SSTORE"
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "POP"
										},
										{
											"begin": 5410,
											"end": 5412,
											"name": "DUP5"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "AND"
										},
										{
											"begin": 5404,
											"end": 5408,
											"name": "DUP7"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "AND"
										},
										{
											"begin": 5394,
											"end": 5402,
											"name": "DUP3"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "AND"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5414,
											"end": 5416,
											"name": "DUP8"
										},
										{
											"begin": 5418,
											"end": 5424,
											"name": "DUP8"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "MLOAD"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP1"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP4"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP2"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "MSTORE"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "ADD"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP3"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP2"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "MSTORE"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "ADD"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP3"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "POP"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "POP"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "POP"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "MLOAD"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP1"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP2"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SUB"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP1"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "LOG4"
										},
										{
											"begin": 5436,
											"end": 5504,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 5467,
											"end": 5475,
											"name": "DUP2"
										},
										{
											"begin": 5477,
											"end": 5481,
											"name": "DUP8"
										},
										{
											"begin": 5483,
											"end": 5485,
											"name": "DUP8"
										},
										{
											"begin": 5487,
											"end": 5489,
											"name": "DUP8"
										},
										{
											"begin": 5491,
											"end": 5497,
											"name": "DUP8"
										},
										{
											"begin": 5499,
											"end": 5503,
											"name": "DUP8"
										},
										{
											"begin": 5436,
											"end": 5466,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5436,
											"end": 5504,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5436,
											"end": 5504,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 5436,
											"end": 5504,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "JUMPDEST"
										},
										{
											"begin": 643,
											"end": 658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 677,
											"end": 687,
											"name": "CALLER"
										},
										{
											"begin": 670,
											"end": 687,
											"name": "SWAP1"
										},
										{
											"begin": 670,
											"end": 687,
											"name": "POP"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "SWAP1"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "JUMPDEST"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "POP"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "POP"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "POP"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "POP"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "POP"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "POP"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMPDEST"
										},
										{
											"begin": 1832,
											"end": 1839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "DUP4"
										},
										{
											"begin": 1859,
											"end": 1860,
											"name": "DUP4"
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "GT"
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "ISZERO"
										},
										{
											"begin": 1867,
											"end": 1879,
											"name": "DUP3"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "AND"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ISZERO"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "EXP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "NOT"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "AND"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP3"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "REVERT"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1890,
											"end": 1899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1907,
											"name": "DUP4"
										},
										{
											"begin": 1902,
											"end": 1903,
											"name": "DUP6"
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "SUB"
										},
										{
											"begin": 1890,
											"end": 1907,
											"name": "SWAP1"
										},
										{
											"begin": 1890,
											"end": 1907,
											"name": "POP"
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "DUP1"
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "SWAP2"
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "POP"
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "POP"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "SWAP4"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "SWAP3"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "POP"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "POP"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "POP"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "JUMPDEST"
										},
										{
											"begin": 932,
											"end": 939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 951,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 967,
											"end": 968,
											"name": "DUP3"
										},
										{
											"begin": 963,
											"end": 964,
											"name": "DUP5"
										},
										{
											"begin": 963,
											"end": 968,
											"name": "ADD"
										},
										{
											"begin": 951,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 951,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 991,
											"end": 992,
											"name": "DUP4"
										},
										{
											"begin": 986,
											"end": 987,
											"name": "DUP2"
										},
										{
											"begin": 986,
											"end": 992,
											"name": "LT"
										},
										{
											"begin": 986,
											"end": 992,
											"name": "ISZERO"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "JUMPI"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MLOAD"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP1"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP1"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SUB"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP1"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "POP"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP2"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "POP"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "POP"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MLOAD"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP1"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP2"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SUB"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "REVERT"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "JUMPDEST"
										},
										{
											"begin": 1042,
											"end": 1043,
											"name": "DUP1"
										},
										{
											"begin": 1035,
											"end": 1043,
											"name": "SWAP2"
										},
										{
											"begin": 1035,
											"end": 1043,
											"name": "POP"
										},
										{
											"begin": 1035,
											"end": 1043,
											"name": "POP"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "SWAP3"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "SWAP2"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "POP"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "POP"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "JUMPDEST"
										},
										{
											"begin": 13520,
											"end": 13535,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 13520,
											"end": 13522,
											"name": "DUP5"
										},
										{
											"begin": 13520,
											"end": 13533,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13520,
											"end": 13533,
											"name": "AND"
										},
										{
											"begin": 13520,
											"end": 13533,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 13520,
											"end": 13535,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13520,
											"end": 13535,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 13520,
											"end": 13535,
											"name": "JUMPDEST"
										},
										{
											"begin": 13516,
											"end": 14048,
											"name": "ISZERO"
										},
										{
											"begin": 13516,
											"end": 14048,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 13516,
											"end": 14048,
											"name": "JUMPI"
										},
										{
											"begin": 13572,
											"end": 13574,
											"name": "DUP4"
										},
										{
											"begin": 13555,
											"end": 13598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13555,
											"end": 13598,
											"name": "AND"
										},
										{
											"begin": 13555,
											"end": 13598,
											"name": "PUSH",
											"value": "BC197C81"
										},
										{
											"begin": 13599,
											"end": 13607,
											"name": "DUP8"
										},
										{
											"begin": 13609,
											"end": 13613,
											"name": "DUP8"
										},
										{
											"begin": 13615,
											"end": 13618,
											"name": "DUP7"
										},
										{
											"begin": 13620,
											"end": 13627,
											"name": "DUP7"
										},
										{
											"begin": 13629,
											"end": 13633,
											"name": "DUP7"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP7"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SHL"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP7"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP6"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP5"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP5"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP8"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MUL"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP5"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP7"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MUL"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP5"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP3"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP6"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP3"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "EXP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "NOT"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP9"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP8"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "GAS"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "CALL"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP3"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP3"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPI"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20,
											"end": 24,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14,
											"end": 25,
											"name": "MLOAD"
										},
										{
											"begin": 6,
											"end": 25,
											"name": "SWAP1"
										},
										{
											"begin": 6,
											"end": 25,
											"name": "POP"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37,
											"end": 41,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 45,
											"name": "MSTORE"
										},
										{
											"begin": 57,
											"end": 58,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "ISZERO"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "JUMPI"
										},
										{
											"begin": 93,
											"end": 97,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 75,
											"end": 91,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 72,
											"end": 98,
											"name": "LT"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "ISZERO"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "JUMPI"
										},
										{
											"begin": 109,
											"end": 110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "SWAP1"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "POP"
										},
										{
											"begin": 111,
											"end": 116,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 111,
											"end": 116,
											"name": "JUMP"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "JUMPDEST"
										},
										{
											"begin": 145,
											"end": 146,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 147,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 173,
											"end": 181,
											"name": "MLOAD"
										},
										{
											"begin": 168,
											"end": 171,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 164,
											"end": 182,
											"name": "SHR"
										},
										{
											"begin": 206,
											"end": 216,
											"name": "PUSH",
											"value": "8C379A0"
										},
										{
											"begin": 201,
											"end": 204,
											"name": "DUP2"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "EQ"
										},
										{
											"begin": 188,
											"end": 190,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 188,
											"end": 190,
											"name": "JUMPI"
										},
										{
											"begin": 229,
											"end": 230,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 221,
											"end": 230,
											"name": "SWAP2"
										},
										{
											"begin": 221,
											"end": 230,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "JUMP"
										},
										{
											"begin": 188,
											"end": 190,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 188,
											"end": 190,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 291,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 272,
											"end": 288,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 268,
											"end": 292,
											"name": "SUB"
										},
										{
											"begin": 265,
											"end": 266,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 259,
											"end": 263,
											"name": "DUP4"
										},
										{
											"begin": 244,
											"end": 293,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 319,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 313,
											"end": 324,
											"name": "MLOAD"
										},
										{
											"begin": 403,
											"end": 419,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 396,
											"end": 400,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 388,
											"end": 394,
											"name": "DUP3"
										},
										{
											"begin": 384,
											"end": 401,
											"name": "ADD"
										},
										{
											"begin": 381,
											"end": 420,
											"name": "GT"
										},
										{
											"begin": 354,
											"end": 372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP3"
										},
										{
											"begin": 343,
											"end": 373,
											"name": "GT"
										},
										{
											"begin": 333,
											"end": 427,
											"name": "OR"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "ISZERO"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "JUMPI"
										},
										{
											"begin": 444,
											"end": 445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 436,
											"end": 445,
											"name": "SWAP3"
										},
										{
											"begin": 436,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "JUMP"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "JUMPDEST"
										},
										{
											"begin": 491,
											"end": 497,
											"name": "DUP1"
										},
										{
											"begin": 485,
											"end": 489,
											"name": "DUP4"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ADD"
										},
										{
											"begin": 524,
											"end": 527,
											"name": "DUP1"
										},
										{
											"begin": 518,
											"end": 528,
											"name": "MLOAD"
										},
										{
											"begin": 548,
											"end": 566,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 540,
											"end": 546,
											"name": "DUP2"
										},
										{
											"begin": 537,
											"end": 567,
											"name": "GT"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "ISZERO"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "JUMPI"
										},
										{
											"begin": 578,
											"end": 579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "SWAP5"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "JUMP"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "JUMPDEST"
										},
										{
											"begin": 624,
											"end": 630,
											"name": "DUP1"
										},
										{
											"begin": 617,
											"end": 621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 612,
											"end": 615,
											"name": "DUP4"
										},
										{
											"begin": 608,
											"end": 622,
											"name": "ADD"
										},
										{
											"begin": 604,
											"end": 631,
											"name": "ADD"
										},
										{
											"begin": 658,
											"end": 674,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 652,
											"end": 656,
											"name": "DUP7"
										},
										{
											"begin": 648,
											"end": 675,
											"name": "ADD"
										},
										{
											"begin": 643,
											"end": 646,
											"name": "DUP2"
										},
										{
											"begin": 640,
											"end": 676,
											"name": "GT"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "ISZERO"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "JUMPI"
										},
										{
											"begin": 687,
											"end": 688,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 679,
											"end": 688,
											"name": "SWAP6"
										},
										{
											"begin": 679,
											"end": 688,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "JUMP"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "JUMPDEST"
										},
										{
											"begin": 739,
											"end": 743,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 735,
											"end": 744,
											"name": "NOT"
										},
										{
											"begin": 728,
											"end": 732,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 723,
											"end": 726,
											"name": "DUP3"
										},
										{
											"begin": 719,
											"end": 733,
											"name": "ADD"
										},
										{
											"begin": 715,
											"end": 745,
											"name": "AND"
										},
										{
											"begin": 709,
											"end": 713,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 702,
											"end": 746,
											"name": "MSTORE"
										},
										{
											"begin": 760,
											"end": 763,
											"name": "DUP3"
										},
										{
											"begin": 752,
											"end": 763,
											"name": "SWAP6"
										},
										{
											"begin": 752,
											"end": 763,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "JUMPDEST"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "DUP1"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPI"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "POP"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMP"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPDEST"
										},
										{
											"begin": 13914,
											"end": 13920,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MSTORE"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP3"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SUB"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP3"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MSTORE"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MSTORE"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "AND"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ISZERO"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "JUMPI"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP3"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SUB"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SUB"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "EXP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SUB"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "NOT"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "AND"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MSTORE"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "JUMPDEST"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP3"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SUB"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "REVERT"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPDEST"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MLOAD"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP2"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MSTORE"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "ADD"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP1"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP1"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "ADD"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP3"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP2"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SUB"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP3"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MSTORE"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP2"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MSTORE"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "ADD"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP1"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH data",
											"value": "AA752FB1526000E5241602AFFC3D70EF506DA48A27EA57140102B439E655ED"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SWAP2"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "CODECOPY"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "ADD"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SWAP2"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "POP"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "POP"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MLOAD"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP1"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SWAP2"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SUB"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SWAP1"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "REVERT"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPDEST"
										},
										{
											"begin": 13695,
											"end": 13747,
											"name": "PUSH",
											"value": "BC197C81"
										},
										{
											"begin": 13695,
											"end": 13747,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13695,
											"end": 13747,
											"name": "SHL"
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "NOT"
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "AND"
										},
										{
											"begin": 13683,
											"end": 13691,
											"name": "DUP2"
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "NOT"
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "AND"
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "EQ"
										},
										{
											"begin": 13679,
											"end": 13840,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 13679,
											"end": 13840,
											"name": "JUMPI"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MLOAD"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP2"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MSTORE"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "ADD"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP1"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP1"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "ADD"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP3"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP2"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SUB"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP3"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MSTORE"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP2"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MSTORE"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "ADD"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP1"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH data",
											"value": "587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SWAP2"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "CODECOPY"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "ADD"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SWAP2"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "POP"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "POP"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MLOAD"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP1"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SWAP2"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SUB"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SWAP1"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "REVERT"
										},
										{
											"begin": 13679,
											"end": 13840,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 13679,
											"end": 13840,
											"name": "JUMPDEST"
										},
										{
											"begin": 13635,
											"end": 13854,
											"name": "POP"
										},
										{
											"begin": 13516,
											"end": 14048,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 13516,
											"end": 14048,
											"name": "JUMPDEST"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "JUMPDEST"
										},
										{
											"begin": 14126,
											"end": 14142,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14154,
											"end": 14176,
											"name": "DUP1"
										},
										{
											"begin": 14193,
											"end": 14194,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "MLOAD"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "SWAP1"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP3"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "MSTORE"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "MUL"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP3"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "MSTORE"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "ISZERO"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "JUMPI"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP2"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "SWAP1"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "POP"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "JUMPDEST"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "POP"
										},
										{
											"begin": 14154,
											"end": 14195,
											"name": "SWAP1"
										},
										{
											"begin": 14154,
											"end": 14195,
											"name": "POP"
										},
										{
											"begin": 14216,
											"end": 14223,
											"name": "DUP3"
										},
										{
											"begin": 14205,
											"end": 14210,
											"name": "DUP2"
										},
										{
											"begin": 14211,
											"end": 14212,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "DUP2"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "MLOAD"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "DUP2"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "LT"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "JUMPI"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "INVALID"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "JUMPDEST"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "MUL"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "ADD"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "ADD"
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "DUP2"
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "DUP2"
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "MSTORE"
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "POP"
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "POP"
										},
										{
											"begin": 14241,
											"end": 14246,
											"name": "DUP1"
										},
										{
											"begin": 14234,
											"end": 14246,
											"name": "SWAP2"
										},
										{
											"begin": 14234,
											"end": 14246,
											"name": "POP"
										},
										{
											"begin": 14234,
											"end": 14246,
											"name": "POP"
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "SWAP2"
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "SWAP1"
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "POP"
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "JUMPDEST"
										},
										{
											"begin": 12748,
											"end": 12763,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 12748,
											"end": 12750,
											"name": "DUP5"
										},
										{
											"begin": 12748,
											"end": 12761,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12748,
											"end": 12761,
											"name": "AND"
										},
										{
											"begin": 12748,
											"end": 12761,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 12748,
											"end": 12763,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12748,
											"end": 12763,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 12748,
											"end": 12763,
											"name": "JUMPDEST"
										},
										{
											"begin": 12744,
											"end": 13264,
											"name": "ISZERO"
										},
										{
											"begin": 12744,
											"end": 13264,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 12744,
											"end": 13264,
											"name": "JUMPI"
										},
										{
											"begin": 12800,
											"end": 12802,
											"name": "DUP4"
										},
										{
											"begin": 12783,
											"end": 12821,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12783,
											"end": 12821,
											"name": "AND"
										},
										{
											"begin": 12783,
											"end": 12821,
											"name": "PUSH",
											"value": "F23A6E61"
										},
										{
											"begin": 12822,
											"end": 12830,
											"name": "DUP8"
										},
										{
											"begin": 12832,
											"end": 12836,
											"name": "DUP8"
										},
										{
											"begin": 12838,
											"end": 12840,
											"name": "DUP7"
										},
										{
											"begin": 12842,
											"end": 12848,
											"name": "DUP7"
										},
										{
											"begin": 12850,
											"end": 12854,
											"name": "DUP7"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP7"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SHL"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP7"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP6"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP5"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP3"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP3"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPI"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP3"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "EXP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "NOT"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPDEST"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP7"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP8"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "GAS"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "CALL"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP3"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPI"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP3"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPDEST"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMPI"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20,
											"end": 24,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14,
											"end": 25,
											"name": "MLOAD"
										},
										{
											"begin": 6,
											"end": 25,
											"name": "SWAP1"
										},
										{
											"begin": 6,
											"end": 25,
											"name": "POP"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37,
											"end": 41,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 45,
											"name": "MSTORE"
										},
										{
											"begin": 57,
											"end": 58,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "ISZERO"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "JUMPI"
										},
										{
											"begin": 93,
											"end": 97,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 75,
											"end": 91,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 72,
											"end": 98,
											"name": "LT"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "ISZERO"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "JUMPI"
										},
										{
											"begin": 109,
											"end": 110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "SWAP1"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "POP"
										},
										{
											"begin": 111,
											"end": 116,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 111,
											"end": 116,
											"name": "JUMP"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "JUMPDEST"
										},
										{
											"begin": 145,
											"end": 146,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 147,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 173,
											"end": 181,
											"name": "MLOAD"
										},
										{
											"begin": 168,
											"end": 171,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 164,
											"end": 182,
											"name": "SHR"
										},
										{
											"begin": 206,
											"end": 216,
											"name": "PUSH",
											"value": "8C379A0"
										},
										{
											"begin": 201,
											"end": 204,
											"name": "DUP2"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "EQ"
										},
										{
											"begin": 188,
											"end": 190,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 188,
											"end": 190,
											"name": "JUMPI"
										},
										{
											"begin": 229,
											"end": 230,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 221,
											"end": 230,
											"name": "SWAP2"
										},
										{
											"begin": 221,
											"end": 230,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "JUMP"
										},
										{
											"begin": 188,
											"end": 190,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 188,
											"end": 190,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 291,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 272,
											"end": 288,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 268,
											"end": 292,
											"name": "SUB"
										},
										{
											"begin": 265,
											"end": 266,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 259,
											"end": 263,
											"name": "DUP4"
										},
										{
											"begin": 244,
											"end": 293,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 319,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 313,
											"end": 324,
											"name": "MLOAD"
										},
										{
											"begin": 403,
											"end": 419,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 396,
											"end": 400,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 388,
											"end": 394,
											"name": "DUP3"
										},
										{
											"begin": 384,
											"end": 401,
											"name": "ADD"
										},
										{
											"begin": 381,
											"end": 420,
											"name": "GT"
										},
										{
											"begin": 354,
											"end": 372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP3"
										},
										{
											"begin": 343,
											"end": 373,
											"name": "GT"
										},
										{
											"begin": 333,
											"end": 427,
											"name": "OR"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "ISZERO"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "JUMPI"
										},
										{
											"begin": 444,
											"end": 445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 436,
											"end": 445,
											"name": "SWAP3"
										},
										{
											"begin": 436,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "JUMP"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "JUMPDEST"
										},
										{
											"begin": 491,
											"end": 497,
											"name": "DUP1"
										},
										{
											"begin": 485,
											"end": 489,
											"name": "DUP4"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ADD"
										},
										{
											"begin": 524,
											"end": 527,
											"name": "DUP1"
										},
										{
											"begin": 518,
											"end": 528,
											"name": "MLOAD"
										},
										{
											"begin": 548,
											"end": 566,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 540,
											"end": 546,
											"name": "DUP2"
										},
										{
											"begin": 537,
											"end": 567,
											"name": "GT"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "ISZERO"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "JUMPI"
										},
										{
											"begin": 578,
											"end": 579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "SWAP5"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "JUMP"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "JUMPDEST"
										},
										{
											"begin": 624,
											"end": 630,
											"name": "DUP1"
										},
										{
											"begin": 617,
											"end": 621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 612,
											"end": 615,
											"name": "DUP4"
										},
										{
											"begin": 608,
											"end": 622,
											"name": "ADD"
										},
										{
											"begin": 604,
											"end": 631,
											"name": "ADD"
										},
										{
											"begin": 658,
											"end": 674,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 652,
											"end": 656,
											"name": "DUP7"
										},
										{
											"begin": 648,
											"end": 675,
											"name": "ADD"
										},
										{
											"begin": 643,
											"end": 646,
											"name": "DUP2"
										},
										{
											"begin": 640,
											"end": 676,
											"name": "GT"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "ISZERO"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "JUMPI"
										},
										{
											"begin": 687,
											"end": 688,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 679,
											"end": 688,
											"name": "SWAP6"
										},
										{
											"begin": 679,
											"end": 688,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "JUMP"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "JUMPDEST"
										},
										{
											"begin": 739,
											"end": 743,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 735,
											"end": 744,
											"name": "NOT"
										},
										{
											"begin": 728,
											"end": 732,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 723,
											"end": 726,
											"name": "DUP3"
										},
										{
											"begin": 719,
											"end": 733,
											"name": "ADD"
										},
										{
											"begin": 715,
											"end": 745,
											"name": "AND"
										},
										{
											"begin": 709,
											"end": 713,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 702,
											"end": 746,
											"name": "MSTORE"
										},
										{
											"begin": 760,
											"end": 763,
											"name": "DUP3"
										},
										{
											"begin": 752,
											"end": 763,
											"name": "SWAP6"
										},
										{
											"begin": 752,
											"end": 763,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "JUMPDEST"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "DUP1"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMPI"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "POP"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMP"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMPDEST"
										},
										{
											"begin": 13130,
											"end": 13136,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MLOAD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MSTORE"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "ADD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "ADD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP3"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SUB"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP3"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MSTORE"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP4"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MLOAD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MSTORE"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "ADD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MLOAD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "ADD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP4"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "ADD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "AND"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "ISZERO"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "JUMPI"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP3"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SUB"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MLOAD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP4"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SUB"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "EXP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SUB"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "NOT"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "AND"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MSTORE"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "ADD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "JUMPDEST"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP3"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MLOAD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SUB"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "REVERT"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMPDEST"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "MLOAD"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP2"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "MSTORE"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "ADD"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP1"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP1"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "ADD"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP3"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP2"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "SUB"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP3"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "MSTORE"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP2"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "MSTORE"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "ADD"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP1"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH data",
											"value": "AA752FB1526000E5241602AFFC3D70EF506DA48A27EA57140102B439E655ED"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "SWAP2"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "CODECOPY"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "ADD"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "SWAP2"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "POP"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "POP"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "MLOAD"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP1"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "SWAP2"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "SUB"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "SWAP1"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "REVERT"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMPDEST"
										},
										{
											"begin": 12916,
											"end": 12963,
											"name": "PUSH",
											"value": "F23A6E61"
										},
										{
											"begin": 12916,
											"end": 12963,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12916,
											"end": 12963,
											"name": "SHL"
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "NOT"
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "AND"
										},
										{
											"begin": 12904,
											"end": 12912,
											"name": "DUP2"
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "NOT"
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "AND"
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "EQ"
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "JUMPI"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MLOAD"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP2"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MSTORE"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "ADD"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP1"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP1"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "ADD"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP3"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP2"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SUB"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP3"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MSTORE"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP2"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MSTORE"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "ADD"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP1"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH data",
											"value": "587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SWAP2"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "CODECOPY"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "ADD"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SWAP2"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "POP"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "POP"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MLOAD"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP1"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SWAP2"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SUB"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SWAP1"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "REVERT"
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "JUMPDEST"
										},
										{
											"begin": 12856,
											"end": 13070,
											"name": "POP"
										},
										{
											"begin": 12744,
											"end": 13264,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 12744,
											"end": 13264,
											"name": "JUMPDEST"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "POP"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "POP"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "POP"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "POP"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "POP"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "POP"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMPDEST"
										},
										{
											"begin": 778,
											"end": 782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 981,
											"end": 993,
											"name": "DUP1"
										},
										{
											"begin": 1090,
											"end": 1097,
											"name": "DUP3"
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1070,
											"end": 1098,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1098,
											"name": "POP"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1120,
											"name": "DUP2"
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "GT"
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "SWAP2"
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "POP"
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "POP"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "SWAP2"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "SWAP1"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "POP"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1F4DE6A436172E7F7B1540476031CB037FC18EDE9CC346A56DA1697CBD352AA9": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
										"1FBBB69D10332726591DC7EE4A23A94661EDA2BEC5CE6BF93A68249147DC8D9C": "455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
										"394AC917F53B95EE25DB2A5DA5874C5B1F0AF95A4FDF34992FF8B19C458F239A": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
										"587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
										"6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
										"70A41C66829F5508884CDA9EF3D2F72551B34F23E4035BE97941681123D2D686": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
										"8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
										"AA752FB1526000E5241602AFFC3D70EF506DA48A27EA57140102B439E655ED": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
										"DF9806C6DC743DE602E49918A67B580590D69AB768BDB59F977C0A884A91A7C2": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
										"E155F5D69798C6205436A388A4F3A5FD42F54147B40F4D63A2C8071FF8A9FEE5": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
										"E909E0C9A8F96B4F9AF03B716811ECE20BEB070BE416893ED1D50619B5930807": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368"
									}
								},
								"3FE3D9245796AE3F66210B6549BB463A5ED2DD5DEB86674E732053186F957F6F": "697066733a2f2f516d5a394a513477513739376b39367350676333314e46563851664a71413277577068743774687a5569335035442f7b69647d2e6a736f6e",
								"587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
								"AA752FB1526000E5241602AFFC3D70EF506DA48A27EA57140102B439E655ED": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
								"EBF031A1B7EE1D0B3A7752B450A3268E8B6C334561B48C1C0BA0F5BAC05749F2": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373"
							}
						},
						"methodIdentifiers": {
							"GOLD()": "3e4bee38",
							"SHIELD()": "5b2725ed",
							"SILVER()": "e3e55f08",
							"SWORD()": "13dc989f",
							"THORS_HAMMER()": "d562e204",
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHIELD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SILVER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWORD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"THORS_HAMMER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.     * Requirements:     * - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}.     * Requirements:     * - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}.     * This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC1155.sol\":\"GameItems\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1155.sol\":{\"keccak256\":\"0xa1f33febe666c1f7bc893d693cf1ce55cbe7b4ecbfcb21a32375b837e1902ad4\",\"urls\":[\"bzz-raw://d845429fa4d02995d33cde9f98cc4b972a80b73a3610c18f30eb1f4e48b3891a\",\"dweb:/ipfs/QmWBzTkGFzcsP2KA2n8m71HgN9Czs7HjF1TzFhxs8GJkGw\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74\",\"urls\":[\"bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a\",\"dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xcb4d489d714897ac44bfd868ac61850cad221177142e2ff7b77474dbbcd8632d\",\"urls\":[\"bzz-raw://df97fe73917806c90620792dadea71599267ea958e398f746effff25b80cdbfd\",\"dweb:/ipfs/Qmbk2RXS1kctvfQ9N9bHuMU7vLGEjzvUvuDddQmxzhBySr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\",\"urls\":[\"bzz-raw://ea5c8207b135b93afb8cce651a26b1606d0c6e967edc06091e261de7475dace5\",\"dweb:/ipfs/QmXWQHU45hJWmuCiWKjR3tsVh11LwkNEW6fs2Yhvd41Q7a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xcf122601a1c4816aad0efe37e4c8a9eb744fedd150076363bf54c6641f1332a1\",\"urls\":[\"bzz-raw://cafba550cfbd0fb873282581a4a1186eab3bff1cfd1dcfbf577d4a5b418528ab\",\"dweb:/ipfs/QmdQSLFUmkaf96nzjvJ6eqBcWoJrEd1z36Mh8PPctrbgDb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x0bc1d0b8fa3b262a6fb98b88dceab8b3348903b95dcc5909b9074fb19a3d2da5\",\"urls\":[\"bzz-raw://a1a2d7b10e484742885d2042f66e8150bfc143a08756a269fb207c4c553b55aa\",\"dweb:/ipfs/Qmbhi8dodhRZS6mqL2T8WfMzmEwPzgSwpuGVHtKF5F6QDp\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 110,
								"contract": "ERC1155.sol:GameItems",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							},
							{
								"astId": 377,
								"contract": "ERC1155.sol:GameItems",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 383,
								"contract": "ERC1155.sol:GameItems",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 385,
								"contract": "ERC1155.sol:GameItems",
								"label": "_uri",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. * Contracts may inherit from this and call {_registerInterface} to declare their support of an interface.",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. * Contracts may inherit from this and call {_registerInterface} to declare their support of an interface.\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74\",\"urls\":[\"bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a\",\"dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 110,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol:ERC165",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. * Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). * For an implementation, see {ERC165}.",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created.     * This function call must use less than 30 000 gas."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. * Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). * For an implementation, see {ERC165}.\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created.     * This function call must use less than 30 000 gas.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":622:5200  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":622:5200  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122072cad9cfe0026c6654958f7be8e16cc00990f886c23f7938325d72f30d71f13364736f6c63430006020033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122072cad9cfe0026c6654958f7be8e16cc00990f886c23f7938325d72f30d71f13364736f6c63430006020033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xCAD9CFE0026C6654958F7BE8E16CC00990F886 0xC2 EXTCODEHASH PUSH26 0x38325D72F30D71F13364736F6C63430006020033000000000000 ",
							"sourceMap": "622:4578:4:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122072cad9cfe0026c6654958f7be8e16cc00990f886c23f7938325d72f30d71f13364736f6c63430006020033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xCAD9CFE0026C6654958F7BE8E16CC00990F886 0xC2 EXTCODEHASH PUSH26 0x38325D72F30D71F13364736F6C63430006020033000000000000 ",
							"sourceMap": "622:4578:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122072cad9cfe0026c6654958f7be8e16cc00990f886c23f7938325d72f30d71f13364736f6c63430006020033",
									".code": [
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "ADDRESS"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "EQ"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "MSTORE"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "DUP1"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 * _Available since v3.1._",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}.     * Requirements:     * - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}.     * Requirements:     * - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}.     * This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].     * Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":512:14255  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":1966:2318  constructor (string memory uri) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":1966:2318  constructor (string memory uri) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":1966:2318  constructor (string memory uri) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":1966:2318  constructor (string memory uri) public {... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_6:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_6)\ntag_8:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":1966:2318  constructor (string memory uri) public {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":751:791  _registerInterface(_INTERFACE_ID_ERC165) */\n  tag_13\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":418:428  0x01ffc9a7 */\n  0x01ffc9a7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":770:790  _INTERFACE_ID_ERC165 */\n  0xe0\n  shl\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":751:769  _registerInterface */\n  shl(0x20, tag_14)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":751:791  _registerInterface(_INTERFACE_ID_ERC165) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2015:2027  _setURI(uri) */\n  tag_16\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2023:2026  uri */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2015:2022  _setURI */\n  shl(0x20, tag_17)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2015:2027  _setURI(uri) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2116:2157  _registerInterface(_INTERFACE_ID_ERC1155) */\n  tag_18\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":1754:1764  0xd9b67a26 */\n  0xd9b67a26\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2135:2156  _INTERFACE_ID_ERC1155 */\n  0xe0\n  shl\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2116:2134  _registerInterface */\n  shl(0x20, tag_14)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2116:2157  _registerInterface(_INTERFACE_ID_ERC1155) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2257:2311  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  tag_19\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":1906:1916  0x0e89341c */\n  0x0e89341c\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2276:2310  _INTERFACE_ID_ERC1155_METADATA_URI */\n  0xe0\n  shl\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2257:2275  _registerInterface */\n  shl(0x20, tag_14)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2257:2311  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":1966:2318  constructor (string memory uri) public {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":512:14255  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_20)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1482:1680  function _registerInterface(bytes4 interfaceId) internal virtual {... */\ntag_14:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1580:1590  0xffffffff */\n  0xffffffff\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1565:1590  interfaceId != 0xffffffff */\n  0xe0\n  shl\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1565:1576  interfaceId */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1565:1590  interfaceId != 0xffffffff */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  eq\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1557:1623  require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\") */\n  tag_22\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1c\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x4552433136353a20696e76616c696420696e7465726661636520696400000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_22:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1669:1673  true */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1633:1653  _supportedInterfaces */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1633:1666  _supportedInterfaces[interfaceId] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1654:1665  interfaceId */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1633:1666  _supportedInterfaces[interfaceId] */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1633:1673  _supportedInterfaces[interfaceId] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1482:1680  function _registerInterface(bytes4 interfaceId) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":7590:7676  function _setURI(string memory newuri) internal virtual {... */\ntag_17:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":7663:7669  newuri */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":7656:7660  _uri */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":7656:7669  _uri = newuri */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_24\n  swap3\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":7590:7676  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":512:14255  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_25:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_27\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_26)\ntag_27:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  dup3\n  add\ntag_28:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_29\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_28)\ntag_29:\ntag_26:\n  pop\n  swap1\n  pop\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_31:\n  tag_32\n  swap2\n  swap1\ntag_33:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_34\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_33)\ntag_34:\n  pop\n  swap1\n  jump\ntag_32:\n  swap1\n  jump\t// out\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":512:14255  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":512:14255  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2956:3176  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2956:3176  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":948:1088  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":948:1088  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2717:2814  function uri(uint256) external view override returns (string memory) {... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_19:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2717:2814  function uri(uint256) external view override returns (string memory) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_21:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_21)\n    tag_23:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2717:2814  function uri(uint256) external view override returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_24\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_24:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_26:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_29:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_35:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_25:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_43:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_46:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_46)\n    tag_48:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4016:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4016:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4389:4547  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_53:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4389:4547  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_56:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_60\n      jump\t// in\n    tag_55:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2956:3176  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n    tag_14:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3034:3041  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3080:3081  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3061:3082  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3061:3068  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3061:3082  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3053:3130  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3147:3156  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3147:3160  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3157:3159  id */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3147:3160  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3147:3169  _balances[id][account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3161:3168  account */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3147:3169  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3140:3169  return _balances[id][account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2956:3176  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":948:1088  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n    tag_17:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1025:1029  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1048:1068  _supportedInterfaces */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1048:1081  _supportedInterfaces[interfaceId] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1069:1080  interfaceId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1048:1081  _supportedInterfaces[interfaceId] */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":1041:1081  return _supportedInterfaces[interfaceId] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":948:1088  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2717:2814  function uri(uint256) external view override returns (string memory) {... */\n    tag_20:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2771:2784  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2803:2807  _uri */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2796:2807  return _uri */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_65\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_66\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_65)\n    tag_66:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_67:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_67\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":2717:2814  function uri(uint256) external view override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5837:5844  amounts */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5837:5851  amounts.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5823:5826  ids */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5823:5833  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5823:5851  ids.length == amounts.length */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5815:5896  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5928:5929  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5914:5930  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5914:5916  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5914:5930  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5906:5972  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6011:6023  _msgSender() */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6011:6021  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6011:6023  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6003:6023  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6003:6007  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6003:6023  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6003:6063  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_73\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6027:6063  isApprovedForAll(from, _msgSender()) */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6044:6048  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6050:6062  _msgSender() */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6050:6060  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6050:6062  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6027:6043  isApprovedForAll */\n      tag_54\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6027:6063  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_74:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6003:6063  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5982:6139  require(... */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x32\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686\n      0x32\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6150:6166  address operator */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6169:6181  _msgSender() */\n      tag_77\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6169:6179  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6169:6181  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6150:6181  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6192:6252  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6213:6221  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6223:6227  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6229:6231  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6233:6236  ids */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6238:6245  amounts */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6247:6251  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6192:6212  _beforeTokenTransfer */\n      tag_79\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6192:6252  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6268:6277  uint256 i */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6280:6281  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6268:6281  uint256 i = 0 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6263:6612  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_80:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6287:6290  ids */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6287:6297  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6283:6284  i */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6283:6297  i < ids.length */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6263:6612  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_81\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6318:6328  uint256 id */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6331:6334  ids */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6335:6336  i */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6331:6337  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_83\n      jumpi\n      invalid\n    tag_83:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6318:6337  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6351:6365  uint256 amount */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6368:6375  amounts */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6376:6377  i */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6368:6378  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_84\n      jumpi\n      invalid\n    tag_84:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6351:6378  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6538  _balances[id][from].sub(... */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6456:6462  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6538  _balances[id][from].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6424  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6428  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6425:6427  id */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6428  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6434  _balances[id][from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6429:6433  from */\n      dup14\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6434  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6438  _balances[id][from].sub */\n      tag_86\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6415:6538  _balances[id][from].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6393:6402  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6393:6406  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6403:6405  id */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6393:6406  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6393:6412  _balances[id][from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6407:6411  from */\n      dup12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6393:6412  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6393:6538  _balances[id][from] = _balances[id][from].sub(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6572:6601  _balances[id][to].add(amount) */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6594:6600  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6572:6581  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6572:6585  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6582:6584  id */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6572:6585  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6572:6589  _balances[id][to] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6586:6588  to */\n      dup12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6572:6589  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6572:6593  _balances[id][to].add */\n      tag_88\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6572:6601  _balances[id][to].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6552:6561  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6552:6565  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6562:6564  id */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6552:6565  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6552:6569  _balances[id][to] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6566:6568  to */\n      dup11\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6552:6569  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6552:6601  _balances[id][to] = _balances[id][to].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6263:6612  for (uint256 i = 0; i < ids.length; ++i) {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6299:6302  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6263:6612  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_80)\n    tag_81:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6657:6659  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6651:6655  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6641:6649  operator */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6661:6664  ids */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6666:6673  amounts */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      sub\n      dup4\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_89:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_91\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_89)\n    tag_91:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup4\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_92:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_92)\n    tag_94:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6685:6760  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6721:6729  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6731:6735  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6737:6739  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6741:6744  ids */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6746:6753  amounts */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6755:6759  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6685:6720  _doSafeBatchTransferAcceptanceCheck */\n      tag_96\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":6685:6760  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_95:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3490:3506  uint256[] memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3549:3552  ids */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3549:3559  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3530:3538  accounts */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3530:3545  accounts.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3530:3559  accounts.length == ids.length */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3522:3605  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3616:3646  uint256[] memory batchBalances */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3663:3671  accounts */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3663:3678  accounts.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3649:3679  new uint256[](accounts.length) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_99\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3649:3679  new uint256[](accounts.length) */\n      swap1\n      pop\n    tag_99:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3616:3679  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3695:3704  uint256 i */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3707:3708  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3695:3708  uint256 i = 0 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3690:3911  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3714:3722  accounts */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3714:3729  accounts.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3710:3711  i */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3710:3729  i < accounts.length */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3690:3911  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_101\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3781:3782  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3758:3783  accounts[i] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3758:3766  accounts */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3767:3768  i */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3758:3769  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_103\n      jumpi\n      invalid\n    tag_103:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3758:3783  accounts[i] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3750:3837  require(accounts[i] != address(0), \"ERC1155: batch balance query for the zero address\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x31\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c\n      0x31\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3870:3879  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3870:3887  _balances[ids[i]] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3880:3883  ids */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3884:3885  i */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3880:3886  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_105\n      jumpi\n      invalid\n    tag_105:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3870:3887  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3870:3900  _balances[ids[i]][accounts[i]] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3888:3896  accounts */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3897:3898  i */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3888:3899  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3870:3900  _balances[ids[i]][accounts[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3851:3864  batchBalances */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3865:3866  i */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3851:3867  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_107\n      jumpi\n      invalid\n    tag_107:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3851:3900  batchBalances[i] = _balances[ids[i]][accounts[i]] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3731:3734  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3690:3911  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_100)\n    tag_101:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3928:3941  batchBalances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3921:3941  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4016:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4134:4142  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4118:4142  _msgSender() != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4118:4130  _msgSender() */\n      tag_109\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4118:4128  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4118:4130  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4118:4142  _msgSender() != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4110:4188  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4244:4252  approved */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4199:4217  _operatorApprovals */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4199:4231  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4218:4230  _msgSender() */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4218:4228  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4218:4230  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4199:4231  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4199:4241  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4232:4240  operator */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4199:4241  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4199:4252  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4296:4304  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4267:4315  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4282:4294  _msgSender() */\n      tag_112\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4282:4292  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4282:4294  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4267:4315  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4306:4314  approved */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4267:4315  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4016:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4389:4547  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4480:4484  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4503:4521  _operatorApprovals */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4503:4530  _operatorApprovals[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4522:4529  account */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4503:4530  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4503:4540  _operatorApprovals[account][operator] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4531:4539  operator */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4503:4540  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4496:4540  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4389:4547  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4843:4844  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4829:4845  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4829:4831  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4829:4845  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4821:4887  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4926:4938  _msgSender() */\n      tag_116\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4926:4936  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4926:4938  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4918:4938  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4918:4922  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4918:4938  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4918:4978  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_117\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4942:4978  isApprovedForAll(from, _msgSender()) */\n      tag_118\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4959:4963  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4965:4977  _msgSender() */\n      tag_119\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4965:4975  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4965:4977  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4942:4958  isApprovedForAll */\n      tag_54\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4942:4978  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4918:4978  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4897:5045  require(... */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5056:5072  address operator */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5075:5087  _msgSender() */\n      tag_121\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5075:5085  _msgSender */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5075:5087  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5056:5087  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5098:5194  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5119:5127  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5129:5133  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5135:5137  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5139:5160  _asSingletonArray(id) */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5157:5159  id */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5139:5156  _asSingletonArray */\n      tag_124\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5139:5160  _asSingletonArray(id) */\n      jump\t// in\n    tag_123:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5162:5187  _asSingletonArray(amount) */\n      tag_125\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5180:5186  amount */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5162:5179  _asSingletonArray */\n      tag_124\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5162:5187  _asSingletonArray(amount) */\n      jump\t// in\n    tag_125:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5189:5193  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5098:5118  _beforeTokenTransfer */\n      tag_79\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5098:5194  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      jump\t// in\n    tag_122:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5304  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_126\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5251:5257  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5304  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5236  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5240  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5237:5239  id */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5240  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5246  _balances[id][from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5241:5245  from */\n      dup11\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5246  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5250  _balances[id][from].sub */\n      tag_86\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5227:5304  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5205:5214  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5205:5218  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5215:5217  id */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5205:5218  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5205:5224  _balances[id][from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5219:5223  from */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5205:5224  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5205:5304  _balances[id][from] = _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5334:5363  _balances[id][to].add(amount) */\n      tag_127\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5356:5362  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5334:5343  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5334:5347  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5344:5346  id */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5334:5347  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5334:5351  _balances[id][to] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5348:5350  to */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5334:5351  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5334:5355  _balances[id][to].add */\n      tag_88\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5334:5363  _balances[id][to].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5314:5323  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5314:5327  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5324:5326  id */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5314:5327  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5314:5331  _balances[id][to] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5328:5330  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5314:5331  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5314:5363  _balances[id][to] = _balances[id][to].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5410:5412  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5379:5425  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5404:5408  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5379:5425  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5394:5402  operator */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5379:5425  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5414:5416  id */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5418:5424  amount */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5379:5425  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5436:5504  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_128\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5467:5475  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5477:5481  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5483:5485  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5487:5489  id */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5491:5497  amount */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5499:5503  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5436:5466  _doSafeTransferAcceptanceCheck */\n      tag_129\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":5436:5504  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":643:658  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":677:687  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":670:687  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12296:12523  function _beforeTokenTransfer(... */\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1832:1839  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1864:1865  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1859:1860  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1859:1865  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1867:1879  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1851:1880  require(b <= a, errorMessage) */\n      swap1\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_134:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_136\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_134)\n    tag_136:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1851:1880  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_137\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_137:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1890:1899  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1906:1907  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1902:1903  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1902:1907  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1890:1907  uint256 c = a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1925:1926  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1918:1926  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":874:1050  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_88:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":932:939  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":951:960  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":967:968  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":963:964  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":963:968  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":951:968  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":991:992  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":986:987  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":986:992  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":978:1024  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1042:1043  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":1035:1043  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":874:1050  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13276:14054  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_96:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13520:13535  to.isContract() */\n      tag_141\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13520:13522  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13520:13533  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_142\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13520:13535  to.isContract() */\n      jump\t// in\n    tag_141:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13516:14048  if (to.isContract()) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13572:13574  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13555:13598  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13599:13607  operator */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13609:13613  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13615:13618  ids */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13620:13627  amounts */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13629:13633  data */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13555:13634  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup5\n      dup2\n      sub\n      dup5\n      mstore\n      dup8\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_144:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_146\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_144)\n    tag_146:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13555:13634  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup2\n      sub\n      dup4\n      mstore\n      dup7\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_147:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_149\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_147)\n    tag_149:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13555:13634  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup2\n      sub\n      dup3\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_150:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_152\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_150)\n    tag_152:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13555:13634  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_153\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_153:\n      pop\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_154\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_154:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13555:13634  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_155\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_156\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_156:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13555:13634  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      0x01\n    tag_155:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13551:14038  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n      tag_157\n      jumpi\n      0x00\n        /* \"--CODEGEN--\":20:24   */\n      0x40\n        /* \"--CODEGEN--\":14:25   */\n      mload\n        /* \"--CODEGEN--\":6:25   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":43:44   */\n      0x00\n        /* \"--CODEGEN--\":37:41   */\n      dup2\n        /* \"--CODEGEN--\":30:45   */\n      mstore\n        /* \"--CODEGEN--\":57:58   */\n      0x01\n        /* \"--CODEGEN--\":50:780   */\n      iszero\n      tag_162\n      jumpi\n        /* \"--CODEGEN--\":93:97   */\n      0x44\n        /* \"--CODEGEN--\":75:91   */\n      returndatasize\n        /* \"--CODEGEN--\":72:98   */\n      lt\n        /* \"--CODEGEN--\":69:71   */\n      iszero\n      tag_163\n      jumpi\n        /* \"--CODEGEN--\":109:110   */\n      0x00\n        /* \"--CODEGEN--\":101:110   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":111:116   */\n      jump(tag_162)\n        /* \"--CODEGEN--\":69:71   */\n    tag_163:\n        /* \"--CODEGEN--\":145:146   */\n      0x04\n        /* \"--CODEGEN--\":142:143   */\n      0x00\n        /* \"--CODEGEN--\":139:140   */\n      dup1\n        /* \"--CODEGEN--\":124:147   */\n      returndatacopy\n        /* \"--CODEGEN--\":179:180   */\n      0x00\n        /* \"--CODEGEN--\":173:181   */\n      mload\n        /* \"--CODEGEN--\":168:171   */\n      0xe0\n        /* \"--CODEGEN--\":164:182   */\n      shr\n        /* \"--CODEGEN--\":206:216   */\n      0x08c379a0\n        /* \"--CODEGEN--\":201:204   */\n      dup2\n        /* \"--CODEGEN--\":198:217   */\n      eq\n        /* \"--CODEGEN--\":188:190   */\n      tag_164\n      jumpi\n        /* \"--CODEGEN--\":229:230   */\n      0x00\n        /* \"--CODEGEN--\":221:230   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":231:236   */\n      pop\n      jump(tag_162)\n        /* \"--CODEGEN--\":188:190   */\n    tag_164:\n        /* \"--CODEGEN--\":290:291   */\n      0x04\n        /* \"--CODEGEN--\":272:288   */\n      returndatasize\n        /* \"--CODEGEN--\":268:292   */\n      sub\n        /* \"--CODEGEN--\":265:266   */\n      0x04\n        /* \"--CODEGEN--\":259:263   */\n      dup4\n        /* \"--CODEGEN--\":244:293   */\n      returndatacopy\n        /* \"--CODEGEN--\":319:323   */\n      dup2\n        /* \"--CODEGEN--\":313:324   */\n      mload\n        /* \"--CODEGEN--\":403:419   */\n      returndatasize\n        /* \"--CODEGEN--\":396:400   */\n      0x24\n        /* \"--CODEGEN--\":388:394   */\n      dup3\n        /* \"--CODEGEN--\":384:401   */\n      add\n        /* \"--CODEGEN--\":381:420   */\n      gt\n        /* \"--CODEGEN--\":354:372   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":346:352   */\n      dup3\n        /* \"--CODEGEN--\":343:373   */\n      gt\n        /* \"--CODEGEN--\":333:427   */\n      or\n        /* \"--CODEGEN--\":330:332   */\n      iszero\n      tag_165\n      jumpi\n        /* \"--CODEGEN--\":444:445   */\n      0x00\n        /* \"--CODEGEN--\":436:445   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":452:457   */\n      pop\n      pop\n      jump(tag_162)\n        /* \"--CODEGEN--\":330:332   */\n    tag_165:\n        /* \"--CODEGEN--\":491:497   */\n      dup1\n        /* \"--CODEGEN--\":485:489   */\n      dup4\n        /* \"--CODEGEN--\":481:498   */\n      add\n        /* \"--CODEGEN--\":524:527   */\n      dup1\n        /* \"--CODEGEN--\":518:528   */\n      mload\n        /* \"--CODEGEN--\":548:566   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":540:546   */\n      dup2\n        /* \"--CODEGEN--\":537:567   */\n      gt\n        /* \"--CODEGEN--\":534:536   */\n      iszero\n      tag_166\n      jumpi\n        /* \"--CODEGEN--\":578:579   */\n      0x00\n        /* \"--CODEGEN--\":570:579   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":580:585   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_162)\n        /* \"--CODEGEN--\":534:536   */\n    tag_166:\n        /* \"--CODEGEN--\":624:630   */\n      dup1\n        /* \"--CODEGEN--\":617:621   */\n      0x20\n        /* \"--CODEGEN--\":612:615   */\n      dup4\n        /* \"--CODEGEN--\":608:622   */\n      add\n        /* \"--CODEGEN--\":604:631   */\n      add\n        /* \"--CODEGEN--\":658:674   */\n      returndatasize\n        /* \"--CODEGEN--\":652:656   */\n      dup7\n        /* \"--CODEGEN--\":648:675   */\n      add\n        /* \"--CODEGEN--\":643:646   */\n      dup2\n        /* \"--CODEGEN--\":640:676   */\n      gt\n        /* \"--CODEGEN--\":637:639   */\n      iszero\n      tag_167\n      jumpi\n        /* \"--CODEGEN--\":687:688   */\n      0x00\n        /* \"--CODEGEN--\":679:688   */\n      swap6\n      pop\n        /* \"--CODEGEN--\":689:694   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_162)\n        /* \"--CODEGEN--\":637:639   */\n    tag_167:\n        /* \"--CODEGEN--\":739:743   */\n      0x1f\n        /* \"--CODEGEN--\":735:744   */\n      not\n        /* \"--CODEGEN--\":728:732   */\n      0x1f\n        /* \"--CODEGEN--\":723:726   */\n      dup3\n        /* \"--CODEGEN--\":719:733   */\n      add\n        /* \"--CODEGEN--\":715:745   */\n      and\n        /* \"--CODEGEN--\":709:713   */\n      0x40\n        /* \"--CODEGEN--\":702:746   */\n      mstore\n        /* \"--CODEGEN--\":760:763   */\n      dup3\n        /* \"--CODEGEN--\":752:763   */\n      swap6\n      pop\n        /* \"--CODEGEN--\":769:774   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":50:780   */\n    tag_162:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13551:14038  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n      dup1\n      tag_168\n      jumpi\n      pop\n      jump(tag_159)\n    tag_168:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13914:13920  reason */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13907:13921  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_169:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_171\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_169)\n    tag_171:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13907:13921  revert(reason) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_172:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13551:14038  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_159:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13961:14023  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed\n      0x34\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13551:14038  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_157:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13695:13747  IERC1155Receiver(to).onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13683:13747  response != IERC1155Receiver(to).onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13683:13691  response */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13683:13747  response != IERC1155Receiver(to).onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13679:13840  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n      tag_174\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13771:13821  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13679:13840  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n    tag_174:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13635:13854  returns (bytes4 response) {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13516:14048  if (to.isContract()) {... */\n    tag_143:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13276:14054  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14060:14253  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_124:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14126:14142  uint256[] memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14154:14176  uint256[] memory array */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14193:14194  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14179:14195  new uint256[](1) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_176\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14179:14195  new uint256[](1) */\n      swap1\n      pop\n    tag_176:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14154:14195  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14216:14223  element */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14205:14210  array */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14211:14212  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14205:14213  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_177\n      jumpi\n      invalid\n    tag_177:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14205:14223  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14241:14246  array */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14234:14246  return array */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":14060:14253  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12529:13270  function _doSafeTransferAcceptanceCheck(... */\n    tag_129:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12748:12763  to.isContract() */\n      tag_179\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12748:12750  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12748:12761  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_142\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12748:12763  to.isContract() */\n      jump\t// in\n    tag_179:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12744:13264  if (to.isContract()) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12800:12802  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12783:12821  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12822:12830  operator */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12832:12836  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12838:12840  id */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12842:12848  amount */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12850:12854  data */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12783:12855  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_181:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_183\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_181)\n    tag_183:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12783:12855  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_184\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_184:\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_185\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_185:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12783:12855  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_186\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_187\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_187:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12783:12855  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      0x01\n    tag_186:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12779:13254  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_188\n      jumpi\n      0x00\n        /* \"--CODEGEN--\":20:24   */\n      0x40\n        /* \"--CODEGEN--\":14:25   */\n      mload\n        /* \"--CODEGEN--\":6:25   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":43:44   */\n      0x00\n        /* \"--CODEGEN--\":37:41   */\n      dup2\n        /* \"--CODEGEN--\":30:45   */\n      mstore\n        /* \"--CODEGEN--\":57:58   */\n      0x01\n        /* \"--CODEGEN--\":50:780   */\n      iszero\n      tag_193\n      jumpi\n        /* \"--CODEGEN--\":93:97   */\n      0x44\n        /* \"--CODEGEN--\":75:91   */\n      returndatasize\n        /* \"--CODEGEN--\":72:98   */\n      lt\n        /* \"--CODEGEN--\":69:71   */\n      iszero\n      tag_194\n      jumpi\n        /* \"--CODEGEN--\":109:110   */\n      0x00\n        /* \"--CODEGEN--\":101:110   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":111:116   */\n      jump(tag_193)\n        /* \"--CODEGEN--\":69:71   */\n    tag_194:\n        /* \"--CODEGEN--\":145:146   */\n      0x04\n        /* \"--CODEGEN--\":142:143   */\n      0x00\n        /* \"--CODEGEN--\":139:140   */\n      dup1\n        /* \"--CODEGEN--\":124:147   */\n      returndatacopy\n        /* \"--CODEGEN--\":179:180   */\n      0x00\n        /* \"--CODEGEN--\":173:181   */\n      mload\n        /* \"--CODEGEN--\":168:171   */\n      0xe0\n        /* \"--CODEGEN--\":164:182   */\n      shr\n        /* \"--CODEGEN--\":206:216   */\n      0x08c379a0\n        /* \"--CODEGEN--\":201:204   */\n      dup2\n        /* \"--CODEGEN--\":198:217   */\n      eq\n        /* \"--CODEGEN--\":188:190   */\n      tag_195\n      jumpi\n        /* \"--CODEGEN--\":229:230   */\n      0x00\n        /* \"--CODEGEN--\":221:230   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":231:236   */\n      pop\n      jump(tag_193)\n        /* \"--CODEGEN--\":188:190   */\n    tag_195:\n        /* \"--CODEGEN--\":290:291   */\n      0x04\n        /* \"--CODEGEN--\":272:288   */\n      returndatasize\n        /* \"--CODEGEN--\":268:292   */\n      sub\n        /* \"--CODEGEN--\":265:266   */\n      0x04\n        /* \"--CODEGEN--\":259:263   */\n      dup4\n        /* \"--CODEGEN--\":244:293   */\n      returndatacopy\n        /* \"--CODEGEN--\":319:323   */\n      dup2\n        /* \"--CODEGEN--\":313:324   */\n      mload\n        /* \"--CODEGEN--\":403:419   */\n      returndatasize\n        /* \"--CODEGEN--\":396:400   */\n      0x24\n        /* \"--CODEGEN--\":388:394   */\n      dup3\n        /* \"--CODEGEN--\":384:401   */\n      add\n        /* \"--CODEGEN--\":381:420   */\n      gt\n        /* \"--CODEGEN--\":354:372   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":346:352   */\n      dup3\n        /* \"--CODEGEN--\":343:373   */\n      gt\n        /* \"--CODEGEN--\":333:427   */\n      or\n        /* \"--CODEGEN--\":330:332   */\n      iszero\n      tag_196\n      jumpi\n        /* \"--CODEGEN--\":444:445   */\n      0x00\n        /* \"--CODEGEN--\":436:445   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":452:457   */\n      pop\n      pop\n      jump(tag_193)\n        /* \"--CODEGEN--\":330:332   */\n    tag_196:\n        /* \"--CODEGEN--\":491:497   */\n      dup1\n        /* \"--CODEGEN--\":485:489   */\n      dup4\n        /* \"--CODEGEN--\":481:498   */\n      add\n        /* \"--CODEGEN--\":524:527   */\n      dup1\n        /* \"--CODEGEN--\":518:528   */\n      mload\n        /* \"--CODEGEN--\":548:566   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":540:546   */\n      dup2\n        /* \"--CODEGEN--\":537:567   */\n      gt\n        /* \"--CODEGEN--\":534:536   */\n      iszero\n      tag_197\n      jumpi\n        /* \"--CODEGEN--\":578:579   */\n      0x00\n        /* \"--CODEGEN--\":570:579   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":580:585   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_193)\n        /* \"--CODEGEN--\":534:536   */\n    tag_197:\n        /* \"--CODEGEN--\":624:630   */\n      dup1\n        /* \"--CODEGEN--\":617:621   */\n      0x20\n        /* \"--CODEGEN--\":612:615   */\n      dup4\n        /* \"--CODEGEN--\":608:622   */\n      add\n        /* \"--CODEGEN--\":604:631   */\n      add\n        /* \"--CODEGEN--\":658:674   */\n      returndatasize\n        /* \"--CODEGEN--\":652:656   */\n      dup7\n        /* \"--CODEGEN--\":648:675   */\n      add\n        /* \"--CODEGEN--\":643:646   */\n      dup2\n        /* \"--CODEGEN--\":640:676   */\n      gt\n        /* \"--CODEGEN--\":637:639   */\n      iszero\n      tag_198\n      jumpi\n        /* \"--CODEGEN--\":687:688   */\n      0x00\n        /* \"--CODEGEN--\":679:688   */\n      swap6\n      pop\n        /* \"--CODEGEN--\":689:694   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_193)\n        /* \"--CODEGEN--\":637:639   */\n    tag_198:\n        /* \"--CODEGEN--\":739:743   */\n      0x1f\n        /* \"--CODEGEN--\":735:744   */\n      not\n        /* \"--CODEGEN--\":728:732   */\n      0x1f\n        /* \"--CODEGEN--\":723:726   */\n      dup3\n        /* \"--CODEGEN--\":719:733   */\n      add\n        /* \"--CODEGEN--\":715:745   */\n      and\n        /* \"--CODEGEN--\":709:713   */\n      0x40\n        /* \"--CODEGEN--\":702:746   */\n      mstore\n        /* \"--CODEGEN--\":760:763   */\n      dup3\n        /* \"--CODEGEN--\":752:763   */\n      swap6\n      pop\n        /* \"--CODEGEN--\":769:774   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":50:780   */\n    tag_193:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12779:13254  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      dup1\n      tag_199\n      jumpi\n      pop\n      jump(tag_190)\n    tag_199:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13130:13136  reason */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13123:13137  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_200:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_202\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_200)\n    tag_202:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13123:13137  revert(reason) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_203\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_203:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12779:13254  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_190:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":13177:13239  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed\n      0x34\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12779:13254  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_188:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12916:12963  IERC1155Receiver(to).onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12904:12963  response != IERC1155Receiver(to).onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12904:12912  response */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12904:12963  response != IERC1155Receiver(to).onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12900:13056  if (response != IERC1155Receiver(to).onERC1155Received.selector) {... */\n      tag_205\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12987:13037  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12900:13056  if (response != IERC1155Receiver(to).onERC1155Received.selector) {... */\n    tag_205:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12856:13070  returns (bytes4 response) {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12744:13264  if (to.isContract()) {... */\n    tag_180:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":12529:13270  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n    tag_142:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":778:782  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":981:993  uint256 size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1090:1097  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1078:1098  extcodesize(account) */\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1070:1098  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1123:1124  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1116:1120  size */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1116:1124  size > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":1109:1124  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed 455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572\n    data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503 455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73\n    data_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9 455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373\n    data_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c 455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373\n    data_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a 455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564\n    data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d 455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686 455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564\n    data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf 455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572\n    data_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2 455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66\n    data_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5 455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368\n    data_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807 455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368\n\n    auxdata: 0xa2646970667358221220f017a6503d01340f96f8b0d977f8d2db373022da6bae655f5b9086368fe6b0f464736f6c63430006020033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200251438038062002514833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052505050620001106301ffc9a760e01b6200015860201b60201c565b62000121816200026160201b60201c565b6200013963d9b67a2660e01b6200015860201b60201c565b62000151630e89341c60e01b6200015860201b60201c565b506200032c565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b8060039080519060200190620002799291906200027d565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002c057805160ff1916838001178555620002f1565b82800160010185558215620002f1579182015b82811115620002f0578251825591602001919060010190620002d3565b5b50905062000300919062000304565b5090565b6200032991905b80821115620003255760008160009055506001016200030b565b5090565b90565b6121d8806200033c6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461041d578063a22cb465146105be578063e985e9c51461060e578063f242432a1461068a57610087565b8062fdd58e1461008c57806301ffc9a7146100ee5780630e89341c146101535780632eb2c2d6146101fa575b600080fd5b6100d8600480360360408110156100a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610799565b6040518082815260200191505060405180910390f35b6101396004803603602081101561010457600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610879565b604051808215151515815260200191505060405180910390f35b61017f6004803603602081101561016957600080fd5b81019080803590602001909291905050506108e0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101bf5780820151818401526020810190506101a4565b50505050905090810190601f1680156101ec5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61041b600480360360a081101561021057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561026d57600080fd5b82018360208201111561027f57600080fd5b803590602001918460208302840111640100000000831117156102a157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561030157600080fd5b82018360208201111561031357600080fd5b8035906020019184602083028401116401000000008311171561033557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561039557600080fd5b8201836020820111156103a757600080fd5b803590602001918460018302840111640100000000831117156103c957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610984565b005b6105676004803603604081101561043357600080fd5b810190808035906020019064010000000081111561045057600080fd5b82018360208201111561046257600080fd5b8035906020019184602083028401116401000000008311171561048457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156104e457600080fd5b8201836020820111156104f657600080fd5b8035906020019184602083028401116401000000008311171561051857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610e12565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156105aa57808201518184015260208101905061058f565b505050509050019250505060405180910390f35b61060c600480360360408110156105d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610ff0565b005b6106706004803603604081101561062457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061118b565b604051808215151515815260200191505060405180910390f35b610797600480360360a08110156106a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561071157600080fd5b82018360208201111561072357600080fd5b8035906020019184600183028401116401000000008311171561074557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061121f565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610820576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612023602b913960400191505060405180910390fd5b6001600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109785780601f1061094d57610100808354040283529160200191610978565b820191906000526020600020905b81548152906001019060200180831161095b57829003601f168201915b50505050509050919050565b81518351146109de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061217b6028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610a64576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806120a86025913960400191505060405180910390fd5b610a6c611594565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480610ab25750610ab185610aac611594565b61118b565b5b610b07576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806120cd6032913960400191505060405180910390fd5b6000610b11611594565b9050610b2181878787878761159c565b60008090505b8451811015610cf5576000858281518110610b3e57fe5b602002602001015190506000858381518110610b5657fe5b60200260200101519050610bdd816040518060600160405280602a81526020016120ff602a91396001600086815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115a49092919063ffffffff16565b6001600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c94816001600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461166490919063ffffffff16565b6001600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050806001019050610b27565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610da5578082015181840152602081019050610d8a565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015610de7578082015181840152602081019050610dcc565b5050505090500194505050505060405180910390a4610e0a8187878787876116ec565b505050505050565b60608151835114610e6e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806121526029913960400191505060405180910390fd5b60608351604051908082528060200260200182016040528015610ea05781602001602082028038833980820191505090505b50905060008090505b8451811015610fe557600073ffffffffffffffffffffffffffffffffffffffff16858281518110610ed657fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415610f4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061204e6031913960400191505060405180910390fd5b60016000858381518110610f5b57fe5b602002602001015181526020019081526020016000206000868381518110610f7f57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054828281518110610fce57fe5b602002602001018181525050806001019050610ea9565b508091505092915050565b8173ffffffffffffffffffffffffffffffffffffffff1661100f611594565b73ffffffffffffffffffffffffffffffffffffffff16141561107c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806121296029913960400191505060405180910390fd5b8060026000611089611594565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611136611594565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156112a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806120a86025913960400191505060405180910390fd5b6112ad611594565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806112f357506112f2856112ed611594565b61118b565b5b611348576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061207f6029913960400191505060405180910390fd5b6000611352611594565b905061137281878761136388611b64565b61136c88611b64565b8761159c565b6113ef836040518060600160405280602a81526020016120ff602a91396001600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115a49092919063ffffffff16565b6001600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506114a6836001600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461166490919063ffffffff16565b6001600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a461158c818787878787611bbd565b505050505050565b600033905090565b505050505050565b6000838311158290611651576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116165780820151818401526020810190506115fb565b50505050905090810190601f1680156116435780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156116e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b61170b8473ffffffffffffffffffffffffffffffffffffffff16611fb3565b15611b5c578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156117ef5780820151818401526020810190506117d4565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015611831578082015181840152602081019050611816565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015611870578082015181840152602081019050611855565b50505050905090810190601f16801561189d5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1580156118c257600080fd5b505af19250505080156118f657506040513d60208110156118e257600080fd5b810190808051906020019092919050505060015b611abd5760006040519050600081526001156119bf5760443d101561191e57600090506119bf565b60046000803e60005160e01c6308c379a0811461193f5760009150506119bf565b60043d036004833e81513d602482011167ffffffffffffffff8211171561196b576000925050506119bf565b808301805167ffffffffffffffff81111561198d5760009450505050506119bf565b8060208301013d86018111156119ab576000955050505050506119bf565b601f19601f82011660405282955050505050505b806119ca5750611a6c565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611a31578082015181840152602081019050611a16565b50505050905090810190601f168015611a5e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180611fc76034913960400191505060405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611b5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180611ffb6028913960400191505060405180910390fd5b505b505050505050565b6060806001604051908082528060200260200182016040528015611b975781602001602082028038833980820191505090505b5090508281600081518110611ba857fe5b60200260200101818152505080915050919050565b611bdc8473ffffffffffffffffffffffffffffffffffffffff16611fb3565b15611fab578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611cc1578082015181840152602081019050611ca6565b50505050905090810190601f168015611cee5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015611d1157600080fd5b505af1925050508015611d4557506040513d6020811015611d3157600080fd5b810190808051906020019092919050505060015b611f0c576000604051905060008152600115611e0e5760443d1015611d6d5760009050611e0e565b60046000803e60005160e01c6308c379a08114611d8e576000915050611e0e565b60043d036004833e81513d602482011167ffffffffffffffff82111715611dba57600092505050611e0e565b808301805167ffffffffffffffff811115611ddc576000945050505050611e0e565b8060208301013d8601811115611dfa57600095505050505050611e0e565b601f19601f82011660405282955050505050505b80611e195750611ebb565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e80578082015181840152602081019050611e65565b50505050905090810190601f168015611ead5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180611fc76034913960400191505060405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611fa9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180611ffb6028913960400191505060405180910390fd5b505b505050505050565b600080823b90506000811191505091905056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368a2646970667358221220f017a6503d01340f96f8b0d977f8d2db373022da6bae655f5b9086368fe6b0f464736f6c63430006020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2514 CODESIZE SUB DUP1 PUSH3 0x2514 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP PUSH3 0x110 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH3 0x158 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x121 DUP2 PUSH3 0x261 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x139 PUSH4 0xD9B67A26 PUSH1 0xE0 SHL PUSH3 0x158 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x151 PUSH4 0xE89341C PUSH1 0xE0 SHL PUSH3 0x158 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x32C JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO PUSH3 0x1F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552433136353A20696E76616C696420696E7465726661636520696400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x279 SWAP3 SWAP2 SWAP1 PUSH3 0x27D JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x2C0 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2F1 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2F1 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2F0 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2D3 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x300 SWAP2 SWAP1 PUSH3 0x304 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x329 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x325 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x30B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x21D8 DUP1 PUSH3 0x33C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x5BE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x68A JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1FA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1EC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x984 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x567 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5AA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x58F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFF0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x670 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x118B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x797 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x121F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2023 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x978 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x94D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x978 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x95B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x9DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x217B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20A8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6C PUSH2 0x1594 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xAB2 JUMPI POP PUSH2 0xAB1 DUP6 PUSH2 0xAAC PUSH2 0x1594 JUMP JUMPDEST PUSH2 0x118B JUMP JUMPDEST JUMPDEST PUSH2 0xB07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20CD PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB11 PUSH2 0x1594 JUMP JUMPDEST SWAP1 POP PUSH2 0xB21 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xCF5 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB3E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB56 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0xBDD DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20FF PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15A4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC94 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xB27 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDA5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD8A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDE7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDCC JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE0A DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x16EC JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xE6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2152 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEA0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xFE5 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xED6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x204E PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF5B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF7F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFCE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xEA9 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x100F PUSH2 0x1594 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x107C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2129 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x1089 PUSH2 0x1594 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1136 PUSH2 0x1594 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20A8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12AD PUSH2 0x1594 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x12F3 JUMPI POP PUSH2 0x12F2 DUP6 PUSH2 0x12ED PUSH2 0x1594 JUMP JUMPDEST PUSH2 0x118B JUMP JUMPDEST JUMPDEST PUSH2 0x1348 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x207F PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1352 PUSH2 0x1594 JUMP JUMPDEST SWAP1 POP PUSH2 0x1372 DUP2 DUP8 DUP8 PUSH2 0x1363 DUP9 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x136C DUP9 PUSH2 0x1B64 JUMP JUMPDEST DUP8 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x13EF DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20FF PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15A4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x14A6 DUP4 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x158C DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BBD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1651 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1616 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15FB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1643 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x16E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x170B DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FB3 JUMP JUMPDEST ISZERO PUSH2 0x1B5C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17EF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17D4 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1831 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1816 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1870 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1855 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x189D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18F6 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 JUMPDEST PUSH2 0x1ABD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 ISZERO PUSH2 0x19BF JUMPI PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x191E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0xE0 SHR PUSH4 0x8C379A0 DUP2 EQ PUSH2 0x193F JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x196B JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x19BF JUMP JUMPDEST DUP1 DUP4 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x198D JUMPI PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0x19BF JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD RETURNDATASIZE DUP7 ADD DUP2 GT ISZERO PUSH2 0x19AB JUMPI PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST DUP1 PUSH2 0x19CA JUMPI POP PUSH2 0x1A6C JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A31 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A16 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A5E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FC7 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1B5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FFB PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x1 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B97 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1BA8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BDC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FB3 JUMP JUMPDEST ISZERO PUSH2 0x1FAB JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CC1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1CEE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1D45 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 JUMPDEST PUSH2 0x1F0C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 ISZERO PUSH2 0x1E0E JUMPI PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1D6D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0xE0 SHR PUSH4 0x8C379A0 DUP2 EQ PUSH2 0x1D8E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1DBA JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x1E0E JUMP JUMPDEST DUP1 DUP4 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DDC JUMPI PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0x1E0E JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD RETURNDATASIZE DUP7 ADD DUP2 GT ISZERO PUSH2 0x1DFA JUMPI PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST DUP1 PUSH2 0x1E19 JUMPI POP PUSH2 0x1EBB JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E80 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E65 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1EAD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FC7 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1FA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FFB PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243313135 CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH19 0x656A656374656420746F6B656E734552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2062617463682062 PUSH2 0x6C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2063616C6C657220 PUSH10 0x73206E6F74206F776E65 PUSH19 0x206E6F7220617070726F766564455243313135 CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0x4552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F72207472616E73666572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH20 0x657474696E6720617070726F76616C2073746174 PUSH22 0x7320666F722073656C66455243313135353A20616363 PUSH16 0x756E747320616E6420696473206C656E PUSH8 0x7468206D69736D61 PUSH21 0x6368455243313135353A2069647320616E6420616D PUSH16 0x756E7473206C656E677468206D69736D PUSH2 0x7463 PUSH9 0xA26469706673582212 KECCAK256 CREATE OR 0xA6 POP RETURNDATASIZE ADD CALLVALUE 0xF SWAP7 0xF8 0xB0 0xD9 PUSH24 0xF8D2DB373022DA6BAE655F5B9086368FE6B0F464736F6C63 NUMBER STOP MOD MUL STOP CALLER ",
							"sourceMap": "512:13743:5:-:0;;;1966:352;8:9:-1;5:2;;;30:1;27;20:12;5:2;1966:352:5;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1966:352:5;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;1966:352:5;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1966:352:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;751:40:2;418:10;770:20;;751:18;;;:40;;:::i;:::-;2015:12:5;2023:3;2015:7;;;:12;;:::i;:::-;2116:41;1754:10;2135:21;;2116:18;;;:41;;:::i;:::-;2257:54;1906:10;2276:34;;2257:18;;;:54;;:::i;:::-;1966:352;512:13743;;1482:198:2;1580:10;1565:25;;:11;:25;;;;;1557:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1669:4;1633:20;:33;1654:11;1633:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1482:198;:::o;7590:86:5:-;7663:6;7656:4;:13;;;;;;;;;;;;:::i;:::-;;7590:86;:::o;512:13743::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461041d578063a22cb465146105be578063e985e9c51461060e578063f242432a1461068a57610087565b8062fdd58e1461008c57806301ffc9a7146100ee5780630e89341c146101535780632eb2c2d6146101fa575b600080fd5b6100d8600480360360408110156100a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610799565b6040518082815260200191505060405180910390f35b6101396004803603602081101561010457600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610879565b604051808215151515815260200191505060405180910390f35b61017f6004803603602081101561016957600080fd5b81019080803590602001909291905050506108e0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101bf5780820151818401526020810190506101a4565b50505050905090810190601f1680156101ec5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61041b600480360360a081101561021057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561026d57600080fd5b82018360208201111561027f57600080fd5b803590602001918460208302840111640100000000831117156102a157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561030157600080fd5b82018360208201111561031357600080fd5b8035906020019184602083028401116401000000008311171561033557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561039557600080fd5b8201836020820111156103a757600080fd5b803590602001918460018302840111640100000000831117156103c957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610984565b005b6105676004803603604081101561043357600080fd5b810190808035906020019064010000000081111561045057600080fd5b82018360208201111561046257600080fd5b8035906020019184602083028401116401000000008311171561048457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156104e457600080fd5b8201836020820111156104f657600080fd5b8035906020019184602083028401116401000000008311171561051857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610e12565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156105aa57808201518184015260208101905061058f565b505050509050019250505060405180910390f35b61060c600480360360408110156105d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610ff0565b005b6106706004803603604081101561062457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061118b565b604051808215151515815260200191505060405180910390f35b610797600480360360a08110156106a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561071157600080fd5b82018360208201111561072357600080fd5b8035906020019184600183028401116401000000008311171561074557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061121f565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610820576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612023602b913960400191505060405180910390fd5b6001600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109785780601f1061094d57610100808354040283529160200191610978565b820191906000526020600020905b81548152906001019060200180831161095b57829003601f168201915b50505050509050919050565b81518351146109de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061217b6028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610a64576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806120a86025913960400191505060405180910390fd5b610a6c611594565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480610ab25750610ab185610aac611594565b61118b565b5b610b07576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806120cd6032913960400191505060405180910390fd5b6000610b11611594565b9050610b2181878787878761159c565b60008090505b8451811015610cf5576000858281518110610b3e57fe5b602002602001015190506000858381518110610b5657fe5b60200260200101519050610bdd816040518060600160405280602a81526020016120ff602a91396001600086815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115a49092919063ffffffff16565b6001600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c94816001600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461166490919063ffffffff16565b6001600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050806001019050610b27565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610da5578082015181840152602081019050610d8a565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015610de7578082015181840152602081019050610dcc565b5050505090500194505050505060405180910390a4610e0a8187878787876116ec565b505050505050565b60608151835114610e6e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806121526029913960400191505060405180910390fd5b60608351604051908082528060200260200182016040528015610ea05781602001602082028038833980820191505090505b50905060008090505b8451811015610fe557600073ffffffffffffffffffffffffffffffffffffffff16858281518110610ed657fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415610f4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061204e6031913960400191505060405180910390fd5b60016000858381518110610f5b57fe5b602002602001015181526020019081526020016000206000868381518110610f7f57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054828281518110610fce57fe5b602002602001018181525050806001019050610ea9565b508091505092915050565b8173ffffffffffffffffffffffffffffffffffffffff1661100f611594565b73ffffffffffffffffffffffffffffffffffffffff16141561107c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806121296029913960400191505060405180910390fd5b8060026000611089611594565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611136611594565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156112a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806120a86025913960400191505060405180910390fd5b6112ad611594565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806112f357506112f2856112ed611594565b61118b565b5b611348576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061207f6029913960400191505060405180910390fd5b6000611352611594565b905061137281878761136388611b64565b61136c88611b64565b8761159c565b6113ef836040518060600160405280602a81526020016120ff602a91396001600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115a49092919063ffffffff16565b6001600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506114a6836001600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461166490919063ffffffff16565b6001600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a461158c818787878787611bbd565b505050505050565b600033905090565b505050505050565b6000838311158290611651576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116165780820151818401526020810190506115fb565b50505050905090810190601f1680156116435780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156116e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b61170b8473ffffffffffffffffffffffffffffffffffffffff16611fb3565b15611b5c578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156117ef5780820151818401526020810190506117d4565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015611831578082015181840152602081019050611816565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015611870578082015181840152602081019050611855565b50505050905090810190601f16801561189d5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1580156118c257600080fd5b505af19250505080156118f657506040513d60208110156118e257600080fd5b810190808051906020019092919050505060015b611abd5760006040519050600081526001156119bf5760443d101561191e57600090506119bf565b60046000803e60005160e01c6308c379a0811461193f5760009150506119bf565b60043d036004833e81513d602482011167ffffffffffffffff8211171561196b576000925050506119bf565b808301805167ffffffffffffffff81111561198d5760009450505050506119bf565b8060208301013d86018111156119ab576000955050505050506119bf565b601f19601f82011660405282955050505050505b806119ca5750611a6c565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611a31578082015181840152602081019050611a16565b50505050905090810190601f168015611a5e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180611fc76034913960400191505060405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611b5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180611ffb6028913960400191505060405180910390fd5b505b505050505050565b6060806001604051908082528060200260200182016040528015611b975781602001602082028038833980820191505090505b5090508281600081518110611ba857fe5b60200260200101818152505080915050919050565b611bdc8473ffffffffffffffffffffffffffffffffffffffff16611fb3565b15611fab578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611cc1578082015181840152602081019050611ca6565b50505050905090810190601f168015611cee5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015611d1157600080fd5b505af1925050508015611d4557506040513d6020811015611d3157600080fd5b810190808051906020019092919050505060015b611f0c576000604051905060008152600115611e0e5760443d1015611d6d5760009050611e0e565b60046000803e60005160e01c6308c379a08114611d8e576000915050611e0e565b60043d036004833e81513d602482011167ffffffffffffffff82111715611dba57600092505050611e0e565b808301805167ffffffffffffffff811115611ddc576000945050505050611e0e565b8060208301013d8601811115611dfa57600095505050505050611e0e565b601f19601f82011660405282955050505050505b80611e195750611ebb565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e80578082015181840152602081019050611e65565b50505050905090810190601f168015611ead5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180611fc76034913960400191505060405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611fa9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180611ffb6028913960400191505060405180910390fd5b505b505050505050565b600080823b90506000811191505091905056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368a2646970667358221220f017a6503d01340f96f8b0d977f8d2db373022da6bae655f5b9086368fe6b0f464736f6c63430006020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x5BE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x68A JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1FA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1EC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x984 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x567 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5AA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x58F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFF0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x670 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x118B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x797 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x121F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2023 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x978 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x94D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x978 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x95B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x9DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x217B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20A8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6C PUSH2 0x1594 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xAB2 JUMPI POP PUSH2 0xAB1 DUP6 PUSH2 0xAAC PUSH2 0x1594 JUMP JUMPDEST PUSH2 0x118B JUMP JUMPDEST JUMPDEST PUSH2 0xB07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20CD PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB11 PUSH2 0x1594 JUMP JUMPDEST SWAP1 POP PUSH2 0xB21 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xCF5 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB3E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB56 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0xBDD DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20FF PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15A4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC94 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xB27 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDA5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD8A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDE7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDCC JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE0A DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x16EC JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xE6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2152 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEA0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xFE5 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xED6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x204E PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF5B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF7F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFCE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xEA9 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x100F PUSH2 0x1594 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x107C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2129 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x1089 PUSH2 0x1594 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1136 PUSH2 0x1594 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20A8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12AD PUSH2 0x1594 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x12F3 JUMPI POP PUSH2 0x12F2 DUP6 PUSH2 0x12ED PUSH2 0x1594 JUMP JUMPDEST PUSH2 0x118B JUMP JUMPDEST JUMPDEST PUSH2 0x1348 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x207F PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1352 PUSH2 0x1594 JUMP JUMPDEST SWAP1 POP PUSH2 0x1372 DUP2 DUP8 DUP8 PUSH2 0x1363 DUP9 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x136C DUP9 PUSH2 0x1B64 JUMP JUMPDEST DUP8 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x13EF DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20FF PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15A4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x14A6 DUP4 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x158C DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BBD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1651 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1616 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15FB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1643 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x16E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x170B DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FB3 JUMP JUMPDEST ISZERO PUSH2 0x1B5C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17EF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17D4 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1831 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1816 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1870 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1855 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x189D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18F6 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 JUMPDEST PUSH2 0x1ABD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 ISZERO PUSH2 0x19BF JUMPI PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x191E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0xE0 SHR PUSH4 0x8C379A0 DUP2 EQ PUSH2 0x193F JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x196B JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x19BF JUMP JUMPDEST DUP1 DUP4 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x198D JUMPI PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0x19BF JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD RETURNDATASIZE DUP7 ADD DUP2 GT ISZERO PUSH2 0x19AB JUMPI PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST DUP1 PUSH2 0x19CA JUMPI POP PUSH2 0x1A6C JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A31 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A16 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A5E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FC7 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1B5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FFB PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x1 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B97 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1BA8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BDC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FB3 JUMP JUMPDEST ISZERO PUSH2 0x1FAB JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CC1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1CEE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1D45 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 JUMPDEST PUSH2 0x1F0C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 ISZERO PUSH2 0x1E0E JUMPI PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1D6D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0xE0 SHR PUSH4 0x8C379A0 DUP2 EQ PUSH2 0x1D8E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1DBA JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x1E0E JUMP JUMPDEST DUP1 DUP4 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DDC JUMPI PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0x1E0E JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD RETURNDATASIZE DUP7 ADD DUP2 GT ISZERO PUSH2 0x1DFA JUMPI PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST DUP1 PUSH2 0x1E19 JUMPI POP PUSH2 0x1EBB JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E80 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E65 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1EAD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FC7 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1FA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FFB PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243313135 CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH19 0x656A656374656420746F6B656E734552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2062617463682062 PUSH2 0x6C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2063616C6C657220 PUSH10 0x73206E6F74206F776E65 PUSH19 0x206E6F7220617070726F766564455243313135 CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0x4552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F72207472616E73666572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH20 0x657474696E6720617070726F76616C2073746174 PUSH22 0x7320666F722073656C66455243313135353A20616363 PUSH16 0x756E747320616E6420696473206C656E PUSH8 0x7468206D69736D61 PUSH21 0x6368455243313135353A2069647320616E6420616D PUSH16 0x756E7473206C656E677468206D69736D PUSH2 0x7463 PUSH9 0xA26469706673582212 KECCAK256 CREATE OR 0xA6 POP RETURNDATASIZE ADD CALLVALUE 0xF SWAP7 0xF8 0xB0 0xD9 PUSH24 0xF8D2DB373022DA6BAE655F5B9086368FE6B0F464736F6C63 NUMBER STOP MOD MUL STOP CALLER ",
							"sourceMap": "512:13743:5:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;512:13743:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2956:220;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2956:220:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;948:140:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;948:140:2;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2717:97:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2717:97:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2717:97:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5583:1184;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5583:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5583:1184:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5583:1184:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5583:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5583:1184:5;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5583:1184:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5583:1184:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5583:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5583:1184:5;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5583:1184:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5583:1184:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5583:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5583:1184:5;;;;;;;;;;;;;;;:::i;:::-;;3333:615;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3333:615:5;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3333:615:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3333:615:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3333:615:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3333:615:5;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3333:615:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3333:615:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3333:615:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3333:615:5;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3333:615:5;;;;;;;;;;;;;;;;;4016:306;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4016:306:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4389:158;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4389:158:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4614:897;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4614:897:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4614:897:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4614:897:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4614:897:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4614:897:5;;;;;;;;;;;;;;;:::i;:::-;;2956:220;3034:7;3080:1;3061:21;;:7;:21;;;;3053:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3147:9;:13;3157:2;3147:13;;;;;;;;;;;:22;3161:7;3147:22;;;;;;;;;;;;;;;;3140:29;;2956:220;;;;:::o;948:140:2:-;1025:4;1048:20;:33;1069:11;1048:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1041:40;;948:140;;;:::o;2717:97:5:-;2771:13;2803:4;2796:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2717:97;;;:::o;5583:1184::-;5837:7;:14;5823:3;:10;:28;5815:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5928:1;5914:16;;:2;:16;;;;5906:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6011:12;:10;:12::i;:::-;6003:20;;:4;:20;;;:60;;;;6027:36;6044:4;6050:12;:10;:12::i;:::-;6027:16;:36::i;:::-;6003:60;5982:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6150:16;6169:12;:10;:12::i;:::-;6150:31;;6192:60;6213:8;6223:4;6229:2;6233:3;6238:7;6247:4;6192:20;:60::i;:::-;6268:9;6280:1;6268:13;;6263:349;6287:3;:10;6283:1;:14;6263:349;;;6318:10;6331:3;6335:1;6331:6;;;;;;;;;;;;;;6318:19;;6351:14;6368:7;6376:1;6368:10;;;;;;;;;;;;;;6351:27;;6415:123;6456:6;6415:123;;;;;;;;;;;;;;;;;:9;:13;6425:2;6415:13;;;;;;;;;;;:19;6429:4;6415:19;;;;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;6393:9;:13;6403:2;6393:13;;;;;;;;;;;:19;6407:4;6393:19;;;;;;;;;;;;;;;:145;;;;6572:29;6594:6;6572:9;:13;6582:2;6572:13;;;;;;;;;;;:17;6586:2;6572:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;6552:9;:13;6562:2;6552:13;;;;;;;;;;;:17;6566:2;6552:17;;;;;;;;;;;;;;;:49;;;;6263:349;;6299:3;;;;;6263:349;;;;6657:2;6627:47;;6651:4;6627:47;;6641:8;6627:47;;;6661:3;6666:7;6627:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6627:47:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6627:47:5;;;;;;;;;;;;;;;;;;;6685:75;6721:8;6731:4;6737:2;6741:3;6746:7;6755:4;6685:35;:75::i;:::-;5583:1184;;;;;;:::o;3333:615::-;3490:16;3549:3;:10;3530:8;:15;:29;3522:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3616:30;3663:8;:15;3649:30;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;3649:30:5;;;;3616:63;;3695:9;3707:1;3695:13;;3690:221;3714:8;:15;3710:1;:19;3690:221;;;3781:1;3758:25;;:8;3767:1;3758:11;;;;;;;;;;;;;;:25;;;;3750:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3870:9;:17;3880:3;3884:1;3880:6;;;;;;;;;;;;;;3870:17;;;;;;;;;;;:30;3888:8;3897:1;3888:11;;;;;;;;;;;;;;3870:30;;;;;;;;;;;;;;;;3851:13;3865:1;3851:16;;;;;;;;;;;;;:49;;;;;3731:3;;;;;3690:221;;;;3928:13;3921:20;;;3333:615;;;;:::o;4016:306::-;4134:8;4118:24;;:12;:10;:12::i;:::-;:24;;;;4110:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:8;4199:18;:32;4218:12;:10;:12::i;:::-;4199:32;;;;;;;;;;;;;;;:42;4232:8;4199:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;4296:8;4267:48;;4282:12;:10;:12::i;:::-;4267:48;;;4306:8;4267:48;;;;;;;;;;;;;;;;;;;;;;4016:306;;:::o;4389:158::-;4480:4;4503:18;:27;4522:7;4503:27;;;;;;;;;;;;;;;:37;4531:8;4503:37;;;;;;;;;;;;;;;;;;;;;;;;;4496:44;;4389:158;;;;:::o;4614:897::-;4843:1;4829:16;;:2;:16;;;;4821:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4926:12;:10;:12::i;:::-;4918:20;;:4;:20;;;:60;;;;4942:36;4959:4;4965:12;:10;:12::i;:::-;4942:16;:36::i;:::-;4918:60;4897:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5056:16;5075:12;:10;:12::i;:::-;5056:31;;5098:96;5119:8;5129:4;5135:2;5139:21;5157:2;5139:17;:21::i;:::-;5162:25;5180:6;5162:17;:25::i;:::-;5189:4;5098:20;:96::i;:::-;5227:77;5251:6;5227:77;;;;;;;;;;;;;;;;;:9;:13;5237:2;5227:13;;;;;;;;;;;:19;5241:4;5227:19;;;;;;;;;;;;;;;;:23;;:77;;;;;:::i;:::-;5205:9;:13;5215:2;5205:13;;;;;;;;;;;:19;5219:4;5205:19;;;;;;;;;;;;;;;:99;;;;5334:29;5356:6;5334:9;:13;5344:2;5334:13;;;;;;;;;;;:17;5348:2;5334:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;5314:9;:13;5324:2;5314:13;;;;;;;;;;;:17;5328:2;5314:17;;;;;;;;;;;;;;;:49;;;;5410:2;5379:46;;5404:4;5379:46;;5394:8;5379:46;;;5414:2;5418:6;5379:46;;;;;;;;;;;;;;;;;;;;;;;;5436:68;5467:8;5477:4;5483:2;5487;5491:6;5499:4;5436:30;:68::i;:::-;4614:897;;;;;;:::o;590:104:1:-;643:15;677:10;670:17;;590:104;:::o;12296:227:5:-;;;;;;;:::o;1746:187:4:-;1832:7;1864:1;1859;:6;;1867:12;1851:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1851:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1890:9;1906:1;1902;:5;1890:17;;1925:1;1918:8;;;1746:187;;;;;:::o;874:176::-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;13276:778:5:-;13520:15;:2;:13;;;:15::i;:::-;13516:532;;;13572:2;13555:43;;;13599:8;13609:4;13615:3;13620:7;13629:4;13555:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13555:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13555:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13555:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13555:79:5;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13555:79:5;;;;;;;;;;;;;;;;;;13551:487;;;20:4:-1;14:11;6:19;;43:1;37:4;30:15;57:1;50:730;;;93:4;75:16;72:26;69:2;;;109:1;101:9;;111:5;;69:2;145:1;142;139;124:23;179:1;173:8;168:3;164:18;206:10;201:3;198:19;188:2;;229:1;221:9;;231:5;;;188:2;290:1;272:16;268:24;265:1;259:4;244:49;319:4;313:11;403:16;396:4;388:6;384:17;381:39;354:18;346:6;343:30;333:94;330:2;;;444:1;436:9;;452:5;;;;330:2;491:6;485:4;481:17;524:3;518:10;548:18;540:6;537:30;534:2;;;578:1;570:9;;580:5;;;;;;534:2;624:6;617:4;612:3;608:14;604:27;658:16;652:4;648:27;643:3;640:36;637:2;;;687:1;679:9;;689:5;;;;;;;637:2;739:4;735:9;728:4;723:3;719:14;715:30;709:4;702:44;760:3;752:11;;769:5;;;;;50:730;13551:487:5;;;;;;;13914:6;13907:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13907::5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13551:487;13961:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13551:487;13695:52;;;13683:64;;;:8;:64;;;;13679:161;;13771:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13679:161;13635:219;13516:532;13276:778;;;;;;:::o;14060:193::-;14126:16;14154:22;14193:1;14179:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;14179:16:5;;;;14154:41;;14216:7;14205:5;14211:1;14205:8;;;;;;;;;;;;;:18;;;;;14241:5;14234:12;;;14060:193;;;:::o;12529:741::-;12748:15;:2;:13;;;:15::i;:::-;12744:520;;;12800:2;12783:38;;;12822:8;12832:4;12838:2;12842:6;12850:4;12783:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12783:72:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12783:72:5;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12783:72:5;;;;;;;;;;;;;;;;;;12779:475;;;20:4:-1;14:11;6:19;;43:1;37:4;30:15;57:1;50:730;;;93:4;75:16;72:26;69:2;;;109:1;101:9;;111:5;;69:2;145:1;142;139;124:23;179:1;173:8;168:3;164:18;206:10;201:3;198:19;188:2;;229:1;221:9;;231:5;;;188:2;290:1;272:16;268:24;265:1;259:4;244:49;319:4;313:11;403:16;396:4;388:6;384:17;381:39;354:18;346:6;343:30;333:94;330:2;;;444:1;436:9;;452:5;;;;330:2;491:6;485:4;481:17;524:3;518:10;548:18;540:6;537:30;534:2;;;578:1;570:9;;580:5;;;;;;534:2;624:6;617:4;612:3;608:14;604:27;658:16;652:4;648:27;643:3;640:36;637:2;;;687:1;679:9;;689:5;;;;;;;637:2;739:4;735:9;728:4;723:3;719:14;715:30;709:4;702:44;760:3;752:11;;769:5;;;;;50:730;12779:475:5;;;;;;;13130:6;13123:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13123::5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12779:475;13177:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12779:475;12916:47;;;12904:59;;;:8;:59;;;;12900:156;;12987:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12900:156;12856:214;12744:520;12529:741;;;;;;:::o;718:413:9:-;778:4;981:12;1090:7;1078:20;1070:28;;1123:1;1116:4;:8;1109:15;;;718:413;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1732800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "1413",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "1276",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "MSTORE"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MLOAD"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "CODESIZE"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SUB"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP4"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "CODECOPY"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MLOAD"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MLOAD"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP4"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP3"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP2"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6"
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3"
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL"
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1"
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE"
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MLOAD"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP4"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1"
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2"
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "AND"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ISZERO"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMPI"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP3"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SUB"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MLOAD"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP4"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SUB"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "EXP"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SUB"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "NOT"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "AND"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MSTORE"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP2"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMPDEST"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MSTORE"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 418,
									"end": 428,
									"name": "PUSH",
									"value": "1FFC9A7"
								},
								{
									"begin": 770,
									"end": 790,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 770,
									"end": 790,
									"name": "SHL"
								},
								{
									"begin": 751,
									"end": 769,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 751,
									"end": 769,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 751,
									"end": 769,
									"name": "SHL"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "SHR"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "JUMPDEST"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 2023,
									"end": 2026,
									"name": "DUP2"
								},
								{
									"begin": 2015,
									"end": 2022,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 2015,
									"end": 2022,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2015,
									"end": 2022,
									"name": "SHL"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "SHR"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "JUMPDEST"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 1754,
									"end": 1764,
									"name": "PUSH",
									"value": "D9B67A26"
								},
								{
									"begin": 2135,
									"end": 2156,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 2135,
									"end": 2156,
									"name": "SHL"
								},
								{
									"begin": 2116,
									"end": 2134,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 2116,
									"end": 2134,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2116,
									"end": 2134,
									"name": "SHL"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "SHR"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "JUMPDEST"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 1906,
									"end": 1916,
									"name": "PUSH",
									"value": "E89341C"
								},
								{
									"begin": 2276,
									"end": 2310,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 2276,
									"end": 2310,
									"name": "SHL"
								},
								{
									"begin": 2257,
									"end": 2275,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 2257,
									"end": 2275,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2257,
									"end": 2275,
									"name": "SHL"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "SHR"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "JUMPDEST"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMP"
								},
								{
									"begin": 1482,
									"end": 1680,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 1482,
									"end": 1680,
									"name": "JUMPDEST"
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "PUSH",
									"value": "FFFFFFFF"
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "SHL"
								},
								{
									"begin": 1565,
									"end": 1576,
									"name": "DUP2"
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "NOT"
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "AND"
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "EQ"
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "ISZERO"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "JUMPI"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MLOAD"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP2"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MSTORE"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "ADD"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP1"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP1"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "ADD"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP3"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP2"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SUB"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP3"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MSTORE"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "1C"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP2"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MSTORE"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "ADD"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP1"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "4552433136353A20696E76616C696420696E7465726661636520696400000000"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP2"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MSTORE"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "POP"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "ADD"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SWAP2"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "POP"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "POP"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MLOAD"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP1"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SWAP2"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SUB"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SWAP1"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "REVERT"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "JUMPDEST"
								},
								{
									"begin": 1669,
									"end": 1673,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1653,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "DUP1"
								},
								{
									"begin": 1654,
									"end": 1665,
									"name": "DUP4"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "NOT"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "AND"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "NOT"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "AND"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "DUP2"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "MSTORE"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "ADD"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "SWAP1"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "DUP2"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "MSTORE"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "ADD"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "KECCAK256"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "EXP"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "DUP2"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "SLOAD"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "DUP2"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "MUL"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "NOT"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "AND"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "SWAP1"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "DUP4"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "ISZERO"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "ISZERO"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "MUL"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "OR"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "SWAP1"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "SSTORE"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "POP"
								},
								{
									"begin": 1482,
									"end": 1680,
									"name": "POP"
								},
								{
									"begin": 1482,
									"end": 1680,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 7590,
									"end": 7676,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 7590,
									"end": 7676,
									"name": "JUMPDEST"
								},
								{
									"begin": 7663,
									"end": 7669,
									"name": "DUP1"
								},
								{
									"begin": 7656,
									"end": 7660,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "SWAP1"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "DUP1"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "MLOAD"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "SWAP1"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "ADD"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "SWAP1"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "SWAP3"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "SWAP2"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "SWAP1"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "JUMPDEST"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "POP"
								},
								{
									"begin": 7590,
									"end": 7676,
									"name": "POP"
								},
								{
									"begin": 7590,
									"end": 7676,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"value": "25"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SLOAD"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP2"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "AND"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ISZERO"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "MUL"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SUB"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "AND"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DIV"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "MSTORE"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "KECCAK256"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DIV"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP2"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP3"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "LT"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPI"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "MLOAD"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "NOT"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "AND"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP4"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "OR"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP6"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SSTORE"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMP"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"value": "27"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP6"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SSTORE"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ISZERO"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPI"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP2"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"value": "28"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP2"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "GT"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ISZERO"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"value": "29"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPI"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "MLOAD"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SSTORE"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP2"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP2"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"value": "28"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMP"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"value": "29"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"value": "26"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "POP"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "POP"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP2"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"value": "31"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"value": "30"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "POP"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"value": "31"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"value": "32"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP2"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"value": "33"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "GT"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ISZERO"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"value": "34"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPI"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP2"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SSTORE"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "POP"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"value": "33"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMP"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"value": "34"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "POP"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMP"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"value": "32"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "CODECOPY"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f017a6503d01340f96f8b0d977f8d2db373022da6bae655f5b9086368fe6b0f464736f6c63430006020033",
									".code": [
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "MSTORE"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "POP"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "LT"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "SHR"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"value": "4E1273F4"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "GT"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"value": "4E1273F4"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "EQ"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"value": "A22CB465"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "EQ"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"value": "E985E9C5"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "EQ"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"value": "F242432A"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "EQ"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMP"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPDEST"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"value": "FDD58E"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "EQ"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"value": "1FFC9A7"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "EQ"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"value": "E89341C"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "EQ"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"value": "2EB2C2D6"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "EQ"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPDEST"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "REVERT"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMPDEST"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP2"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "ADD"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "AND"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "ADD"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP3"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP2"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "ADD"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP3"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP2"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "POP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "POP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "POP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMPDEST"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "MLOAD"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP3"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP2"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "MSTORE"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "ADD"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP2"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "POP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "POP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "MLOAD"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP2"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SUB"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "RETURN"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMPDEST"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP2"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ADD"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "NOT"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "AND"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ADD"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP3"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP2"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "POP"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "POP"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "POP"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMPDEST"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "MLOAD"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP3"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ISZERO"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ISZERO"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ISZERO"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ISZERO"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP2"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "MSTORE"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ADD"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP2"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "POP"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "POP"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "MLOAD"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP2"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SUB"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "RETURN"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP3"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP3"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP3"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MSTORE"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MSTORE"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "AND"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ISZERO"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPI"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP3"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "EXP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "NOT"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "AND"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MSTORE"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP3"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "RETURN"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "AND"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "AND"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MLOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MLOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DIV"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MLOAD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "STOP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SUB"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SUB"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "RETURN"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMPDEST"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP2"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ADD"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "AND"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ADD"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP3"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP2"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ISZERO"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ISZERO"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ADD"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP3"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP2"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP1"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "POP"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "POP"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "POP"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMPDEST"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "STOP"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMPDEST"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP2"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ADD"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "AND"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ADD"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP3"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP2"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "AND"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ADD"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP3"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP2"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "POP"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "POP"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "POP"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMPDEST"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "MLOAD"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP3"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ISZERO"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ISZERO"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ISZERO"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ISZERO"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP2"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "MSTORE"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ADD"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP2"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "POP"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "POP"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "MLOAD"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP2"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SUB"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "RETURN"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "AND"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "AND"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP3"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DIV"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MUL"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MLOAD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MSTORE"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP4"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MSTORE"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP4"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "STOP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMPDEST"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3081,
											"name": "DUP1"
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "AND"
										},
										{
											"begin": 3061,
											"end": 3068,
											"name": "DUP4"
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "AND"
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "EQ"
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "ISZERO"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "JUMPI"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MLOAD"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP2"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MSTORE"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "ADD"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP1"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP1"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "ADD"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP3"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP2"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SUB"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP3"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MSTORE"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "2B"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP2"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MSTORE"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "ADD"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP1"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH data",
											"value": "1F4DE6A436172E7F7B1540476031CB037FC18EDE9CC346A56DA1697CBD352AA9"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "2B"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SWAP2"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "CODECOPY"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "ADD"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SWAP2"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "POP"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "POP"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MLOAD"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP1"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SWAP2"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SUB"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SWAP1"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "REVERT"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "JUMPDEST"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3159,
											"name": "DUP4"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "DUP2"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "MSTORE"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "ADD"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "SWAP1"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "DUP2"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "MSTORE"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "ADD"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "KECCAK256"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3168,
											"name": "DUP5"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "AND"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "AND"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "DUP2"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "MSTORE"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "ADD"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "SWAP1"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "DUP2"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "MSTORE"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "ADD"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "KECCAK256"
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "SLOAD"
										},
										{
											"begin": 3140,
											"end": 3169,
											"name": "SWAP1"
										},
										{
											"begin": 3140,
											"end": 3169,
											"name": "POP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP3"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP2"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "POP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "POP"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMPDEST"
										},
										{
											"begin": 1025,
											"end": 1029,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1080,
											"name": "DUP4"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "NOT"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "AND"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "NOT"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "AND"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "DUP2"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "MSTORE"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "ADD"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "DUP2"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "MSTORE"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "ADD"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "KECCAK256"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SLOAD"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "EXP"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "DIV"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "AND"
										},
										{
											"begin": 1041,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1041,
											"end": 1081,
											"name": "POP"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP2"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "POP"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST"
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2803,
											"end": 2807,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SLOAD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ISZERO"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MUL"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SUB"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DIV"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DIV"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MUL"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MLOAD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP3"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SLOAD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ISZERO"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MUL"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SUB"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DIV"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ISZERO"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPI"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "LT"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPI"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP4"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SLOAD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DIV"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MUL"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP4"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMP"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPDEST"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "KECCAK256"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPDEST"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SLOAD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP4"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "GT"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPI"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SUB"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPDEST"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST"
										},
										{
											"begin": 5837,
											"end": 5844,
											"name": "DUP2"
										},
										{
											"begin": 5837,
											"end": 5851,
											"name": "MLOAD"
										},
										{
											"begin": 5823,
											"end": 5826,
											"name": "DUP4"
										},
										{
											"begin": 5823,
											"end": 5833,
											"name": "MLOAD"
										},
										{
											"begin": 5823,
											"end": 5851,
											"name": "EQ"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "JUMPI"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MLOAD"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP2"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MSTORE"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "ADD"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP1"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP1"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "ADD"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP3"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP2"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SUB"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP3"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MSTORE"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP2"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MSTORE"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "ADD"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP1"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH data",
											"value": "E909E0C9A8F96B4F9AF03B716811ECE20BEB070BE416893ED1D50619B5930807"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SWAP2"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "CODECOPY"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "ADD"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SWAP2"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "POP"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "POP"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MLOAD"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP1"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SWAP2"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SUB"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SWAP1"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "REVERT"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "JUMPDEST"
										},
										{
											"begin": 5928,
											"end": 5929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5930,
											"name": "AND"
										},
										{
											"begin": 5914,
											"end": 5916,
											"name": "DUP5"
										},
										{
											"begin": 5914,
											"end": 5930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5930,
											"name": "AND"
										},
										{
											"begin": 5914,
											"end": 5930,
											"name": "EQ"
										},
										{
											"begin": 5914,
											"end": 5930,
											"name": "ISZERO"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "JUMPI"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MLOAD"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP2"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MSTORE"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "ADD"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP1"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP1"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "ADD"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP3"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP2"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SUB"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP3"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MSTORE"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP2"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MSTORE"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "ADD"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP1"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH data",
											"value": "6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SWAP2"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "CODECOPY"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "ADD"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SWAP2"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "POP"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "POP"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MLOAD"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP1"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SWAP2"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SUB"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SWAP1"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "REVERT"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "JUMPDEST"
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 6011,
											"end": 6021,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "JUMPDEST"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "AND"
										},
										{
											"begin": 6003,
											"end": 6007,
											"name": "DUP6"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "AND"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "EQ"
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "DUP1"
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "JUMPI"
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "POP"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 6044,
											"end": 6048,
											"name": "DUP6"
										},
										{
											"begin": 6050,
											"end": 6062,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 6050,
											"end": 6060,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 6050,
											"end": 6062,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6050,
											"end": 6062,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 6050,
											"end": 6062,
											"name": "JUMPDEST"
										},
										{
											"begin": 6027,
											"end": 6043,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "JUMPDEST"
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "JUMPDEST"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "JUMPI"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MLOAD"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP2"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MSTORE"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "ADD"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP1"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP1"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "ADD"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP3"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP2"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SUB"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP3"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MSTORE"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP2"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MSTORE"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "ADD"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP1"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH data",
											"value": "70A41C66829F5508884CDA9EF3D2F72551B34F23E4035BE97941681123D2D686"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SWAP2"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "CODECOPY"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "ADD"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SWAP2"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "POP"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "POP"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MLOAD"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP1"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SWAP2"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SUB"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SWAP1"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "REVERT"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "JUMPDEST"
										},
										{
											"begin": 6150,
											"end": 6166,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 6169,
											"end": 6179,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "JUMPDEST"
										},
										{
											"begin": 6150,
											"end": 6181,
											"name": "SWAP1"
										},
										{
											"begin": 6150,
											"end": 6181,
											"name": "POP"
										},
										{
											"begin": 6192,
											"end": 6252,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 6213,
											"end": 6221,
											"name": "DUP2"
										},
										{
											"begin": 6223,
											"end": 6227,
											"name": "DUP8"
										},
										{
											"begin": 6229,
											"end": 6231,
											"name": "DUP8"
										},
										{
											"begin": 6233,
											"end": 6236,
											"name": "DUP8"
										},
										{
											"begin": 6238,
											"end": 6245,
											"name": "DUP8"
										},
										{
											"begin": 6247,
											"end": 6251,
											"name": "DUP8"
										},
										{
											"begin": 6192,
											"end": 6212,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 6192,
											"end": 6252,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6192,
											"end": 6252,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 6192,
											"end": 6252,
											"name": "JUMPDEST"
										},
										{
											"begin": 6268,
											"end": 6277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6280,
											"end": 6281,
											"name": "DUP1"
										},
										{
											"begin": 6268,
											"end": 6281,
											"name": "SWAP1"
										},
										{
											"begin": 6268,
											"end": 6281,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "JUMPDEST"
										},
										{
											"begin": 6287,
											"end": 6290,
											"name": "DUP5"
										},
										{
											"begin": 6287,
											"end": 6297,
											"name": "MLOAD"
										},
										{
											"begin": 6283,
											"end": 6284,
											"name": "DUP2"
										},
										{
											"begin": 6283,
											"end": 6297,
											"name": "LT"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "ISZERO"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 6318,
											"end": 6328,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6331,
											"end": 6334,
											"name": "DUP6"
										},
										{
											"begin": 6335,
											"end": 6336,
											"name": "DUP3"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "DUP2"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "MLOAD"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "DUP2"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "LT"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "JUMPI"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "INVALID"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "JUMPDEST"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "MUL"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "ADD"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "ADD"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "MLOAD"
										},
										{
											"begin": 6318,
											"end": 6337,
											"name": "SWAP1"
										},
										{
											"begin": 6318,
											"end": 6337,
											"name": "POP"
										},
										{
											"begin": 6351,
											"end": 6365,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6368,
											"end": 6375,
											"name": "DUP6"
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "DUP4"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "DUP2"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "MLOAD"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "DUP2"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "LT"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "JUMPI"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "INVALID"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "JUMPDEST"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "MUL"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "ADD"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "ADD"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "MLOAD"
										},
										{
											"begin": 6351,
											"end": 6378,
											"name": "SWAP1"
										},
										{
											"begin": 6351,
											"end": 6378,
											"name": "POP"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 6456,
											"end": 6462,
											"name": "DUP2"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "MLOAD"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "DUP1"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "ADD"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "MSTORE"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "DUP1"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "DUP2"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "MSTORE"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "ADD"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH data",
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "SWAP2"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "CODECOPY"
										},
										{
											"begin": 6415,
											"end": 6424,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6427,
											"name": "DUP7"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "DUP2"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "MSTORE"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "ADD"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "SWAP1"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "DUP2"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "MSTORE"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "ADD"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "KECCAK256"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6433,
											"name": "DUP14"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "AND"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "AND"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "DUP2"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "MSTORE"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "ADD"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "SWAP1"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "DUP2"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "MSTORE"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "ADD"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "KECCAK256"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "SLOAD"
										},
										{
											"begin": 6415,
											"end": 6438,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 6415,
											"end": 6438,
											"name": "SWAP1"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "SWAP3"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "SWAP2"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "SWAP1"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "AND"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "JUMPDEST"
										},
										{
											"begin": 6393,
											"end": 6402,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6403,
											"end": 6405,
											"name": "DUP5"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "DUP2"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "MSTORE"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "ADD"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "SWAP1"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "DUP2"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "MSTORE"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "ADD"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "KECCAK256"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "DUP12"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "AND"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "AND"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "DUP2"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "MSTORE"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "ADD"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "SWAP1"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "DUP2"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "MSTORE"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "ADD"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "KECCAK256"
										},
										{
											"begin": 6393,
											"end": 6538,
											"name": "DUP2"
										},
										{
											"begin": 6393,
											"end": 6538,
											"name": "SWAP1"
										},
										{
											"begin": 6393,
											"end": 6538,
											"name": "SSTORE"
										},
										{
											"begin": 6393,
											"end": 6538,
											"name": "POP"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 6594,
											"end": 6600,
											"name": "DUP2"
										},
										{
											"begin": 6572,
											"end": 6581,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6584,
											"name": "DUP6"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "DUP2"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "MSTORE"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "ADD"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "SWAP1"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "DUP2"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "MSTORE"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "ADD"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6572,
											"end": 6585,
											"name": "KECCAK256"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6588,
											"name": "DUP12"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "AND"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "AND"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "DUP2"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "MSTORE"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "ADD"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "SWAP1"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "DUP2"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "MSTORE"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "ADD"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "KECCAK256"
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "SLOAD"
										},
										{
											"begin": 6572,
											"end": 6593,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 6572,
											"end": 6593,
											"name": "SWAP1"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "SWAP2"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "SWAP1"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "AND"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "JUMPDEST"
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6564,
											"name": "DUP5"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "DUP2"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "MSTORE"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "ADD"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "SWAP1"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "DUP2"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "MSTORE"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "ADD"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "KECCAK256"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6568,
											"name": "DUP11"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "AND"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "AND"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "DUP2"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "MSTORE"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "ADD"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "SWAP1"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "DUP2"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "MSTORE"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "ADD"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "KECCAK256"
										},
										{
											"begin": 6552,
											"end": 6601,
											"name": "DUP2"
										},
										{
											"begin": 6552,
											"end": 6601,
											"name": "SWAP1"
										},
										{
											"begin": 6552,
											"end": 6601,
											"name": "SSTORE"
										},
										{
											"begin": 6552,
											"end": 6601,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "POP"
										},
										{
											"begin": 6299,
											"end": 6302,
											"name": "DUP1"
										},
										{
											"begin": 6299,
											"end": 6302,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6299,
											"end": 6302,
											"name": "ADD"
										},
										{
											"begin": 6299,
											"end": 6302,
											"name": "SWAP1"
										},
										{
											"begin": 6299,
											"end": 6302,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "JUMP"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "JUMPDEST"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "POP"
										},
										{
											"begin": 6657,
											"end": 6659,
											"name": "DUP5"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "AND"
										},
										{
											"begin": 6651,
											"end": 6655,
											"name": "DUP7"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "AND"
										},
										{
											"begin": 6641,
											"end": 6649,
											"name": "DUP3"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "AND"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6661,
											"end": 6664,
											"name": "DUP8"
										},
										{
											"begin": 6666,
											"end": 6673,
											"name": "DUP8"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SUB"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP6"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MUL"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SUB"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP3"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP5"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MUL"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP5"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP2"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SUB"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "LOG4"
										},
										{
											"begin": 6685,
											"end": 6760,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 6721,
											"end": 6729,
											"name": "DUP2"
										},
										{
											"begin": 6731,
											"end": 6735,
											"name": "DUP8"
										},
										{
											"begin": 6737,
											"end": 6739,
											"name": "DUP8"
										},
										{
											"begin": 6741,
											"end": 6744,
											"name": "DUP8"
										},
										{
											"begin": 6746,
											"end": 6753,
											"name": "DUP8"
										},
										{
											"begin": 6755,
											"end": 6759,
											"name": "DUP8"
										},
										{
											"begin": 6685,
											"end": 6720,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 6685,
											"end": 6760,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6685,
											"end": 6760,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 6685,
											"end": 6760,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST"
										},
										{
											"begin": 3490,
											"end": 3506,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3549,
											"end": 3552,
											"name": "DUP2"
										},
										{
											"begin": 3549,
											"end": 3559,
											"name": "MLOAD"
										},
										{
											"begin": 3530,
											"end": 3538,
											"name": "DUP4"
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "MLOAD"
										},
										{
											"begin": 3530,
											"end": 3559,
											"name": "EQ"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "JUMPI"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MLOAD"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP2"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MSTORE"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "ADD"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP1"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP1"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "ADD"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP3"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP2"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SUB"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP3"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MSTORE"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP2"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MSTORE"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "ADD"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP1"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH data",
											"value": "E155F5D69798C6205436A388A4F3A5FD42F54147B40F4D63A2C8071FF8A9FEE5"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SWAP2"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "CODECOPY"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "ADD"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SWAP2"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "POP"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "POP"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MLOAD"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP1"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SWAP2"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SUB"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SWAP1"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "REVERT"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "JUMPDEST"
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3663,
											"end": 3671,
											"name": "DUP4"
										},
										{
											"begin": 3663,
											"end": 3678,
											"name": "MLOAD"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MLOAD"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "SWAP1"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP3"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MSTORE"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MUL"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ADD"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP3"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ADD"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MSTORE"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ISZERO"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "JUMPI"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP2"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "SWAP1"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "POP"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "JUMPDEST"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "POP"
										},
										{
											"begin": 3616,
											"end": 3679,
											"name": "SWAP1"
										},
										{
											"begin": 3616,
											"end": 3679,
											"name": "POP"
										},
										{
											"begin": 3695,
											"end": 3704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3708,
											"name": "DUP1"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "SWAP1"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "POP"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "JUMPDEST"
										},
										{
											"begin": 3714,
											"end": 3722,
											"name": "DUP5"
										},
										{
											"begin": 3714,
											"end": 3729,
											"name": "MLOAD"
										},
										{
											"begin": 3710,
											"end": 3711,
											"name": "DUP2"
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "LT"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "ISZERO"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "JUMPI"
										},
										{
											"begin": 3781,
											"end": 3782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "AND"
										},
										{
											"begin": 3758,
											"end": 3766,
											"name": "DUP6"
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "DUP3"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "DUP2"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "MLOAD"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "DUP2"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "LT"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "JUMPI"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "INVALID"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "JUMPDEST"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "MUL"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "ADD"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "ADD"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "MLOAD"
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "AND"
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "EQ"
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "ISZERO"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "JUMPI"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MLOAD"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP2"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MSTORE"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "ADD"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP1"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP1"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "ADD"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP3"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP2"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SUB"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP3"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MSTORE"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "31"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP2"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MSTORE"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "ADD"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP1"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH data",
											"value": "1FBBB69D10332726591DC7EE4A23A94661EDA2BEC5CE6BF93A68249147DC8D9C"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "31"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SWAP2"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "CODECOPY"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "ADD"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SWAP2"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "POP"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "POP"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MLOAD"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP1"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SWAP2"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SUB"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SWAP1"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "REVERT"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "JUMPDEST"
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3883,
											"name": "DUP6"
										},
										{
											"begin": 3884,
											"end": 3885,
											"name": "DUP4"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "DUP2"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "MLOAD"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "DUP2"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "LT"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "JUMPI"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "INVALID"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "JUMPDEST"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "MUL"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "ADD"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "ADD"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "MLOAD"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "DUP2"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "SWAP1"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "DUP2"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "KECCAK256"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3896,
											"name": "DUP7"
										},
										{
											"begin": 3897,
											"end": 3898,
											"name": "DUP4"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "DUP2"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "MLOAD"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "DUP2"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "LT"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "JUMPI"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "INVALID"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "JUMPDEST"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "MUL"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "ADD"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "ADD"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "MLOAD"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "AND"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "AND"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "DUP2"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "SWAP1"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "DUP2"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "KECCAK256"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "SLOAD"
										},
										{
											"begin": 3851,
											"end": 3864,
											"name": "DUP3"
										},
										{
											"begin": 3865,
											"end": 3866,
											"name": "DUP3"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "DUP2"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "MLOAD"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "DUP2"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "LT"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "JUMPI"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "INVALID"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "JUMPDEST"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "MUL"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "ADD"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "ADD"
										},
										{
											"begin": 3851,
											"end": 3900,
											"name": "DUP2"
										},
										{
											"begin": 3851,
											"end": 3900,
											"name": "DUP2"
										},
										{
											"begin": 3851,
											"end": 3900,
											"name": "MSTORE"
										},
										{
											"begin": 3851,
											"end": 3900,
											"name": "POP"
										},
										{
											"begin": 3851,
											"end": 3900,
											"name": "POP"
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "DUP1"
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "ADD"
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "SWAP1"
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "POP"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "JUMP"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "JUMPDEST"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "POP"
										},
										{
											"begin": 3928,
											"end": 3941,
											"name": "DUP1"
										},
										{
											"begin": 3921,
											"end": 3941,
											"name": "SWAP2"
										},
										{
											"begin": 3921,
											"end": 3941,
											"name": "POP"
										},
										{
											"begin": 3921,
											"end": 3941,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMPDEST"
										},
										{
											"begin": 4134,
											"end": 4142,
											"name": "DUP2"
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "AND"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 4118,
											"end": 4128,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "JUMPDEST"
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "AND"
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "EQ"
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "ISZERO"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "JUMPI"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MLOAD"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP2"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MSTORE"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "ADD"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP1"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP1"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "ADD"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP3"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP2"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SUB"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP3"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MSTORE"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP2"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MSTORE"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "ADD"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP1"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH data",
											"value": "DF9806C6DC743DE602E49918A67B580590D69AB768BDB59F977C0A884A91A7C2"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SWAP2"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "CODECOPY"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "ADD"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SWAP2"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "POP"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "POP"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MLOAD"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP1"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SWAP2"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SUB"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SWAP1"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "REVERT"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "JUMPDEST"
										},
										{
											"begin": 4244,
											"end": 4252,
											"name": "DUP1"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4230,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 4218,
											"end": 4228,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 4218,
											"end": 4230,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4218,
											"end": 4230,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 4218,
											"end": 4230,
											"name": "JUMPDEST"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "AND"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "AND"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "DUP2"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "MSTORE"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "ADD"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "SWAP1"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "DUP2"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "MSTORE"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "ADD"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "KECCAK256"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4240,
											"name": "DUP5"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "AND"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "AND"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "DUP2"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "MSTORE"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "ADD"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "SWAP1"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "DUP2"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "MSTORE"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "ADD"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "KECCAK256"
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "EXP"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "DUP2"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SLOAD"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "DUP2"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "MUL"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "NOT"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "AND"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SWAP1"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "DUP4"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "ISZERO"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "ISZERO"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "MUL"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "OR"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SWAP1"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SSTORE"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "POP"
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "DUP2"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "AND"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 4282,
											"end": 4292,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "JUMPDEST"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "AND"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "DUP4"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "MLOAD"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "DUP1"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "DUP3"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "ISZERO"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "ISZERO"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "ISZERO"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "ISZERO"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "DUP2"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "MSTORE"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "ADD"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "SWAP2"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "POP"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "POP"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "MLOAD"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "DUP1"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "SWAP2"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "SUB"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "SWAP1"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "LOG3"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "POP"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "POP"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMPDEST"
										},
										{
											"begin": 4480,
											"end": 4484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4529,
											"name": "DUP5"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "AND"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "AND"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "DUP2"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "MSTORE"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "ADD"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "DUP2"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "MSTORE"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "ADD"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "KECCAK256"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4539,
											"name": "DUP4"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "AND"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "AND"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "DUP2"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "MSTORE"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "ADD"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "DUP2"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "MSTORE"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "ADD"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "KECCAK256"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SLOAD"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "EXP"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "DIV"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "AND"
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "POP"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP3"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP2"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "POP"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "POP"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST"
										},
										{
											"begin": 4843,
											"end": 4844,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "AND"
										},
										{
											"begin": 4829,
											"end": 4831,
											"name": "DUP5"
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "AND"
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "EQ"
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "ISZERO"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "JUMPI"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MLOAD"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP2"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MSTORE"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "ADD"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP1"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP1"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "ADD"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP3"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP2"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SUB"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP3"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MSTORE"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP2"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MSTORE"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "ADD"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP1"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH data",
											"value": "6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SWAP2"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "CODECOPY"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "ADD"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SWAP2"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "POP"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "POP"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MLOAD"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP1"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SWAP2"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SUB"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SWAP1"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "REVERT"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "JUMPDEST"
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 4926,
											"end": 4936,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "JUMPDEST"
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "AND"
										},
										{
											"begin": 4918,
											"end": 4922,
											"name": "DUP6"
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "AND"
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "EQ"
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "DUP1"
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "JUMPI"
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "POP"
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 4959,
											"end": 4963,
											"name": "DUP6"
										},
										{
											"begin": 4965,
											"end": 4977,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 4965,
											"end": 4975,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 4965,
											"end": 4977,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4965,
											"end": 4977,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 4965,
											"end": 4977,
											"name": "JUMPDEST"
										},
										{
											"begin": 4942,
											"end": 4958,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "JUMPDEST"
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "JUMPDEST"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "JUMPI"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MLOAD"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP2"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MSTORE"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "ADD"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP1"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP1"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "ADD"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP3"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP2"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SUB"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP3"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MSTORE"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP2"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MSTORE"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "ADD"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP1"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH data",
											"value": "394AC917F53B95EE25DB2A5DA5874C5B1F0AF95A4FDF34992FF8B19C458F239A"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SWAP2"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "CODECOPY"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "ADD"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SWAP2"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "POP"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "POP"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MLOAD"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP1"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SWAP2"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SUB"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SWAP1"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "REVERT"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "JUMPDEST"
										},
										{
											"begin": 5056,
											"end": 5072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 5075,
											"end": 5085,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "JUMPDEST"
										},
										{
											"begin": 5056,
											"end": 5087,
											"name": "SWAP1"
										},
										{
											"begin": 5056,
											"end": 5087,
											"name": "POP"
										},
										{
											"begin": 5098,
											"end": 5194,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 5119,
											"end": 5127,
											"name": "DUP2"
										},
										{
											"begin": 5129,
											"end": 5133,
											"name": "DUP8"
										},
										{
											"begin": 5135,
											"end": 5137,
											"name": "DUP8"
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 5157,
											"end": 5159,
											"name": "DUP9"
										},
										{
											"begin": 5139,
											"end": 5156,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "JUMPDEST"
										},
										{
											"begin": 5162,
											"end": 5187,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 5180,
											"end": 5186,
											"name": "DUP9"
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 5162,
											"end": 5187,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5162,
											"end": 5187,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 5162,
											"end": 5187,
											"name": "JUMPDEST"
										},
										{
											"begin": 5189,
											"end": 5193,
											"name": "DUP8"
										},
										{
											"begin": 5098,
											"end": 5118,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 5098,
											"end": 5194,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5098,
											"end": 5194,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 5098,
											"end": 5194,
											"name": "JUMPDEST"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 5251,
											"end": 5257,
											"name": "DUP4"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "MLOAD"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "DUP1"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "ADD"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "MSTORE"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "DUP1"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "DUP2"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "MSTORE"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "ADD"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH data",
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "SWAP2"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "CODECOPY"
										},
										{
											"begin": 5227,
											"end": 5236,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5237,
											"end": 5239,
											"name": "DUP9"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "DUP2"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "MSTORE"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "ADD"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "SWAP1"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "DUP2"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "MSTORE"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "ADD"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "KECCAK256"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5245,
											"name": "DUP11"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "AND"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "AND"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "DUP2"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "MSTORE"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "ADD"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "SWAP1"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "DUP2"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "MSTORE"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "ADD"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "KECCAK256"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "SLOAD"
										},
										{
											"begin": 5227,
											"end": 5250,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5227,
											"end": 5250,
											"name": "SWAP1"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "SWAP3"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "SWAP2"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "SWAP1"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "AND"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "JUMPDEST"
										},
										{
											"begin": 5205,
											"end": 5214,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5217,
											"name": "DUP7"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "DUP2"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "MSTORE"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "ADD"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "SWAP1"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "DUP2"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "MSTORE"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "ADD"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "KECCAK256"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5223,
											"name": "DUP9"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "AND"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "AND"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "DUP2"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "MSTORE"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "ADD"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "SWAP1"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "DUP2"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "MSTORE"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "ADD"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "KECCAK256"
										},
										{
											"begin": 5205,
											"end": 5304,
											"name": "DUP2"
										},
										{
											"begin": 5205,
											"end": 5304,
											"name": "SWAP1"
										},
										{
											"begin": 5205,
											"end": 5304,
											"name": "SSTORE"
										},
										{
											"begin": 5205,
											"end": 5304,
											"name": "POP"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 5356,
											"end": 5362,
											"name": "DUP4"
										},
										{
											"begin": 5334,
											"end": 5343,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5346,
											"name": "DUP8"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "DUP2"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "MSTORE"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "ADD"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "SWAP1"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "DUP2"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "MSTORE"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "ADD"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 5347,
											"name": "KECCAK256"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5348,
											"end": 5350,
											"name": "DUP9"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "AND"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "AND"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "DUP2"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "MSTORE"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "ADD"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "SWAP1"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "DUP2"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "MSTORE"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "ADD"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "KECCAK256"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "SLOAD"
										},
										{
											"begin": 5334,
											"end": 5355,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5334,
											"end": 5355,
											"name": "SWAP1"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "SWAP2"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "SWAP1"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "AND"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "JUMPDEST"
										},
										{
											"begin": 5314,
											"end": 5323,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5324,
											"end": 5326,
											"name": "DUP7"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "DUP2"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "MSTORE"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "ADD"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "SWAP1"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "DUP2"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "MSTORE"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "ADD"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "KECCAK256"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5328,
											"end": 5330,
											"name": "DUP8"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "AND"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "AND"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "DUP2"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "MSTORE"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "ADD"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "SWAP1"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "DUP2"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "MSTORE"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "ADD"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "KECCAK256"
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "DUP2"
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "SWAP1"
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "SSTORE"
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "POP"
										},
										{
											"begin": 5410,
											"end": 5412,
											"name": "DUP5"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "AND"
										},
										{
											"begin": 5404,
											"end": 5408,
											"name": "DUP7"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "AND"
										},
										{
											"begin": 5394,
											"end": 5402,
											"name": "DUP3"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "AND"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5414,
											"end": 5416,
											"name": "DUP8"
										},
										{
											"begin": 5418,
											"end": 5424,
											"name": "DUP8"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "MLOAD"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP1"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP4"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP2"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "MSTORE"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "ADD"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP3"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP2"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "MSTORE"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "ADD"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP3"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "POP"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "POP"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "POP"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "MLOAD"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP1"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP2"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SUB"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP1"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "LOG4"
										},
										{
											"begin": 5436,
											"end": 5504,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 5467,
											"end": 5475,
											"name": "DUP2"
										},
										{
											"begin": 5477,
											"end": 5481,
											"name": "DUP8"
										},
										{
											"begin": 5483,
											"end": 5485,
											"name": "DUP8"
										},
										{
											"begin": 5487,
											"end": 5489,
											"name": "DUP8"
										},
										{
											"begin": 5491,
											"end": 5497,
											"name": "DUP8"
										},
										{
											"begin": 5499,
											"end": 5503,
											"name": "DUP8"
										},
										{
											"begin": 5436,
											"end": 5466,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 5436,
											"end": 5504,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5436,
											"end": 5504,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 5436,
											"end": 5504,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "JUMPDEST"
										},
										{
											"begin": 643,
											"end": 658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 677,
											"end": 687,
											"name": "CALLER"
										},
										{
											"begin": 670,
											"end": 687,
											"name": "SWAP1"
										},
										{
											"begin": 670,
											"end": 687,
											"name": "POP"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "SWAP1"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "JUMPDEST"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "POP"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "POP"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "POP"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "POP"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "POP"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "POP"
										},
										{
											"begin": 12296,
											"end": 12523,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMPDEST"
										},
										{
											"begin": 1832,
											"end": 1839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "DUP4"
										},
										{
											"begin": 1859,
											"end": 1860,
											"name": "DUP4"
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "GT"
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "ISZERO"
										},
										{
											"begin": 1867,
											"end": 1879,
											"name": "DUP3"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "AND"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ISZERO"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "EXP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "NOT"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "AND"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP3"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "REVERT"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1890,
											"end": 1899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1907,
											"name": "DUP4"
										},
										{
											"begin": 1902,
											"end": 1903,
											"name": "DUP6"
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "SUB"
										},
										{
											"begin": 1890,
											"end": 1907,
											"name": "SWAP1"
										},
										{
											"begin": 1890,
											"end": 1907,
											"name": "POP"
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "DUP1"
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "SWAP2"
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "POP"
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "POP"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "SWAP4"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "SWAP3"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "POP"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "POP"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "POP"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "JUMPDEST"
										},
										{
											"begin": 932,
											"end": 939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 951,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 967,
											"end": 968,
											"name": "DUP3"
										},
										{
											"begin": 963,
											"end": 964,
											"name": "DUP5"
										},
										{
											"begin": 963,
											"end": 968,
											"name": "ADD"
										},
										{
											"begin": 951,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 951,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 991,
											"end": 992,
											"name": "DUP4"
										},
										{
											"begin": 986,
											"end": 987,
											"name": "DUP2"
										},
										{
											"begin": 986,
											"end": 992,
											"name": "LT"
										},
										{
											"begin": 986,
											"end": 992,
											"name": "ISZERO"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "JUMPI"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MLOAD"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP1"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP1"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SUB"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP1"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "POP"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP2"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "POP"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "POP"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MLOAD"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP1"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP2"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SUB"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "REVERT"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "JUMPDEST"
										},
										{
											"begin": 1042,
											"end": 1043,
											"name": "DUP1"
										},
										{
											"begin": 1035,
											"end": 1043,
											"name": "SWAP2"
										},
										{
											"begin": 1035,
											"end": 1043,
											"name": "POP"
										},
										{
											"begin": 1035,
											"end": 1043,
											"name": "POP"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "SWAP3"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "SWAP2"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "POP"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "POP"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "JUMPDEST"
										},
										{
											"begin": 13520,
											"end": 13535,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 13520,
											"end": 13522,
											"name": "DUP5"
										},
										{
											"begin": 13520,
											"end": 13533,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13520,
											"end": 13533,
											"name": "AND"
										},
										{
											"begin": 13520,
											"end": 13533,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 13520,
											"end": 13535,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13520,
											"end": 13535,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 13520,
											"end": 13535,
											"name": "JUMPDEST"
										},
										{
											"begin": 13516,
											"end": 14048,
											"name": "ISZERO"
										},
										{
											"begin": 13516,
											"end": 14048,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 13516,
											"end": 14048,
											"name": "JUMPI"
										},
										{
											"begin": 13572,
											"end": 13574,
											"name": "DUP4"
										},
										{
											"begin": 13555,
											"end": 13598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13555,
											"end": 13598,
											"name": "AND"
										},
										{
											"begin": 13555,
											"end": 13598,
											"name": "PUSH",
											"value": "BC197C81"
										},
										{
											"begin": 13599,
											"end": 13607,
											"name": "DUP8"
										},
										{
											"begin": 13609,
											"end": 13613,
											"name": "DUP8"
										},
										{
											"begin": 13615,
											"end": 13618,
											"name": "DUP7"
										},
										{
											"begin": 13620,
											"end": 13627,
											"name": "DUP7"
										},
										{
											"begin": 13629,
											"end": 13633,
											"name": "DUP7"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP7"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SHL"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP7"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP6"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP5"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP5"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP8"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MUL"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP5"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP7"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MUL"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP5"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP3"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP6"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP3"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "EXP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "NOT"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP9"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP8"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "GAS"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "CALL"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP3"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP3"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPI"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20,
											"end": 24,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14,
											"end": 25,
											"name": "MLOAD"
										},
										{
											"begin": 6,
											"end": 25,
											"name": "SWAP1"
										},
										{
											"begin": 6,
											"end": 25,
											"name": "POP"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37,
											"end": 41,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 45,
											"name": "MSTORE"
										},
										{
											"begin": 57,
											"end": 58,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "ISZERO"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "JUMPI"
										},
										{
											"begin": 93,
											"end": 97,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 75,
											"end": 91,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 72,
											"end": 98,
											"name": "LT"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "ISZERO"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "JUMPI"
										},
										{
											"begin": 109,
											"end": 110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "SWAP1"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "POP"
										},
										{
											"begin": 111,
											"end": 116,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 111,
											"end": 116,
											"name": "JUMP"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "JUMPDEST"
										},
										{
											"begin": 145,
											"end": 146,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 147,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 173,
											"end": 181,
											"name": "MLOAD"
										},
										{
											"begin": 168,
											"end": 171,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 164,
											"end": 182,
											"name": "SHR"
										},
										{
											"begin": 206,
											"end": 216,
											"name": "PUSH",
											"value": "8C379A0"
										},
										{
											"begin": 201,
											"end": 204,
											"name": "DUP2"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "EQ"
										},
										{
											"begin": 188,
											"end": 190,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 188,
											"end": 190,
											"name": "JUMPI"
										},
										{
											"begin": 229,
											"end": 230,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 221,
											"end": 230,
											"name": "SWAP2"
										},
										{
											"begin": 221,
											"end": 230,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "JUMP"
										},
										{
											"begin": 188,
											"end": 190,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 188,
											"end": 190,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 291,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 272,
											"end": 288,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 268,
											"end": 292,
											"name": "SUB"
										},
										{
											"begin": 265,
											"end": 266,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 259,
											"end": 263,
											"name": "DUP4"
										},
										{
											"begin": 244,
											"end": 293,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 319,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 313,
											"end": 324,
											"name": "MLOAD"
										},
										{
											"begin": 403,
											"end": 419,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 396,
											"end": 400,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 388,
											"end": 394,
											"name": "DUP3"
										},
										{
											"begin": 384,
											"end": 401,
											"name": "ADD"
										},
										{
											"begin": 381,
											"end": 420,
											"name": "GT"
										},
										{
											"begin": 354,
											"end": 372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP3"
										},
										{
											"begin": 343,
											"end": 373,
											"name": "GT"
										},
										{
											"begin": 333,
											"end": 427,
											"name": "OR"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "ISZERO"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "JUMPI"
										},
										{
											"begin": 444,
											"end": 445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 436,
											"end": 445,
											"name": "SWAP3"
										},
										{
											"begin": 436,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "JUMP"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "JUMPDEST"
										},
										{
											"begin": 491,
											"end": 497,
											"name": "DUP1"
										},
										{
											"begin": 485,
											"end": 489,
											"name": "DUP4"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ADD"
										},
										{
											"begin": 524,
											"end": 527,
											"name": "DUP1"
										},
										{
											"begin": 518,
											"end": 528,
											"name": "MLOAD"
										},
										{
											"begin": 548,
											"end": 566,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 540,
											"end": 546,
											"name": "DUP2"
										},
										{
											"begin": 537,
											"end": 567,
											"name": "GT"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "ISZERO"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "JUMPI"
										},
										{
											"begin": 578,
											"end": 579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "SWAP5"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "JUMP"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "JUMPDEST"
										},
										{
											"begin": 624,
											"end": 630,
											"name": "DUP1"
										},
										{
											"begin": 617,
											"end": 621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 612,
											"end": 615,
											"name": "DUP4"
										},
										{
											"begin": 608,
											"end": 622,
											"name": "ADD"
										},
										{
											"begin": 604,
											"end": 631,
											"name": "ADD"
										},
										{
											"begin": 658,
											"end": 674,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 652,
											"end": 656,
											"name": "DUP7"
										},
										{
											"begin": 648,
											"end": 675,
											"name": "ADD"
										},
										{
											"begin": 643,
											"end": 646,
											"name": "DUP2"
										},
										{
											"begin": 640,
											"end": 676,
											"name": "GT"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "ISZERO"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "JUMPI"
										},
										{
											"begin": 687,
											"end": 688,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 679,
											"end": 688,
											"name": "SWAP6"
										},
										{
											"begin": 679,
											"end": 688,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "JUMP"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "JUMPDEST"
										},
										{
											"begin": 739,
											"end": 743,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 735,
											"end": 744,
											"name": "NOT"
										},
										{
											"begin": 728,
											"end": 732,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 723,
											"end": 726,
											"name": "DUP3"
										},
										{
											"begin": 719,
											"end": 733,
											"name": "ADD"
										},
										{
											"begin": 715,
											"end": 745,
											"name": "AND"
										},
										{
											"begin": 709,
											"end": 713,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 702,
											"end": 746,
											"name": "MSTORE"
										},
										{
											"begin": 760,
											"end": 763,
											"name": "DUP3"
										},
										{
											"begin": 752,
											"end": 763,
											"name": "SWAP6"
										},
										{
											"begin": 752,
											"end": 763,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "JUMPDEST"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "DUP1"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPI"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "POP"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMP"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPDEST"
										},
										{
											"begin": 13914,
											"end": 13920,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MSTORE"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP3"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SUB"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP3"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MSTORE"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MSTORE"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "AND"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ISZERO"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "JUMPI"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP3"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SUB"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SUB"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "EXP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SUB"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "NOT"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "AND"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MSTORE"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "JUMPDEST"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP3"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "POP"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP2"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SUB"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP1"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "REVERT"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPDEST"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MLOAD"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP2"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MSTORE"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "ADD"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP1"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP1"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "ADD"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP3"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP2"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SUB"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP3"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MSTORE"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP2"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MSTORE"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "ADD"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP1"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH data",
											"value": "AA752FB1526000E5241602AFFC3D70EF506DA48A27EA57140102B439E655ED"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SWAP2"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "CODECOPY"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "ADD"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SWAP2"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "POP"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "POP"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MLOAD"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP1"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SWAP2"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SUB"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SWAP1"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "REVERT"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPDEST"
										},
										{
											"begin": 13695,
											"end": 13747,
											"name": "PUSH",
											"value": "BC197C81"
										},
										{
											"begin": 13695,
											"end": 13747,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13695,
											"end": 13747,
											"name": "SHL"
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "NOT"
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "AND"
										},
										{
											"begin": 13683,
											"end": 13691,
											"name": "DUP2"
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "NOT"
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "AND"
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "EQ"
										},
										{
											"begin": 13679,
											"end": 13840,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 13679,
											"end": 13840,
											"name": "JUMPI"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MLOAD"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP2"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MSTORE"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "ADD"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP1"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP1"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "ADD"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP3"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP2"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SUB"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP3"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MSTORE"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP2"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MSTORE"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "ADD"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP1"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH data",
											"value": "587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SWAP2"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "CODECOPY"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "ADD"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SWAP2"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "POP"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "POP"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MLOAD"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP1"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SWAP2"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SUB"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SWAP1"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "REVERT"
										},
										{
											"begin": 13679,
											"end": 13840,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 13679,
											"end": 13840,
											"name": "JUMPDEST"
										},
										{
											"begin": 13635,
											"end": 13854,
											"name": "POP"
										},
										{
											"begin": 13516,
											"end": 14048,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 13516,
											"end": 14048,
											"name": "JUMPDEST"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "JUMPDEST"
										},
										{
											"begin": 14126,
											"end": 14142,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14154,
											"end": 14176,
											"name": "DUP1"
										},
										{
											"begin": 14193,
											"end": 14194,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "MLOAD"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "SWAP1"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP3"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "MSTORE"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "MUL"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP3"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "MSTORE"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "ISZERO"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "JUMPI"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP2"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "SWAP1"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "POP"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "JUMPDEST"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "POP"
										},
										{
											"begin": 14154,
											"end": 14195,
											"name": "SWAP1"
										},
										{
											"begin": 14154,
											"end": 14195,
											"name": "POP"
										},
										{
											"begin": 14216,
											"end": 14223,
											"name": "DUP3"
										},
										{
											"begin": 14205,
											"end": 14210,
											"name": "DUP2"
										},
										{
											"begin": 14211,
											"end": 14212,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "DUP2"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "MLOAD"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "DUP2"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "LT"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "JUMPI"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "INVALID"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "JUMPDEST"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "MUL"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "ADD"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "ADD"
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "DUP2"
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "DUP2"
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "MSTORE"
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "POP"
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "POP"
										},
										{
											"begin": 14241,
											"end": 14246,
											"name": "DUP1"
										},
										{
											"begin": 14234,
											"end": 14246,
											"name": "SWAP2"
										},
										{
											"begin": 14234,
											"end": 14246,
											"name": "POP"
										},
										{
											"begin": 14234,
											"end": 14246,
											"name": "POP"
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "SWAP2"
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "SWAP1"
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "POP"
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "JUMPDEST"
										},
										{
											"begin": 12748,
											"end": 12763,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 12748,
											"end": 12750,
											"name": "DUP5"
										},
										{
											"begin": 12748,
											"end": 12761,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12748,
											"end": 12761,
											"name": "AND"
										},
										{
											"begin": 12748,
											"end": 12761,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 12748,
											"end": 12763,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12748,
											"end": 12763,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 12748,
											"end": 12763,
											"name": "JUMPDEST"
										},
										{
											"begin": 12744,
											"end": 13264,
											"name": "ISZERO"
										},
										{
											"begin": 12744,
											"end": 13264,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 12744,
											"end": 13264,
											"name": "JUMPI"
										},
										{
											"begin": 12800,
											"end": 12802,
											"name": "DUP4"
										},
										{
											"begin": 12783,
											"end": 12821,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12783,
											"end": 12821,
											"name": "AND"
										},
										{
											"begin": 12783,
											"end": 12821,
											"name": "PUSH",
											"value": "F23A6E61"
										},
										{
											"begin": 12822,
											"end": 12830,
											"name": "DUP8"
										},
										{
											"begin": 12832,
											"end": 12836,
											"name": "DUP8"
										},
										{
											"begin": 12838,
											"end": 12840,
											"name": "DUP7"
										},
										{
											"begin": 12842,
											"end": 12848,
											"name": "DUP7"
										},
										{
											"begin": 12850,
											"end": 12854,
											"name": "DUP7"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP7"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SHL"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP7"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP6"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP5"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP3"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP3"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPI"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP3"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "EXP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "NOT"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPDEST"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP7"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP8"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "GAS"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "CALL"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP3"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPI"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP3"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP2"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPDEST"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMPI"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20,
											"end": 24,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14,
											"end": 25,
											"name": "MLOAD"
										},
										{
											"begin": 6,
											"end": 25,
											"name": "SWAP1"
										},
										{
											"begin": 6,
											"end": 25,
											"name": "POP"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37,
											"end": 41,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 45,
											"name": "MSTORE"
										},
										{
											"begin": 57,
											"end": 58,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "ISZERO"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "JUMPI"
										},
										{
											"begin": 93,
											"end": 97,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 75,
											"end": 91,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 72,
											"end": 98,
											"name": "LT"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "ISZERO"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "JUMPI"
										},
										{
											"begin": 109,
											"end": 110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "SWAP1"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "POP"
										},
										{
											"begin": 111,
											"end": 116,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 111,
											"end": 116,
											"name": "JUMP"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 69,
											"end": 71,
											"name": "JUMPDEST"
										},
										{
											"begin": 145,
											"end": 146,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 147,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 173,
											"end": 181,
											"name": "MLOAD"
										},
										{
											"begin": 168,
											"end": 171,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 164,
											"end": 182,
											"name": "SHR"
										},
										{
											"begin": 206,
											"end": 216,
											"name": "PUSH",
											"value": "8C379A0"
										},
										{
											"begin": 201,
											"end": 204,
											"name": "DUP2"
										},
										{
											"begin": 198,
											"end": 217,
											"name": "EQ"
										},
										{
											"begin": 188,
											"end": 190,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 188,
											"end": 190,
											"name": "JUMPI"
										},
										{
											"begin": 229,
											"end": 230,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 221,
											"end": 230,
											"name": "SWAP2"
										},
										{
											"begin": 221,
											"end": 230,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "JUMP"
										},
										{
											"begin": 188,
											"end": 190,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 188,
											"end": 190,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 291,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 272,
											"end": 288,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 268,
											"end": 292,
											"name": "SUB"
										},
										{
											"begin": 265,
											"end": 266,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 259,
											"end": 263,
											"name": "DUP4"
										},
										{
											"begin": 244,
											"end": 293,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 319,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 313,
											"end": 324,
											"name": "MLOAD"
										},
										{
											"begin": 403,
											"end": 419,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 396,
											"end": 400,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 388,
											"end": 394,
											"name": "DUP3"
										},
										{
											"begin": 384,
											"end": 401,
											"name": "ADD"
										},
										{
											"begin": 381,
											"end": 420,
											"name": "GT"
										},
										{
											"begin": 354,
											"end": 372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP3"
										},
										{
											"begin": 343,
											"end": 373,
											"name": "GT"
										},
										{
											"begin": 333,
											"end": 427,
											"name": "OR"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "ISZERO"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "JUMPI"
										},
										{
											"begin": 444,
											"end": 445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 436,
											"end": 445,
											"name": "SWAP3"
										},
										{
											"begin": 436,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "POP"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "JUMP"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "JUMPDEST"
										},
										{
											"begin": 491,
											"end": 497,
											"name": "DUP1"
										},
										{
											"begin": 485,
											"end": 489,
											"name": "DUP4"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ADD"
										},
										{
											"begin": 524,
											"end": 527,
											"name": "DUP1"
										},
										{
											"begin": 518,
											"end": 528,
											"name": "MLOAD"
										},
										{
											"begin": 548,
											"end": 566,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 540,
											"end": 546,
											"name": "DUP2"
										},
										{
											"begin": 537,
											"end": 567,
											"name": "GT"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "ISZERO"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "JUMPI"
										},
										{
											"begin": 578,
											"end": 579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "SWAP5"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "JUMP"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "JUMPDEST"
										},
										{
											"begin": 624,
											"end": 630,
											"name": "DUP1"
										},
										{
											"begin": 617,
											"end": 621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 612,
											"end": 615,
											"name": "DUP4"
										},
										{
											"begin": 608,
											"end": 622,
											"name": "ADD"
										},
										{
											"begin": 604,
											"end": 631,
											"name": "ADD"
										},
										{
											"begin": 658,
											"end": 674,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 652,
											"end": 656,
											"name": "DUP7"
										},
										{
											"begin": 648,
											"end": 675,
											"name": "ADD"
										},
										{
											"begin": 643,
											"end": 646,
											"name": "DUP2"
										},
										{
											"begin": 640,
											"end": 676,
											"name": "GT"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "ISZERO"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "JUMPI"
										},
										{
											"begin": 687,
											"end": 688,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 679,
											"end": 688,
											"name": "SWAP6"
										},
										{
											"begin": 679,
											"end": 688,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "JUMP"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 637,
											"end": 639,
											"name": "JUMPDEST"
										},
										{
											"begin": 739,
											"end": 743,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 735,
											"end": 744,
											"name": "NOT"
										},
										{
											"begin": 728,
											"end": 732,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 723,
											"end": 726,
											"name": "DUP3"
										},
										{
											"begin": 719,
											"end": 733,
											"name": "ADD"
										},
										{
											"begin": 715,
											"end": 745,
											"name": "AND"
										},
										{
											"begin": 709,
											"end": 713,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 702,
											"end": 746,
											"name": "MSTORE"
										},
										{
											"begin": 760,
											"end": 763,
											"name": "DUP3"
										},
										{
											"begin": 752,
											"end": 763,
											"name": "SWAP6"
										},
										{
											"begin": 752,
											"end": 763,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 50,
											"end": 780,
											"name": "JUMPDEST"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "DUP1"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMPI"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "POP"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMP"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMPDEST"
										},
										{
											"begin": 13130,
											"end": 13136,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MLOAD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MSTORE"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "ADD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "ADD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP3"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SUB"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP3"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MSTORE"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP4"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MLOAD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MSTORE"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "ADD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MLOAD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "ADD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP4"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "ADD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "AND"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "ISZERO"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "JUMPI"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP3"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SUB"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MLOAD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP4"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SUB"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "EXP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SUB"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "NOT"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "AND"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MSTORE"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "ADD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "JUMPDEST"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP3"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "POP"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "MLOAD"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "DUP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP2"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SUB"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "SWAP1"
										},
										{
											"begin": 13123,
											"end": 13137,
											"name": "REVERT"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMPDEST"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "MLOAD"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP2"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "MSTORE"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "ADD"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP1"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP1"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "ADD"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP3"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP2"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "SUB"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP3"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "MSTORE"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP2"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "MSTORE"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "ADD"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP1"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH data",
											"value": "AA752FB1526000E5241602AFFC3D70EF506DA48A27EA57140102B439E655ED"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "SWAP2"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "CODECOPY"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "ADD"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "SWAP2"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "POP"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "POP"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "MLOAD"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "DUP1"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "SWAP2"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "SUB"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "SWAP1"
										},
										{
											"begin": 13177,
											"end": 13239,
											"name": "REVERT"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMPDEST"
										},
										{
											"begin": 12916,
											"end": 12963,
											"name": "PUSH",
											"value": "F23A6E61"
										},
										{
											"begin": 12916,
											"end": 12963,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12916,
											"end": 12963,
											"name": "SHL"
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "NOT"
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "AND"
										},
										{
											"begin": 12904,
											"end": 12912,
											"name": "DUP2"
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "NOT"
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "AND"
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "EQ"
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "JUMPI"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MLOAD"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP2"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MSTORE"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "ADD"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP1"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP1"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "ADD"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP3"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP2"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SUB"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP3"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MSTORE"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP2"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MSTORE"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "ADD"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP1"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH data",
											"value": "587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SWAP2"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "CODECOPY"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "ADD"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SWAP2"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "POP"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "POP"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MLOAD"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP1"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SWAP2"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SUB"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SWAP1"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "REVERT"
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "JUMPDEST"
										},
										{
											"begin": 12856,
											"end": 13070,
											"name": "POP"
										},
										{
											"begin": 12744,
											"end": 13264,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 12744,
											"end": 13264,
											"name": "JUMPDEST"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "POP"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "POP"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "POP"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "POP"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "POP"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "POP"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMPDEST"
										},
										{
											"begin": 778,
											"end": 782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 981,
											"end": 993,
											"name": "DUP1"
										},
										{
											"begin": 1090,
											"end": 1097,
											"name": "DUP3"
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1070,
											"end": 1098,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1098,
											"name": "POP"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1120,
											"name": "DUP2"
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "GT"
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "SWAP2"
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "POP"
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "POP"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "SWAP2"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "SWAP1"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "POP"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1F4DE6A436172E7F7B1540476031CB037FC18EDE9CC346A56DA1697CBD352AA9": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
										"1FBBB69D10332726591DC7EE4A23A94661EDA2BEC5CE6BF93A68249147DC8D9C": "455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
										"394AC917F53B95EE25DB2A5DA5874C5B1F0AF95A4FDF34992FF8B19C458F239A": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
										"587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
										"6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
										"70A41C66829F5508884CDA9EF3D2F72551B34F23E4035BE97941681123D2D686": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
										"8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
										"AA752FB1526000E5241602AFFC3D70EF506DA48A27EA57140102B439E655ED": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
										"DF9806C6DC743DE602E49918A67B580590D69AB768BDB59F977C0A884A91A7C2": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
										"E155F5D69798C6205436A388A4F3A5FD42F54147B40F4D63A2C8071FF8A9FEE5": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
										"E909E0C9A8F96B4F9AF03B716811ECE20BEB070BE416893ED1D50619B5930807": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368"
									}
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 * _Available since v3.1._\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.     * Requirements:     * - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}.     * Requirements:     * - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}.     * This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74\",\"urls\":[\"bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a\",\"dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xcb4d489d714897ac44bfd868ac61850cad221177142e2ff7b77474dbbcd8632d\",\"urls\":[\"bzz-raw://df97fe73917806c90620792dadea71599267ea958e398f746effff25b80cdbfd\",\"dweb:/ipfs/Qmbk2RXS1kctvfQ9N9bHuMU7vLGEjzvUvuDddQmxzhBySr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\",\"urls\":[\"bzz-raw://ea5c8207b135b93afb8cce651a26b1606d0c6e967edc06091e261de7475dace5\",\"dweb:/ipfs/QmXWQHU45hJWmuCiWKjR3tsVh11LwkNEW6fs2Yhvd41Q7a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xcf122601a1c4816aad0efe37e4c8a9eb744fedd150076363bf54c6641f1332a1\",\"urls\":[\"bzz-raw://cafba550cfbd0fb873282581a4a1186eab3bff1cfd1dcfbf577d4a5b418528ab\",\"dweb:/ipfs/QmdQSLFUmkaf96nzjvJ6eqBcWoJrEd1z36Mh8PPctrbgDb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x0bc1d0b8fa3b262a6fb98b88dceab8b3348903b95dcc5909b9074fb19a3d2da5\",\"urls\":[\"bzz-raw://a1a2d7b10e484742885d2042f66e8150bfc143a08756a269fb207c4c553b55aa\",\"dweb:/ipfs/Qmbhi8dodhRZS6mqL2T8WfMzmEwPzgSwpuGVHtKF5F6QDp\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 110,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							},
							{
								"astId": 377,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 383,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 385,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. * _Available since v3.1._",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`.     * Requirements:     * - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.     * Requirements:     * - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens.     * See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.     * Emits a {TransferBatch} event.     * Requirements:     * - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`.     * Emits a {TransferSingle} event.     * Requirements:     * - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,     * Emits an {ApprovalForAll} event.     * Requirements:     * - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created.     * This function call must use less than 30 000 gas."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. * _Available since v3.1._\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`.     * Requirements:     * - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.     * Requirements:     * - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens.     * See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.     * Emits a {TransferBatch} event.     * Requirements:     * - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`.     * Emits a {TransferSingle} event.     * Requirements:     * - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,     * Emits an {ApprovalForAll} event.     * Requirements:     * - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created.     * This function call must use less than 30 000 gas.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\",\"urls\":[\"bzz-raw://ea5c8207b135b93afb8cce651a26b1606d0c6e967edc06091e261de7475dace5\",\"dweb:/ipfs/QmXWQHU45hJWmuCiWKjR3tsVh11LwkNEW6fs2Yhvd41Q7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. * _Available since v3.1._",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`.     * Requirements:     * - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.     * Requirements:     * - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens.     * See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.     * Emits a {TransferBatch} event.     * Requirements:     * - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`.     * Emits a {TransferSingle} event.     * Requirements:     * - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,     * Emits an {ApprovalForAll} event.     * Requirements:     * - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created.     * This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`.     * If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. * _Available since v3.1._\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`.     * Requirements:     * - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.     * Requirements:     * - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens.     * See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.     * Emits a {TransferBatch} event.     * Requirements:     * - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`.     * Emits a {TransferSingle} event.     * Requirements:     * - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,     * Emits an {ApprovalForAll} event.     * Requirements:     * - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created.     * This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`.     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\",\"urls\":[\"bzz-raw://ea5c8207b135b93afb8cce651a26b1606d0c6e967edc06091e261de7475dace5\",\"dweb:/ipfs/QmXWQHU45hJWmuCiWKjR3tsVh11LwkNEW6fs2Yhvd41Q7a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xcf122601a1c4816aad0efe37e4c8a9eb744fedd150076363bf54c6641f1332a1\",\"urls\":[\"bzz-raw://cafba550cfbd0fb873282581a4a1186eab3bff1cfd1dcfbf577d4a5b418528ab\",\"dweb:/ipfs/QmdQSLFUmkaf96nzjvJ6eqBcWoJrEd1z36Mh8PPctrbgDb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created.     * This function call must use less than 30 000 gas."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created.     * This function call must use less than 30 000 gas.\"}}},\"userdoc\":{\"methods\":{},\"notice\":\"_Available since v3.1._\"}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x0bc1d0b8fa3b262a6fb98b88dceab8b3348903b95dcc5909b9074fb19a3d2da5\",\"urls\":[\"bzz-raw://a1a2d7b10e484742885d2042f66e8150bfc143a08756a269fb207c4c553b55aa\",\"dweb:/ipfs/Qmbhi8dodhRZS6mqL2T8WfMzmEwPzgSwpuGVHtKF5F6QDp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {},
						"notice": "_Available since v3.1._"
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":126:5880  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":126:5880  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220797ba04a1e7dc26400fcf67e722377262765d86964f2048a64911bd7954f5cd764736f6c63430006020033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220797ba04a1e7dc26400fcf67e722377262765d86964f2048a64911bd7954f5cd764736f6c63430006020033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x7BA04A1E7DC26400FCF67E722377262765D86964F2048A64911B 0xD7 SWAP6 0x4F 0x5C 0xD7 PUSH5 0x736F6C6343 STOP MOD MUL STOP CALLER ",
							"sourceMap": "126:5754:9:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220797ba04a1e7dc26400fcf67e722377262765d86964f2048a64911bd7954f5cd764736f6c63430006020033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x7BA04A1E7DC26400FCF67E722377262765D86964F2048A64911B 0xD7 SWAP6 0x4F 0x5C 0xD7 PUSH5 0x736F6C6343 STOP MOD MUL STOP CALLER ",
							"sourceMap": "126:5754:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220797ba04a1e7dc26400fcf67e722377262765d86964f2048a64911bd7954f5cd764736f6c63430006020033",
									".code": [
										{
											"begin": 126,
											"end": 5880,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "ADDRESS"
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "EQ"
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "MSTORE"
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "DUP1"
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"ERC1155.sol": {
				"ast": {
					"absolutePath": "ERC1155.sol",
					"exportedSymbols": {
						"GameItems": [
							75
						]
					},
					"id": 76,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "61:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 76,
							"sourceUnit": 1355,
							"src": "88:112:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 3,
										"name": "ERC1155",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1354,
										"src": "226:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC1155_$1354",
											"typeString": "contract ERC1155"
										}
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "226:7:0"
								}
							],
							"contractDependencies": [
								98,
								151,
								161,
								1354,
								1465,
								1478
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 75,
							"linearizedBaseContracts": [
								75,
								1354,
								1478,
								1465,
								151,
								161,
								98
							],
							"name": "GameItems",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "3e4bee38",
									"id": 7,
									"name": "GOLD",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 75,
									"src": "241:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "241:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "272:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e3e55f08",
									"id": 10,
									"name": "SILVER",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 75,
									"src": "280:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "280:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "313:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d562e204",
									"id": 13,
									"name": "THORS_HAMMER",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 75,
									"src": "321:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "321:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "360:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "13dc989f",
									"id": 16,
									"name": "SWORD",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 75,
									"src": "368:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 14,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "368:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "33",
										"id": 15,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "400:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5b2725ed",
									"id": 19,
									"name": "SHIELD",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 75,
									"src": "408:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 17,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "408:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "34",
										"id": 18,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "441:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "547:244:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 26,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "564:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "564:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 28,
															"name": "GOLD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "576:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "582:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3138",
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "586:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "582:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "590:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 25,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "558:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "558:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "558:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 36,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "610:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "610:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 38,
															"name": "SILVER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "622:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "630:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3237",
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_27_by_1",
																	"typeString": "int_const 27"
																},
																"value": "27"
															},
															"src": "630:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "638:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 35,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "604:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "604:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "604:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 46,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "658:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "658:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 48,
															"name": "THORS_HAMMER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "670:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "684:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "687:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 45,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "652:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "652:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "652:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 54,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "707:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "707:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 56,
															"name": "SWORD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "726:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "39",
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "730:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9_by_1",
																	"typeString": "int_const 9"
																},
																"value": "9"
															},
															"src": "726:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "733:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 53,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "701:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "701:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "701:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 64,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "753:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "753:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 66,
															"name": "SHIELD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "765:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "773:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "39",
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "777:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9_by_1",
																	"typeString": "int_const 9"
																},
																"value": "9"
															},
															"src": "773:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "780:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 63,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "747:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "747:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "747:36:0"
											}
										]
									},
									"documentation": null,
									"id": 74,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "697066733a2f2f516d5a394a513477513739376b39367350676333314e46563851664a71413277577068743774687a5569335035442f7b69647d2e6a736f6e",
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "480:65:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_3fe3d9245796ae3f66210b6549bb463a5ed2dd5deb86674e732053186f957f6f",
														"typeString": "literal_string \"ipfs://QmZ9JQ4wQ797k96sPgc31NFV8QfJqA2wWpht7thzUi3P5D/{id}.json\""
													},
													"value": "ipfs://QmZ9JQ4wQ797k96sPgc31NFV8QfJqA2wWpht7thzUi3P5D/{id}.json"
												}
											],
											"id": 23,
											"modifierName": {
												"argumentTypes": null,
												"id": 21,
												"name": "ERC1155",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1354,
												"src": "472:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC1155_$1354_$",
													"typeString": "type(contract ERC1155)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "472:74:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "547:0:0"
									},
									"scope": 75,
									"src": "451:340:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 76,
							"src": "204:590:0"
						}
					],
					"src": "61:735:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol",
					"exportedSymbols": {
						"Context": [
							98
						]
					},
					"id": 99,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 77,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 98,
							"linearizedBaseContracts": [
								98
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "660:34:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 82,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "677:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "677:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 81,
												"id": 84,
												"nodeType": "Return",
												"src": "670:17:1"
											}
										]
									},
									"documentation": null,
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:2:1"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 86,
												"src": "643:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "642:17:1"
									},
									"scope": 98,
									"src": "590:104:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "765:165:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 91,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "775:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$98",
														"typeString": "contract Context"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "775:4:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 93,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "915:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "915:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 90,
												"id": 95,
												"nodeType": "Return",
												"src": "908:15:1"
											}
										]
									},
									"documentation": null,
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "717:2:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 97,
												"src": "751:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 88,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "751:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "750:14:1"
									},
									"scope": 98,
									"src": "700:230:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 99,
							"src": "558:374:1"
						}
					],
					"src": "33:900:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							151
						]
					},
					"id": 152,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 100,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 101,
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 162,
							"src": "58:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 102,
										"name": "IERC165",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 161,
										"src": "274:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC165_$161",
											"typeString": "contract IERC165"
										}
									},
									"id": 103,
									"nodeType": "InheritanceSpecifier",
									"src": "274:7:2"
								}
							],
							"contractDependencies": [
								161
							],
							"contractKind": "contract",
							"documentation": "@dev Implementation of the {IERC165} interface.\n * Contracts may inherit from this and call {_registerInterface} to declare\ntheir support of an interface.",
							"fullyImplemented": true,
							"id": 151,
							"linearizedBaseContracts": [
								151,
								161
							],
							"name": "ERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 106,
									"name": "_INTERFACE_ID_ERC165",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 151,
									"src": "371:57:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 104,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "371:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783031666663396137",
										"id": 105,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "418:10:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33540519_by_1",
											"typeString": "int_const 33540519"
										},
										"value": "0x01ffc9a7"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 110,
									"name": "_supportedInterfaces",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 151,
									"src": "522:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
										"typeString": "mapping(bytes4 => bool)"
									},
									"typeName": {
										"id": 109,
										"keyType": {
											"id": 107,
											"name": "bytes4",
											"nodeType": "ElementaryTypeName",
											"src": "530:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											}
										},
										"nodeType": "Mapping",
										"src": "522:23:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
											"typeString": "mapping(bytes4 => bool)"
										},
										"valueType": {
											"id": 108,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "540:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "605:193:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 114,
															"name": "_INTERFACE_ID_ERC165",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "770:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 113,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "751:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "751:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "751:40:2"
											}
										]
									},
									"documentation": null,
									"id": 118,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:2:2"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:0:2"
									},
									"scope": 151,
									"src": "581:217:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										160
									],
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1031:57:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 126,
														"name": "_supportedInterfaces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "1048:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
															"typeString": "mapping(bytes4 => bool)"
														}
													},
													"id": 128,
													"indexExpression": {
														"argumentTypes": null,
														"id": 127,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1069:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1048:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 125,
												"id": 129,
												"nodeType": "Return",
												"src": "1041:40:2"
											}
										]
									},
									"documentation": "@dev See {IERC165-supportsInterface}.\n     * Time complexity O(1), guaranteed to always use less than 30 000 gas.",
									"functionSelector": "01ffc9a7",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 122,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1007:8:2"
									},
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "975:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 119,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "975:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "974:20:2"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1025:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1025:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1024:6:2"
									},
									"scope": 151,
									"src": "948:140:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "1547:133:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 137,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "1565:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30786666666666666666",
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1580:10:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967295_by_1",
																	"typeString": "int_const 4294967295"
																},
																"value": "0xffffffff"
															},
															"src": "1565:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552433136353a20696e76616c696420696e74657266616365206964",
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1592:30:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
																"typeString": "literal_string \"ERC165: invalid interface id\""
															},
															"value": "ERC165: invalid interface id"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
																"typeString": "literal_string \"ERC165: invalid interface id\""
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1557:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1557:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1557:66:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 143,
															"name": "_supportedInterfaces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "1633:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
																"typeString": "mapping(bytes4 => bool)"
															}
														},
														"id": 145,
														"indexExpression": {
															"argumentTypes": null,
															"id": 144,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "1654:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1633:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1669:4:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1633:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "1633:40:2"
											}
										]
									},
									"documentation": "@dev Registers the contract as an implementer of the interface defined by\n`interfaceId`. Support of the actual ERC165 interface is automatic and\nregistering its interface id is not required.\n     * See {IERC165-supportsInterface}.\n     * Requirements:\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_registerInterface",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "1510:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 132,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1510:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1509:20:2"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1547:0:2"
									},
									"scope": 151,
									"src": "1482:198:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 152,
							"src": "255:1427:2"
						}
					],
					"src": "33:1650:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							161
						]
					},
					"id": 162,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC165 standard, as defined in the\nhttps://eips.ethereum.org/EIPS/eip-165[EIP].\n * Implementers can declare support of contract interfaces, which can then be\nqueried by others ({ERC165Checker}).\n * For an implementation, see {ERC165}.",
							"fullyImplemented": false,
							"id": 161,
							"linearizedBaseContracts": [
								161
							],
							"name": "IERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns true if this contract implements the interface defined by\n`interfaceId`. See the corresponding\nhttps://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\nto learn more about how these ids are created.\n     * This function call must use less than 30 000 gas.",
									"functionSelector": "01ffc9a7",
									"id": 160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 160,
												"src": "734:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 154,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "734:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "733:20:3"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 160,
												"src": "777:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "776:6:3"
									},
									"scope": 161,
									"src": "707:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 162,
							"src": "338:447:3"
						}
					],
					"src": "33:753:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							348
						]
					},
					"id": 349,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 163,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 348,
							"linearizedBaseContracts": [
								348
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "941:109:4",
										"statements": [
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 187,
														"src": "951:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "951:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "963:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "967:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "963:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "951:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 179,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "986:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 180,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "991:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "986:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "994:29:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 178,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "978:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "978:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "978:46:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 185,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "1042:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 171,
												"id": 186,
												"nodeType": "Return",
												"src": "1035:8:4"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n     * - Addition cannot overflow.",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 188,
												"src": "887:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 188,
												"src": "898:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "886:22:4"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 188,
												"src": "932:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "931:9:4"
									},
									"scope": 348,
									"src": "874:176:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "1388:67:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 198,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "1409:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 199,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1412:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1415:32:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 197,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															204,
															231
														],
														"referencedDeclaration": 231,
														"src": "1405:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1405:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 196,
												"id": 202,
												"nodeType": "Return",
												"src": "1398:50:4"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n     * - Subtraction cannot overflow.",
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 204,
												"src": "1334:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 204,
												"src": "1345:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1333:22:4"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 204,
												"src": "1379:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1378:9:4"
									},
									"scope": 348,
									"src": "1321:134:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "1841:92:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 216,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "1859:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 217,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "1864:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1859:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 219,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "1867:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1851:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1851:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "1851:29:4"
											},
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 230,
														"src": "1890:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 222,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1890:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 224,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "1902:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 225,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "1906:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1902:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1890:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 228,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 223,
													"src": "1925:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 229,
												"nodeType": "Return",
												"src": "1918:8:4"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n     * - Subtraction cannot overflow.",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "1759:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "1770:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "1781:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 209,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1781:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1758:50:4"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "1832:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1831:9:4"
									},
									"scope": 348,
									"src": "1746:187:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2247:392:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 240,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "2479:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2484:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2479:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 246,
												"nodeType": "IfStatement",
												"src": "2475:45:4",
												"trueBody": {
													"id": 245,
													"nodeType": "Block",
													"src": "2487:33:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2508:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 239,
															"id": 244,
															"nodeType": "Return",
															"src": "2501:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 264,
														"src": "2530:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 247,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2530:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 252,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 249,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "2542:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 250,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "2546:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2542:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2530:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 254,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "2565:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 255,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "2569:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2565:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 257,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "2574:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2565:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:35:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2557:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2557:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2557:56:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 262,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 248,
													"src": "2631:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 239,
												"id": 263,
												"nodeType": "Return",
												"src": "2624:8:4"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n     * - Multiplication cannot overflow.",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 265,
												"src": "2193:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2193:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 265,
												"src": "2204:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2192:22:4"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 265,
												"src": "2238:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2237:9:4"
									},
									"scope": 348,
									"src": "2180:459:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "3168:63:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 275,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "3189:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 276,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "3192:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3195:28:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 274,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															281,
															308
														],
														"referencedDeclaration": 308,
														"src": "3185:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3185:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 273,
												"id": 279,
												"nodeType": "Return",
												"src": "3178:46:4"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "3114:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "3125:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3125:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3113:22:4"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "3159:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3159:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3158:9:4"
									},
									"scope": 348,
									"src": "3101:130:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "3808:177:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 293,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "3826:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3830:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3826:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 296,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "3833:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3818:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "3818:28:4"
											},
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 307,
														"src": "3856:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 299,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3856:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 304,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 301,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "3868:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 302,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "3872:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3868:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3856:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 305,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 300,
													"src": "3977:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 291,
												"id": 306,
												"nodeType": "Return",
												"src": "3970:8:4"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "3726:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3726:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "3737:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "3748:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 286,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3748:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3725:50:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "3799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3798:9:4"
									},
									"scope": 348,
									"src": "3713:272:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "4503:61:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 318,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "4524:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 319,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "4527:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4530:26:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 317,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															324,
															347
														],
														"referencedDeclaration": 347,
														"src": "4520:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4520:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 316,
												"id": 322,
												"nodeType": "Return",
												"src": "4513:44:4"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 324,
												"src": "4449:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4449:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 324,
												"src": "4460:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4460:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4448:22:4"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 324,
												"src": "4494:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4493:9:4"
									},
									"scope": 348,
									"src": "4436:128:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "5130:68:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 336,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "5148:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5153:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5148:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 339,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5156:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5140:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5140:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "5140:29:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 342,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "5186:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 343,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "5190:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5186:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 334,
												"id": 345,
												"nodeType": "Return",
												"src": "5179:12:4"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "5048:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "5059:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5059:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "5070:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 329,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5070:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5047:50:4"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "5121:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5120:9:4"
									},
									"scope": 348,
									"src": "5035:163:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 349,
							"src": "622:4578:4"
						}
					],
					"src": "33:5168:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"ERC1155": [
							1354
						]
					},
					"id": 1355,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 350,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 351,
							"nodeType": "ImportDirective",
							"scope": 1355,
							"sourceUnit": 1466,
							"src": "58:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155MetadataURI.sol",
							"file": "./IERC1155MetadataURI.sol",
							"id": 352,
							"nodeType": "ImportDirective",
							"scope": 1355,
							"sourceUnit": 1479,
							"src": "83:35:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 353,
							"nodeType": "ImportDirective",
							"scope": 1355,
							"sourceUnit": 1517,
							"src": "119:32:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/GSN/Context.sol",
							"file": "../../GSN/Context.sol",
							"id": 354,
							"nodeType": "ImportDirective",
							"scope": 1355,
							"sourceUnit": 99,
							"src": "152:31:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/ERC165.sol",
							"file": "../../introspection/ERC165.sol",
							"id": 355,
							"nodeType": "ImportDirective",
							"scope": 1355,
							"sourceUnit": 152,
							"src": "184:40:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 356,
							"nodeType": "ImportDirective",
							"scope": 1355,
							"sourceUnit": 349,
							"src": "225:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 357,
							"nodeType": "ImportDirective",
							"scope": 1355,
							"sourceUnit": 1705,
							"src": "259:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 358,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 98,
										"src": "532:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$98",
											"typeString": "contract Context"
										}
									},
									"id": 359,
									"nodeType": "InheritanceSpecifier",
									"src": "532:7:5"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 360,
										"name": "ERC165",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 151,
										"src": "541:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC165_$151",
											"typeString": "contract ERC165"
										}
									},
									"id": 361,
									"nodeType": "InheritanceSpecifier",
									"src": "541:6:5"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 362,
										"name": "IERC1155",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1465,
										"src": "549:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155_$1465",
											"typeString": "contract IERC1155"
										}
									},
									"id": 363,
									"nodeType": "InheritanceSpecifier",
									"src": "549:8:5"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 364,
										"name": "IERC1155MetadataURI",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1478,
										"src": "559:19:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155MetadataURI_$1478",
											"typeString": "contract IERC1155MetadataURI"
										}
									},
									"id": 365,
									"nodeType": "InheritanceSpecifier",
									"src": "559:19:5"
								}
							],
							"contractDependencies": [
								98,
								151,
								161,
								1465,
								1478
							],
							"contractKind": "contract",
							"documentation": " * @dev Implementation of the basic standard multi-token.\nSee https://eips.ethereum.org/EIPS/eip-1155\nOriginally based on code by Enjin: https://github.com/enjin/erc-1155\n * _Available since v3.1._",
							"fullyImplemented": true,
							"id": 1354,
							"linearizedBaseContracts": [
								1354,
								1478,
								1465,
								151,
								161,
								98
							],
							"name": "ERC1155",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 368,
									"libraryName": {
										"contractScope": null,
										"id": 366,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 348,
										"src": "591:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$348",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "585:27:5",
									"typeName": {
										"id": 367,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "604:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 371,
									"libraryName": {
										"contractScope": null,
										"id": 369,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1704,
										"src": "623:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1704",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "617:26:5",
									"typeName": {
										"id": 370,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "635:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 377,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1354,
									"src": "698:66:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 376,
										"keyType": {
											"id": 372,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "707:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "698:48:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 375,
											"keyType": {
												"id": 373,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "726:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "718:27:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 374,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "737:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 383,
									"name": "_operatorApprovals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1354,
									"src": "821:72:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 382,
										"keyType": {
											"id": 378,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "830:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "821:45:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 381,
											"keyType": {
												"id": 379,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "849:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "841:24:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 380,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "860:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 385,
									"name": "_uri",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1354,
									"src": "1014:19:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 384,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1014:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 388,
									"name": "_INTERFACE_ID_ERC1155",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1354,
									"src": "1706:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 386,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "1706:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786439623637613236",
										"id": 387,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1754:10:5",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3652614694_by_1",
											"typeString": "int_const 3652614694"
										},
										"value": "0xd9b67a26"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 391,
									"name": "_INTERFACE_ID_ERC1155_METADATA_URI",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1354,
									"src": "1845:71:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 389,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "1845:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783065383933343163",
										"id": 390,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1906:10:5",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_243872796_by_1",
											"typeString": "int_const 243872796"
										},
										"value": "0x0e89341c"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "2005:313:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 397,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "2023:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 396,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "2015:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2015:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "2015:12:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 401,
															"name": "_INTERFACE_ID_ERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "2135:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 400,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "2116:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2116:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "2116:41:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 405,
															"name": "_INTERFACE_ID_ERC1155_METADATA_URI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2276:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 404,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "2257:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2257:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "2257:54:5"
											}
										]
									},
									"documentation": "@dev See {_setURI}.",
									"id": 409,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"name": "uri",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 409,
												"src": "1979:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 392,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1979:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1978:19:5"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2005:0:5"
									},
									"scope": 1354,
									"src": "1966:352:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1477
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "2786:28:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 417,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 385,
													"src": "2803:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 416,
												"id": 418,
												"nodeType": "Return",
												"src": "2796:11:5"
											}
										]
									},
									"documentation": "@dev See {IERC1155MetadataURI-uri}.\n     * This implementation returns the same URI for *all* token types. It relies\non the token type ID substitution mechanism\nhttps://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     * Clients calling this function must replace the `\\{id\\}` substring with the\nactual token type ID.",
									"functionSelector": "0e89341c",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 413,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2753:8:5"
									},
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 420,
												"src": "2730:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2729:9:5"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 420,
												"src": "2771:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 414,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2771:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2770:15:5"
									},
									"scope": 1354,
									"src": "2717:97:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1408
									],
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "3043:133:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 431,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "3061:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3080:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3072:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 432,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3072:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3072:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3061:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3084:45:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3053:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3053:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "3053:77:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 440,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3147:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 442,
														"indexExpression": {
															"argumentTypes": null,
															"id": 441,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "3157:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3147:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 444,
													"indexExpression": {
														"argumentTypes": null,
														"id": 443,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "3161:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3147:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 429,
												"id": 445,
												"nodeType": "Return",
												"src": "3140:29:5"
											}
										]
									},
									"documentation": "@dev See {IERC1155-balanceOf}.\n     * Requirements:\n     * - `account` cannot be the zero address.",
									"functionSelector": "00fdd58e",
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 426,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3016:8:5"
									},
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "2975:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2975:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "2992:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2992:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2974:29:5"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "3034:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3034:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3033:9:5"
									},
									"scope": 1354,
									"src": "2956:220:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1420
									],
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3512:436:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 461,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "3530:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3530:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 463,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "3549:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3549:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3530:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3561:43:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3522:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3522:83:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "3522:83:5"
											},
											{
												"assignments": [
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"name": "batchBalances",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 522,
														"src": "3616:30:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 471,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3616:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 472,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "3616:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 477,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3663:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3663:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3649:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 474,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3653:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 475,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "3653:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3649:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3616:63:5"
											},
											{
												"body": {
													"id": 518,
													"nodeType": "Block",
													"src": "3736:175:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 493,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 450,
																				"src": "3758:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 495,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 494,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 482,
																				"src": "3767:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3758:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 498,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3781:1:5",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 497,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3773:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 496,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3773:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3773:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"src": "3758:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3785:51:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c",
																			"typeString": "literal_string \"ERC1155: batch balance query for the zero address\""
																		},
																		"value": "ERC1155: batch balance query for the zero address"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c",
																			"typeString": "literal_string \"ERC1155: batch balance query for the zero address\""
																		}
																	],
																	"id": 492,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3750:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3750:87:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "ExpressionStatement",
															"src": "3750:87:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 504,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 473,
																		"src": "3851:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 506,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 505,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "3865:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3851:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 507,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 377,
																			"src": "3870:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 511,
																		"indexExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 508,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 453,
																				"src": "3880:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 510,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 509,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 482,
																				"src": "3884:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3880:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3870:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 515,
																	"indexExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 512,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 450,
																			"src": "3888:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 514,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 513,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 482,
																			"src": "3897:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3888:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3870:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3851:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 517,
															"nodeType": "ExpressionStatement",
															"src": "3851:49:5"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 485,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "3710:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 486,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "3714:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3714:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3710:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 519,
												"initializationExpression": {
													"assignments": [
														482
													],
													"declarations": [
														{
															"constant": false,
															"id": 482,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 519,
															"src": "3695:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 481,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3695:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 484,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3707:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3695:13:5"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3731:3:5",
														"subExpression": {
															"argumentTypes": null,
															"id": 489,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3733:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 491,
													"nodeType": "ExpressionStatement",
													"src": "3731:3:5"
												},
												"nodeType": "ForStatement",
												"src": "3690:221:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 520,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 473,
													"src": "3928:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 459,
												"id": 521,
												"nodeType": "Return",
												"src": "3921:20:5"
											}
										]
									},
									"documentation": "@dev See {IERC1155-balanceOfBatch}.\n     * Requirements:\n     * - `accounts` and `ids` must have the same length.",
									"functionSelector": "4e1273f4",
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 455,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3464:8:5"
									},
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"name": "accounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "3366:25:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 448,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3366:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 449,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3366:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "3401:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 451,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3401:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 452,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3401:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3356:71:5"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "3490:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 456,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3490:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 457,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3490:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3489:18:5"
									},
									"scope": 1354,
									"src": "3333:615:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1427
									],
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "4100:222:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 532,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "4118:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4118:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 534,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "4134:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4118:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4144:43:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4110:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4110:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "4110:78:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 539,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "4199:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 543,
															"indexExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 540,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "4218:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4218:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4199:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 544,
														"indexExpression": {
															"argumentTypes": null,
															"id": 542,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4232:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4199:42:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 545,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "4244:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4199:53:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "4199:53:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 549,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "4282:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4282:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 551,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4296:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 552,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "4306:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 548,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "4267:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4267:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "EmitStatement",
												"src": "4262:53:5"
											}
										]
									},
									"documentation": "@dev See {IERC1155-setApprovalForAll}.",
									"functionSelector": "a22cb465",
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 529,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4091:8:5"
									},
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 556,
												"src": "4043:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4043:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 556,
												"src": "4061:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4061:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4042:33:5"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4100:0:5"
									},
									"scope": 1354,
									"src": "4016:306:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1436
									],
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "4486:61:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 566,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "4503:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 568,
														"indexExpression": {
															"argumentTypes": null,
															"id": 567,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "4522:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4503:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 570,
													"indexExpression": {
														"argumentTypes": null,
														"id": 569,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "4531:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4503:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 565,
												"id": 571,
												"nodeType": "Return",
												"src": "4496:44:5"
											}
										]
									},
									"documentation": "@dev See {IERC1155-isApprovedForAll}.",
									"functionSelector": "e985e9c5",
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 562,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4462:8:5"
									},
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "4415:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "4432:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4432:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4414:35:5"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "4480:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 563,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4480:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4479:6:5"
									},
									"scope": 1354,
									"src": "4389:158:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1449
									],
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "4811:700:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 588,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "4829:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4843:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4835:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 589,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4835:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4835:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4829:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4847:39:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4821:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4821:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "4821:66:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 598,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "4918:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 599,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 86,
																		"src": "4926:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4926:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "4918:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 603,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "4959:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 604,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 86,
																			"src": "4965:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4965:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 602,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "4942:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4942:36:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4918:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4992:43:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:148:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "4897:148:5"
											},
											{
												"assignments": [
													612
												],
												"declarations": [
													{
														"constant": false,
														"id": 612,
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 677,
														"src": "5056:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 611,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5056:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 615,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 613,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "5075:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5075:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5056:31:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 617,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5119:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 618,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "5129:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 619,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "5135:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 621,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "5157:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 620,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "5139:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5139:21:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 624,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5180:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 623,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "5162:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5162:25:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 626,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "5189:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 616,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "5098:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "5098:96:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 629,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "5205:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 632,
															"indexExpression": {
																"argumentTypes": null,
																"id": 630,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "5215:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5205:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 633,
														"indexExpression": {
															"argumentTypes": null,
															"id": 631,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "5219:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5205:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 640,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "5251:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5259:44:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																},
																"value": "ERC1155: insufficient balance for transfer"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 634,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "5227:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 636,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 635,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "5237:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5227:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 638,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 637,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "5241:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5227:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 231,
															"src": "5227:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5227:77:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5205:99:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "5205:99:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 645,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "5314:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 648,
															"indexExpression": {
																"argumentTypes": null,
																"id": 646,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "5324:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5314:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 649,
														"indexExpression": {
															"argumentTypes": null,
															"id": 647,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "5328:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5314:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 656,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "5356:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 650,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "5334:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 652,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 651,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "5344:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5334:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 654,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 653,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "5348:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5334:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 188,
															"src": "5334:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5334:29:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5314:49:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "5314:49:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 661,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5394:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 662,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "5404:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 663,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "5410:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 664,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5414:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 665,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "5418:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 660,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "5379:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5379:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "EmitStatement",
												"src": "5374:51:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 669,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5467:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 670,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "5477:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 671,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "5483:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 672,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5487:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 673,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "5491:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 674,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "5499:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 668,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "5436:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5436:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "5436:68:5"
											}
										]
									},
									"documentation": "@dev See {IERC1155-safeTransferFrom}.",
									"functionSelector": "f242432a",
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 585,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4798:8:5"
									},
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 678,
												"src": "4649:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4649:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 678,
												"src": "4671:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 678,
												"src": "4691:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4691:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 678,
												"src": "4711:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4711:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 678,
												"src": "4735:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4639:119:5"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4811:0:5"
									},
									"scope": 1354,
									"src": "4614:897:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1464
									],
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "5805:962:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 695,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "5823:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5823:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 697,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "5837:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5837:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5823:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5853:42:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5815:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5815:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "5815:81:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 704,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "5914:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5928:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5920:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 705,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5920:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5920:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5914:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5932:39:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 703,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5906:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5906:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "5906:66:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 714,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "6003:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 715,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 86,
																		"src": "6011:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6011:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "6003:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 719,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "6044:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 720,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 86,
																			"src": "6050:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6050:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 718,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6027:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6027:36:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6003:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6077:52:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5982:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5982:157:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "5982:157:5"
											},
											{
												"assignments": [
													728
												],
												"declarations": [
													{
														"constant": false,
														"id": 728,
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 814,
														"src": "6150:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 727,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6150:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 731,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 729,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "6169:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6169:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6150:31:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 733,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "6213:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 734,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "6223:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 735,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "6229:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 736,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "6233:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 737,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "6238:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 738,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "6247:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 732,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "6192:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6192:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "6192:60:5"
											},
											{
												"body": {
													"id": 795,
													"nodeType": "Block",
													"src": "6304:308:5",
													"statements": [
														{
															"assignments": [
																753
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 753,
																	"name": "id",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 795,
																	"src": "6318:10:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 752,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6318:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 757,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 754,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "6331:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 756,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 755,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "6335:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6331:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6318:19:5"
														},
														{
															"assignments": [
																759
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 759,
																	"name": "amount",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 795,
																	"src": "6351:14:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 758,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6351:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 763,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 760,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "6368:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 762,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 761,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "6376:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6368:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6351:27:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 764,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 377,
																			"src": "6393:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 767,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 765,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "6403:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6393:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 768,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 766,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "6407:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6393:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 775,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 759,
																			"src": "6456:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6480:44:5",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																				"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																			},
																			"value": "ERC1155: insufficient balance for transfer"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																				"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 769,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 377,
																					"src": "6415:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 771,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 770,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "6425:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6415:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 773,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 772,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 680,
																				"src": "6429:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6415:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 231,
																		"src": "6415:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																		}
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6415:123:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6393:145:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "6393:145:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 780,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 377,
																			"src": "6552:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 783,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 781,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "6562:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6552:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 784,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 782,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "6566:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6552:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 791,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 759,
																			"src": "6594:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 785,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 377,
																					"src": "6572:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 787,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 786,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "6582:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6572:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 789,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 788,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 682,
																				"src": "6586:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6572:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 188,
																		"src": "6572:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6572:29:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6552:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 794,
															"nodeType": "ExpressionStatement",
															"src": "6552:49:5"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 745,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "6283:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 746,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "6287:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6287:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6283:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"initializationExpression": {
													"assignments": [
														742
													],
													"declarations": [
														{
															"constant": false,
															"id": 742,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 796,
															"src": "6268:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 741,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6268:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 744,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6280:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6268:13:5"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6299:3:5",
														"subExpression": {
															"argumentTypes": null,
															"id": 749,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "6301:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 751,
													"nodeType": "ExpressionStatement",
													"src": "6299:3:5"
												},
												"nodeType": "ForStatement",
												"src": "6263:349:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 798,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "6641:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 799,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "6651:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 800,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "6657:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 801,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "6661:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 802,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "6666:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 797,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "6627:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6627:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "EmitStatement",
												"src": "6622:52:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 806,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "6721:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 807,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "6731:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 808,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "6737:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 809,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "6741:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 810,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "6746:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 811,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "6755:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 805,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "6685:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6685:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "6685:75:5"
											}
										]
									},
									"documentation": "@dev See {IERC1155-safeBatchTransferFrom}.",
									"functionSelector": "2eb2c2d6",
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 692,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5792:8:5"
									},
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 815,
												"src": "5623:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5623:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 815,
												"src": "5645:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 815,
												"src": "5665:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 683,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5665:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 684,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5665:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 815,
												"src": "5695:24:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 686,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5695:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 687,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5695:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 815,
												"src": "5729:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5729:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5613:139:5"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5805:0:5"
									},
									"scope": 1354,
									"src": "5583:1184:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "7646:30:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 820,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "7656:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 821,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "7663:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "7656:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "7656:13:5"
											}
										]
									},
									"documentation": "@dev Sets a new URI for all token types, by relying on the token type ID\nsubstitution mechanism\nhttps://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\nURI or any of the amounts in the JSON file at said URI will be replaced by\nclients with the token type ID.\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\ninterpreted by clients as\n`https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\nfor token type ID 0x4cce0.\n     * See {uri}.\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\nthis function emits no events.",
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"name": "newuri",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 825,
												"src": "7607:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 816,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7607:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7606:22:5"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7646:0:5"
									},
									"scope": 1354,
									"src": "7590:86:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "8155:476:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 837,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "8173:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8192:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8184:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 838,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8184:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8184:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8173:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8196:35:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8165:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8165:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "8165:67:5"
											},
											{
												"assignments": [
													847
												],
												"declarations": [
													{
														"constant": false,
														"id": 847,
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 905,
														"src": "8243:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 846,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8243:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 850,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 848,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "8262:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8262:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8243:31:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 852,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "8306:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8324:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8316:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 853,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8316:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8316:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 857,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "8328:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 859,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "8355:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 858,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "8337:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8337:21:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 862,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "8378:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 861,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "8360:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8360:25:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 864,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8387:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 851,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "8285:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8285:107:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "8285:107:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 867,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "8403:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 870,
															"indexExpression": {
																"argumentTypes": null,
																"id": 868,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "8413:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8403:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 871,
														"indexExpression": {
															"argumentTypes": null,
															"id": 869,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "8417:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8403:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 878,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "8455:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 872,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "8428:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 874,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 873,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "8438:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8428:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 876,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 875,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "8442:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8428:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 188,
															"src": "8428:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8428:34:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8403:59:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "8403:59:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 883,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "8492:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8510:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8502:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 884,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8502:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8502:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 888,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "8514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 889,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "8523:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 890,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "8527:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 882,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "8477:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8477:57:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "EmitStatement",
												"src": "8472:62:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 894,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "8576:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8594:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8586:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8586:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8586:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 899,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "8598:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 900,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "8607:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 901,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "8611:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 902,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8619:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 893,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "8545:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8545:79:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "8545:79:5"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n     * Emits a {TransferSingle} event.\n     * Requirements:\n     * - `account` cannot be the zero address.\n- If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\nacceptance magic value.",
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 906,
												"src": "8074:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8074:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 906,
												"src": "8091:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8091:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 906,
												"src": "8103:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8103:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 906,
												"src": "8119:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 832,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8119:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8073:64:5"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8155:0:5"
									},
									"scope": 1354,
									"src": "8059:572:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "9092:584:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 920,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 908,
																"src": "9110:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9124:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9116:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 921,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9116:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9116:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9110:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9128:35:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9102:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9102:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "9102:62:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 930,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "9182:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "9182:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 932,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "9196:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "9196:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9182:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9212:42:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 929,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9174:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9174:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "9174:81:5"
											},
											{
												"assignments": [
													939
												],
												"declarations": [
													{
														"constant": false,
														"id": 939,
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1012,
														"src": "9266:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 938,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9266:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 942,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 940,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "9285:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9285:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9266:31:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 944,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "9329:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9347:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9339:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 945,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9339:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9339:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 949,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "9351:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 950,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "9355:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 951,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "9360:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 952,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "9369:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 943,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "9308:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9308:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "9308:66:5"
											},
											{
												"body": {
													"id": 987,
													"nodeType": "Block",
													"src": "9423:86:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 966,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 377,
																			"src": "9437:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 971,
																		"indexExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 967,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 911,
																				"src": "9447:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 969,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 968,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 956,
																				"src": "9451:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9447:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9437:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 972,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 970,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "9455:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9437:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 977,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 377,
																					"src": "9476:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 981,
																				"indexExpression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 978,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 911,
																						"src": "9486:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 980,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 979,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 956,
																						"src": "9490:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9486:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "9476:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 983,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 982,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 908,
																				"src": "9494:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9476:21:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 973,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 914,
																				"src": "9461:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 975,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 974,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 956,
																				"src": "9469:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9461:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 188,
																		"src": "9461:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9461:37:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9437:61:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 986,
															"nodeType": "ExpressionStatement",
															"src": "9437:61:5"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 959,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "9402:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 960,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "9406:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "9406:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9402:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 988,
												"initializationExpression": {
													"assignments": [
														956
													],
													"declarations": [
														{
															"constant": false,
															"id": 956,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 988,
															"src": "9390:6:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 955,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "9390:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 958,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9399:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9390:10:5"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9418:3:5",
														"subExpression": {
															"argumentTypes": null,
															"id": 963,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "9418:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 965,
													"nodeType": "ExpressionStatement",
													"src": "9418:3:5"
												},
												"nodeType": "ForStatement",
												"src": "9385:124:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 990,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "9538:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9556:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9548:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 991,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9548:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9548:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 995,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "9560:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 996,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "9564:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 997,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "9569:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 989,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "9524:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9524:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "EmitStatement",
												"src": "9519:58:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1001,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "9624:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9642:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9634:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1002,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9634:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9634:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1006,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "9646:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1007,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "9650:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1008,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "9655:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1009,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "9664:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1000,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "9588:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9588:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "9588:81:5"
											}
										]
									},
									"documentation": "@dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     * Requirements:\n     * - `ids` and `amounts` must have the same length.\n- If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\nacceptance magic value.",
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1013,
												"src": "8996:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8996:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1013,
												"src": "9008:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 909,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9008:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 910,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "9008:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1013,
												"src": "9030:24:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 912,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9030:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 913,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "9030:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1013,
												"src": "9056:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 915,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9056:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8995:79:5"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9092:0:5"
									},
									"scope": 1354,
									"src": "8976:700:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "10002:461:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1023,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "10020:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10039:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10031:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1024,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10031:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10031:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10020:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10043:37:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1022,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10012:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10012:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "10012:69:5"
											},
											{
												"assignments": [
													1033
												],
												"declarations": [
													{
														"constant": false,
														"id": 1033,
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1080,
														"src": "10092:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1032,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10092:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1036,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1034,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "10111:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10111:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10092:31:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1038,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "10155:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1039,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "10165:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10182:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10174:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1040,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10174:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10174:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1045,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "10204:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1044,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "10186:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10186:21:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1048,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "10227:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1047,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "10209:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10209:25:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10236:2:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1037,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "10134:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10134:105:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "10134:105:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1053,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "10250:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1056,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1054,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "10260:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10250:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1057,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1055,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "10264:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10250:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1064,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1019,
																"src": "10315:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10335:38:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																	"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																},
																"value": "ERC1155: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																	"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1058,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "10275:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1060,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1059,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "10285:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10275:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1062,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1061,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "10289:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10275:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 231,
															"src": "10275:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10275:108:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10250:133:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "10250:133:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1070,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "10414:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1071,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "10424:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10441:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10433:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1072,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10433:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10433:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1076,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "10445:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1077,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "10449:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1069,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "10399:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10399:57:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "EmitStatement",
												"src": "10394:62:5"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens of token type `id` from `account`\n     * Requirements:\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens of token type `id`.",
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1081,
												"src": "9940:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9940:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1081,
												"src": "9957:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9957:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1081,
												"src": "9969:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9969:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9939:45:5"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10002:0:5"
									},
									"scope": 1354,
									"src": "9925:538:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "10759:603:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1093,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "10777:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10796:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10788:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1094,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10788:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10788:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10777:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10800:37:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10769:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10769:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "10769:69:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1103,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "10856:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10856:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1105,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "10870:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10870:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10856:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10886:42:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10848:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10848:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "10848:81:5"
											},
											{
												"assignments": [
													1112
												],
												"declarations": [
													{
														"constant": false,
														"id": 1112,
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1174,
														"src": "10940:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1111,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10940:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1115,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1113,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "10959:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10959:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10940:31:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1117,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "11003:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1118,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "11013:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11030:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11022:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1119,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11022:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11022:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1123,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "11034:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1124,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "11039:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11048:2:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1116,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "10982:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10982:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "10982:69:5"
											},
											{
												"body": {
													"id": 1161,
													"nodeType": "Block",
													"src": "11100:182:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1139,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 377,
																			"src": "11114:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1144,
																		"indexExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1140,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1086,
																				"src": "11124:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1142,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1141,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1129,
																				"src": "11128:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11124:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11114:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1145,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1143,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "11132:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11114:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1154,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1089,
																				"src": "11191:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1156,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1155,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1129,
																				"src": "11199:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11191:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																			"id": 1157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11219:38:5",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																				"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																			},
																			"value": "ERC1155: burn amount exceeds balance"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																				"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1146,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 377,
																					"src": "11143:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1150,
																				"indexExpression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 1147,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1086,
																						"src": "11153:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1149,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 1148,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1129,
																						"src": "11157:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "11153:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "11143:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1152,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1151,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1083,
																				"src": "11161:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11143:26:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 231,
																		"src": "11143:30:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																		}
																	},
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11143:128:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11114:157:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1160,
															"nodeType": "ExpressionStatement",
															"src": "11114:157:5"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1132,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "11079:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1133,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "11083:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11083:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11079:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1162,
												"initializationExpression": {
													"assignments": [
														1129
													],
													"declarations": [
														{
															"constant": false,
															"id": 1129,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1162,
															"src": "11067:6:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1128,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "11067:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1131,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11076:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11067:10:5"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11095:3:5",
														"subExpression": {
															"argumentTypes": null,
															"id": 1136,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "11095:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1138,
													"nodeType": "ExpressionStatement",
													"src": "11095:3:5"
												},
												"nodeType": "ForStatement",
												"src": "11062:220:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1164,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "11311:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1165,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "11321:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11338:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11330:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1166,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11330:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11330:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1170,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "11342:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1171,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "11347:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1163,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "11297:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11297:58:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "EmitStatement",
												"src": "11292:63:5"
											}
										]
									},
									"documentation": "@dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     * Requirements:\n     * - `ids` and `amounts` must have the same length.",
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1175,
												"src": "10677:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10677:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1175,
												"src": "10694:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1084,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10694:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1085,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "10694:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1175,
												"src": "10716:24:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1087,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10716:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1088,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "10716:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10676:65:5"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10759:0:5"
									},
									"scope": 1354,
									"src": "10657:705:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "12520:3:5",
										"statements": []
									},
									"documentation": "@dev Hook that is called before any token transfer. This includes minting\nand burning, as well as batched variants.\n     * The same hook is called on both single and batched variants. For single\ntransfers, the length of the `id` and `amount` arrays will be 1.\n     * Calling conditions (for each `id` and `amount` pair):\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\nof token type `id` will be  transferred to `to`.\n- When `from` is zero, `amount` tokens of token type `id` will be minted\nfor `to`.\n- when `to` is zero, `amount` of ``from``'s tokens of token type `id`\nwill be burned.\n- `from` and `to` are never both zero.\n- `ids` and `amounts` have the same, non-zero length.\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].",
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1193,
												"src": "12335:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12335:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1193,
												"src": "12361:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12361:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1193,
												"src": "12383:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12383:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1193,
												"src": "12403:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1182,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12403:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1183,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "12403:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1193,
												"src": "12433:24:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1185,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12433:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1186,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "12433:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1193,
												"src": "12467:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1188,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12467:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12325:165:5"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12520:0:5"
									},
									"scope": 1354,
									"src": "12296:227:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "12734:536:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1208,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "12748:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1534,
														"src": "12748:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12748:15:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1256,
												"nodeType": "IfStatement",
												"src": "12744:520:5",
												"trueBody": {
													"id": 1255,
													"nodeType": "Block",
													"src": "12765:499:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1237,
																		"nodeType": "Block",
																		"src": "12882:188:5",
																		"statements": [
																			{
																				"condition": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1230,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1224,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1222,
																						"src": "12904:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 1226,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1199,
																										"src": "12933:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1225,
																									"name": "IERC1155Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1516,
																									"src": "12916:16:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1516_$",
																										"typeString": "type(contract IERC1155Receiver)"
																									}
																								},
																								"id": 1227,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12916:20:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC1155Receiver_$1516",
																									"typeString": "contract IERC1155Receiver"
																								}
																							},
																							"id": 1228,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1498,
																							"src": "12916:38:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 1229,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": null,
																						"src": "12916:47:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "12904:59:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": null,
																				"id": 1236,
																				"nodeType": "IfStatement",
																				"src": "12900:156:5",
																				"trueBody": {
																					"id": 1235,
																					"nodeType": "Block",
																					"src": "12965:91:5",
																					"statements": [
																						{
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1232,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12994:42:5",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1231,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										-19,
																										-19
																									],
																									"referencedDeclaration": -19,
																									"src": "12987:6:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1233,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12987:50:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1234,
																							"nodeType": "ExpressionStatement",
																							"src": "12987:50:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1238,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1223,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1222,
																				"name": "response",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1238,
																				"src": "12865:15:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1221,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "12865:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"src": "12864:17:5"
																	},
																	"src": "12856:214:5"
																},
																{
																	"block": {
																		"id": 1246,
																		"nodeType": "Block",
																		"src": "13105:47:5",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1243,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1240,
																							"src": "13130:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1242,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							-19,
																							-19
																						],
																						"referencedDeclaration": -19,
																						"src": "13123:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1244,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13123:14:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1245,
																				"nodeType": "ExpressionStatement",
																				"src": "13123:14:5"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1247,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1241,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1240,
																				"name": "reason",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1247,
																				"src": "13083:20:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1239,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "13083:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"src": "13082:22:5"
																	},
																	"src": "13071:81:5"
																},
																{
																	"block": {
																		"id": 1252,
																		"nodeType": "Block",
																		"src": "13159:95:5",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1249,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13184:54:5",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1248,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							-19,
																							-19
																						],
																						"referencedDeclaration": -19,
																						"src": "13177:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1250,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13177:62:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1251,
																				"nodeType": "ExpressionStatement",
																				"src": "13177:62:5"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1253,
																	"nodeType": "TryCatchClause",
																	"parameters": null,
																	"src": "13153:101:5"
																}
															],
															"externalCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1215,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1195,
																		"src": "12822:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1216,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "12832:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1217,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1201,
																		"src": "12838:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1218,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1203,
																		"src": "12842:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1219,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1205,
																		"src": "12850:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1212,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1199,
																				"src": "12800:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1211,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1516,
																			"src": "12783:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1516_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12783:20:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1516",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1498,
																	"src": "12783:38:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12783:72:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1254,
															"nodeType": "TryStatement",
															"src": "12779:475:5"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1258,
												"src": "12578:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12578:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1258,
												"src": "12604:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12604:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1258,
												"src": "12626:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12626:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1258,
												"src": "12646:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12646:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1258,
												"src": "12666:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12666:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1258,
												"src": "12690:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12690:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12568:145:5"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12734:0:5"
									},
									"scope": 1354,
									"src": "12529:741:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "13506:548:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1275,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "13520:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1534,
														"src": "13520:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13520:15:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1323,
												"nodeType": "IfStatement",
												"src": "13516:532:5",
												"trueBody": {
													"id": 1322,
													"nodeType": "Block",
													"src": "13537:511:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1304,
																		"nodeType": "Block",
																		"src": "13661:193:5",
																		"statements": [
																			{
																				"condition": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1297,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1291,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1289,
																						"src": "13683:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 1293,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1264,
																										"src": "13712:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1292,
																									"name": "IERC1155Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1516,
																									"src": "13695:16:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1516_$",
																										"typeString": "type(contract IERC1155Receiver)"
																									}
																								},
																								"id": 1294,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13695:20:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC1155Receiver_$1516",
																									"typeString": "contract IERC1155Receiver"
																								}
																							},
																							"id": 1295,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1515,
																							"src": "13695:43:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 1296,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": null,
																						"src": "13695:52:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "13683:64:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": null,
																				"id": 1303,
																				"nodeType": "IfStatement",
																				"src": "13679:161:5",
																				"trueBody": {
																					"id": 1302,
																					"nodeType": "Block",
																					"src": "13749:91:5",
																					"statements": [
																						{
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1299,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "13778:42:5",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1298,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										-19,
																										-19
																									],
																									"referencedDeclaration": -19,
																									"src": "13771:6:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1300,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13771:50:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1301,
																							"nodeType": "ExpressionStatement",
																							"src": "13771:50:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1305,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1290,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1289,
																				"name": "response",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1305,
																				"src": "13644:15:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1288,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "13644:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"src": "13643:17:5"
																	},
																	"src": "13635:219:5"
																},
																{
																	"block": {
																		"id": 1313,
																		"nodeType": "Block",
																		"src": "13889:47:5",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1310,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1307,
																							"src": "13914:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1309,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							-19,
																							-19
																						],
																						"referencedDeclaration": -19,
																						"src": "13907:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1311,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13907:14:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1312,
																				"nodeType": "ExpressionStatement",
																				"src": "13907:14:5"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1314,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1308,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1307,
																				"name": "reason",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1314,
																				"src": "13867:20:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1306,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "13867:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"src": "13866:22:5"
																	},
																	"src": "13855:81:5"
																},
																{
																	"block": {
																		"id": 1319,
																		"nodeType": "Block",
																		"src": "13943:95:5",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1316,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13968:54:5",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1315,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							-19,
																							-19
																						],
																						"referencedDeclaration": -19,
																						"src": "13961:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1317,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13961:62:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1318,
																				"nodeType": "ExpressionStatement",
																				"src": "13961:62:5"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1320,
																	"nodeType": "TryCatchClause",
																	"parameters": null,
																	"src": "13937:101:5"
																}
															],
															"externalCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1282,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1260,
																		"src": "13599:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1283,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1262,
																		"src": "13609:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1284,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "13615:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1285,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1270,
																		"src": "13620:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1286,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1272,
																		"src": "13629:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1279,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1264,
																				"src": "13572:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1278,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1516,
																			"src": "13555:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1516_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13555:20:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1516",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1515,
																	"src": "13555:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13555:79:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1321,
															"nodeType": "TryStatement",
															"src": "13551:487:5"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1325,
												"src": "13330:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1325,
												"src": "13356:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1325,
												"src": "13378:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13378:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1325,
												"src": "13398:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1265,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13398:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1266,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "13398:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1325,
												"src": "13428:24:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1268,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13428:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1269,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "13428:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1325,
												"src": "13462:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13462:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13320:165:5"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13506:0:5"
									},
									"scope": 1354,
									"src": "13276:778:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "14144:109:5",
										"statements": [
											{
												"assignments": [
													1337
												],
												"declarations": [
													{
														"constant": false,
														"id": 1337,
														"name": "array",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1352,
														"src": "14154:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1335,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14154:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1336,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "14154:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1343,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14193:1:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1340,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "14179:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1338,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14183:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1339,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "14183:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14179:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14154:41:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1344,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "14205:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1346,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14211:1:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14205:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1347,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "14216:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14205:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "14205:18:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1350,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1337,
													"src": "14241:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1332,
												"id": 1351,
												"nodeType": "Return",
												"src": "14234:12:5"
											}
										]
									},
									"documentation": null,
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"name": "element",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1353,
												"src": "14087:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14087:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14086:17:5"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1353,
												"src": "14126:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1329,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14126:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1330,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "14126:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14125:18:5"
									},
									"scope": 1354,
									"src": "14060:193:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1355,
							"src": "512:13743:5"
						}
					],
					"src": "33:14223:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1465
						]
					},
					"id": 1466,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1356,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/IERC165.sol",
							"file": "../../introspection/IERC165.sol",
							"id": 1357,
							"nodeType": "ImportDirective",
							"scope": 1466,
							"sourceUnit": 162,
							"src": "58:41:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1358,
										"name": "IERC165",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 161,
										"src": "289:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC165_$161",
											"typeString": "contract IERC165"
										}
									},
									"id": 1359,
									"nodeType": "InheritanceSpecifier",
									"src": "289:7:6"
								}
							],
							"contractDependencies": [
								161
							],
							"contractKind": "interface",
							"documentation": "@dev Required interface of an ERC1155 compliant contract, as defined in the\nhttps://eips.ethereum.org/EIPS/eip-1155[EIP].\n * _Available since v3.1._",
							"fullyImplemented": false,
							"id": 1465,
							"linearizedBaseContracts": [
								1465,
								161
							],
							"name": "IERC1155",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.",
									"id": 1371,
									"name": "TransferSingle",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"indexed": true,
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1371,
												"src": "450:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1371,
												"src": "476:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1371,
												"src": "498:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"indexed": false,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1371,
												"src": "518:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1371,
												"src": "530:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "449:95:6"
									},
									"src": "429:116:6"
								},
								{
									"anonymous": false,
									"documentation": "@dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\ntransfers.",
									"id": 1385,
									"name": "TransferBatch",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"indexed": true,
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1385,
												"src": "720:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1385,
												"src": "746:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1385,
												"src": "768:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"indexed": false,
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1385,
												"src": "788:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1378,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "788:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1379,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "788:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"indexed": false,
												"name": "values",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1385,
												"src": "803:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1381,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "803:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1382,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "803:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "719:101:6"
									},
									"src": "700:121:6"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n`approved`.",
									"id": 1393,
									"name": "ApprovalForAll",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"indexed": true,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1393,
												"src": "1000:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"indexed": true,
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1393,
												"src": "1025:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"indexed": false,
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1393,
												"src": "1051:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1051:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "999:66:6"
									},
									"src": "979:87:6"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     * If an {URI} event was emitted for `id`, the standard\nhttps://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\nreturned by {IERC1155MetadataURI-uri}.",
									"id": 1399,
									"name": "URI",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1399,
												"src": "1430:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1394,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1430:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"indexed": true,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1399,
												"src": "1444:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1429:34:6"
									},
									"src": "1420:44:6"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens of token type `id` owned by `account`.\n     * Requirements:\n     * - `account` cannot be the zero address.",
									"functionSelector": "00fdd58e",
									"id": 1408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1408,
												"src": "1667:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1408,
												"src": "1684:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1666:29:6"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1408,
												"src": "1719:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1718:9:6"
									},
									"scope": 1465,
									"src": "1648:80:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     * Requirements:\n     * - `accounts` and `ids` must have the same length.",
									"functionSelector": "4e1273f4",
									"id": 1420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"name": "accounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1420,
												"src": "1951:27:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1409,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1951:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1410,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1951:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1420,
												"src": "1980:22:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1412,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1980:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1413,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1980:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1950:53:6"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1420,
												"src": "2027:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1416,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2027:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1417,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2027:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2026:18:6"
									},
									"scope": 1465,
									"src": "1927:118:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     * Emits an {ApprovalForAll} event.\n     * Requirements:\n     * - `operator` cannot be the caller.",
									"functionSelector": "a22cb465",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1427,
												"src": "2331:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1427,
												"src": "2349:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2349:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2330:33:6"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2372:0:6"
									},
									"scope": 1465,
									"src": "2304:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     * See {setApprovalForAll}.",
									"functionSelector": "e985e9c5",
									"id": 1436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1436,
												"src": "2545:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2545:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1436,
												"src": "2562:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2562:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2544:35:6"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1436,
												"src": "2603:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2603:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2602:6:6"
									},
									"scope": 1465,
									"src": "2519:90:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     * Emits a {TransferSingle} event.\n     * Requirements:\n     * - `to` cannot be the zero address.\n- If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n- `from` must have a balance of tokens of type `id` of at least `amount`.\n- If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\nacceptance magic value.",
									"functionSelector": "f242432a",
									"id": 1449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1449,
												"src": "3205:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1449,
												"src": "3219:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1449,
												"src": "3231:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3231:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1449,
												"src": "3243:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3243:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1449,
												"src": "3259:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1445,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3259:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3204:75:6"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3288:0:6"
									},
									"scope": 1465,
									"src": "3179:110:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     * Emits a {TransferBatch} event.\n     * Requirements:\n     * - `ids` and `amounts` must have the same length.\n- If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\nacceptance magic value.",
									"functionSelector": "2eb2c2d6",
									"id": 1464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1464,
												"src": "3721:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3721:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1464,
												"src": "3735:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3735:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1464,
												"src": "3747:22:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1454,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3747:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1455,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3747:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1464,
												"src": "3771:26:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1457,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3771:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1458,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3771:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1464,
												"src": "3799:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1460,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3799:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3720:99:6"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3828:0:6"
									},
									"scope": 1465,
									"src": "3690:139:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1466,
							"src": "267:3564:6"
						}
					],
					"src": "33:3799:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155MetadataURI": [
							1478
						]
					},
					"id": 1479,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1467,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 1468,
							"nodeType": "ImportDirective",
							"scope": 1479,
							"sourceUnit": 1466,
							"src": "58:24:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1469,
										"name": "IERC1155",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1465,
										"src": "312:8:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155_$1465",
											"typeString": "contract IERC1155"
										}
									},
									"id": 1470,
									"nodeType": "InheritanceSpecifier",
									"src": "312:8:7"
								}
							],
							"contractDependencies": [
								161,
								1465
							],
							"contractKind": "interface",
							"documentation": "@dev Interface of the optional ERC1155MetadataExtension interface, as defined\nin the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n * _Available since v3.1._",
							"fullyImplemented": false,
							"id": 1478,
							"linearizedBaseContracts": [
								1478,
								1465,
								161
							],
							"name": "IERC1155MetadataURI",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the URI for token type `id`.\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\nclients with the actual token type ID.",
									"functionSelector": "0e89341c",
									"id": 1477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1477,
												"src": "537:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "536:12:7"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1477,
												"src": "572:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1474,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "572:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "571:15:7"
									},
									"scope": 1478,
									"src": "524:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1479,
							"src": "279:310:7"
						}
					],
					"src": "33:557:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1516
						]
					},
					"id": 1517,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1480,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/introspection/IERC165.sol",
							"file": "../../introspection/IERC165.sol",
							"id": 1481,
							"nodeType": "ImportDirective",
							"scope": 1517,
							"sourceUnit": 162,
							"src": "58:41:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1482,
										"name": "IERC165",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 161,
										"src": "166:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC165_$161",
											"typeString": "contract IERC165"
										}
									},
									"id": 1483,
									"nodeType": "InheritanceSpecifier",
									"src": "166:7:8"
								}
							],
							"contractDependencies": [
								161
							],
							"contractKind": "interface",
							"documentation": "_Available since v3.1._",
							"fullyImplemented": false,
							"id": 1516,
							"linearizedBaseContracts": [
								1516,
								161
							],
							"name": "IERC1155Receiver",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed",
									"functionSelector": "f23a6e61",
									"id": 1498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1498,
												"src": "1038:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1498,
												"src": "1064:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1064:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1498,
												"src": "1086:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1498,
												"src": "1106:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1106:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1498,
												"src": "1129:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1492,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1129:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1028:126:8"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1498,
												"src": "1188:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1495,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1188:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1187:8:8"
									},
									"scope": 1516,
									"src": "1002:194:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed",
									"functionSelector": "bc197c81",
									"id": 1515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1515,
												"src": "2225:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1515,
												"src": "2251:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1515,
												"src": "2273:22:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1503,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2273:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1504,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2273:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"name": "values",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1515,
												"src": "2305:25:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1506,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2305:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1507,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2305:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1515,
												"src": "2340:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1509,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2340:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2215:150:8"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1515,
												"src": "2399:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1512,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2399:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2398:8:8"
									},
									"scope": 1516,
									"src": "2184:223:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1517,
							"src": "136:2273:8"
						}
					],
					"src": "33:2377:8"
				},
				"id": 8
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1704
						]
					},
					"id": 1705,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1518,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Collection of functions related to the address type",
							"fullyImplemented": true,
							"id": 1704,
							"linearizedBaseContracts": [
								1704
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "784:347:9",
										"statements": [
											{
												"assignments": [
													1526
												],
												"declarations": [
													{
														"constant": false,
														"id": 1526,
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1533,
														"src": "981:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1525,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1527,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1068:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1070:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1090:7:9"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1078:11:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1078:20:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1070:4:9"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1520,
														"isOffset": false,
														"isSlot": false,
														"src": "1090:7:9",
														"valueSize": 1
													},
													{
														"declaration": 1526,
														"isOffset": false,
														"isSlot": false,
														"src": "1070:4:9",
														"valueSize": 1
													}
												],
												"id": 1528,
												"nodeType": "InlineAssembly",
												"src": "1059:41:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1529,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "1116:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1123:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1116:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1524,
												"id": 1532,
												"nodeType": "Return",
												"src": "1109:15:9"
											}
										]
									},
									"documentation": "@dev Returns true if `account` is a contract.\n     * [IMPORTANT]\n====\nIt is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.\n     * Among others, `isContract` will return false for the following\ntypes of addresses:\n     *  - an externally-owned account\n - a contract in construction\n - an address where a contract will be created\n - an address where a contract lived, but was destroyed\n====",
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1534,
												"src": "738:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "737:17:9"
									},
									"returnParameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1534,
												"src": "778:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "777:6:9"
									},
									"scope": 1704,
									"src": "718:413:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "2119:320:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1544,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2145:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1704",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1704",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2137:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1542,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2137:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2137:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2137:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1547,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "2162:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2137:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2170:31:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2129:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2129:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "2129:73:9"
											},
											{
												"assignments": [
													1553,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1553,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1566,
														"src": "2291:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1552,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2291:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1560,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:2:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1554,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1536,
																"src": "2309:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2309:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1556,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "2332:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2309:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2290:54:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1562,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "2362:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:60:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2354:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1565,
												"nodeType": "ExpressionStatement",
												"src": "2354:78:9"
											}
										]
									},
									"documentation": "@dev Replacement for Solidity's `transfer`: sends `amount` wei to\n`recipient`, forwarding all available gas and reverting on errors.\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\nof certain opcodes, possibly making contracts go over the 2300 gas limit\nimposed by `transfer`, making them unable to receive funds via\n`transfer`. {sendValue} removes this limitation.\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     * IMPORTANT: because control is transferred to `recipient`, care must be\ntaken to not create reentrancy vulnerabilities. Consider using\n{ReentrancyGuard} or the\nhttps://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].",
									"id": 1567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1567,
												"src": "2067:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2067:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1567,
												"src": "2094:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2066:43:9"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2119:0:9"
									},
									"scope": 1704,
									"src": "2048:391:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "3269:82:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1577,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "3297:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1578,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "3305:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3311:32:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1576,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1583,
															1602
														],
														"referencedDeclaration": 1602,
														"src": "3284:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3284:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1575,
												"id": 1581,
												"nodeType": "Return",
												"src": "3277:67:9"
											}
										]
									},
									"documentation": "@dev Performs a Solidity function call using a low level `call`. A\nplain`call` is an unsafe replacement for a function call: use this\nfunction instead.\n     * If `target` reverts with a revert reason, it is bubbled up by this\nfunction (like regular Solidity function calls).\n     * Returns the raw returned data. To convert to the expected return value,\nuse https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     * Requirements:\n     * - `target` must be a contract.\n- calling `target` with `data` must not revert.\n     * _Available since v3.1._",
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1583,
												"src": "3202:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1583,
												"src": "3218:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1570,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3218:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3201:35:9"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1583,
												"src": "3255:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3255:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3254:14:9"
									},
									"scope": 1704,
									"src": "3180:171:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "3690:77:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1595,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "3730:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1596,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "3738:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3744:1:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 1598,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "3747:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1594,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "3707:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3707:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1593,
												"id": 1600,
												"nodeType": "Return",
												"src": "3700:60:9"
											}
										]
									},
									"documentation": "@dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n`errorMessage` as a fallback revert reason when `target` reverts.\n     * _Available since v3.1._",
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1602,
												"src": "3595:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1602,
												"src": "3611:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3611:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1602,
												"src": "3630:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1588,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3630:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3594:63:9"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1602,
												"src": "3676:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1591,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3676:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3675:14:9"
									},
									"scope": 1704,
									"src": "3573:194:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "4242:111:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1614,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "4281:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1615,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "4289:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1616,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "4295:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1613,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1621,
															1653
														],
														"referencedDeclaration": 1653,
														"src": "4259:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1612,
												"id": 1619,
												"nodeType": "Return",
												"src": "4252:94:9"
											}
										]
									},
									"documentation": "@dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\nbut also transferring `value` wei to `target`.\n     * Requirements:\n     * - the calling contract must have an ETH balance of at least `value`.\n- the called Solidity function must be `payable`.\n     * _Available since v3.1._",
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1621,
												"src": "4160:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4160:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1621,
												"src": "4176:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1605,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4176:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1621,
												"src": "4195:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4195:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4159:50:9"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1621,
												"src": "4228:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1610,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4227:14:9"
									},
									"scope": 1704,
									"src": "4129:224:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1652,
										"nodeType": "Block",
										"src": "4742:172:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1637,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4768:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1704",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1704",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4760:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1635,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4760:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4760:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4760:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1640,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "4785:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4760:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4792:40:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4752:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4752:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "4752:81:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1646,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "4873:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1647,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "4881:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1648,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "4887:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1649,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "4894:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1645,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "4850:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1633,
												"id": 1651,
												"nodeType": "Return",
												"src": "4843:64:9"
											}
										]
									},
									"documentation": "@dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\nwith `errorMessage` as a fallback revert reason when `target` reverts.\n     * _Available since v3.1._",
									"id": 1653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1653,
												"src": "4632:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4632:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1653,
												"src": "4648:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1624,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4648:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1653,
												"src": "4667:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4667:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1653,
												"src": "4682:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4682:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4631:78:9"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1653,
												"src": "4728:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4728:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4727:14:9"
									},
									"scope": 1704,
									"src": "4601:313:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1702,
										"nodeType": "Block",
										"src": "5064:814:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1668,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "5093:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1667,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1534,
																"src": "5082:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5082:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5102:31:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1666,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5074:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5074:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1672,
												"nodeType": "ExpressionStatement",
												"src": "5074:60:9"
											},
											{
												"assignments": [
													1674,
													1676
												],
												"declarations": [
													{
														"constant": false,
														"id": 1674,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1702,
														"src": "5205:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1673,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5205:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1676,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1702,
														"src": "5219:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1675,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5219:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1683,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1681,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "5277:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1677,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "5246:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5246:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1679,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1659,
																"src": "5266:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5246:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5246:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5204:78:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1684,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1674,
													"src": "5296:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1700,
													"nodeType": "Block",
													"src": "5353:519:9",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1688,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "5437:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5437:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5457:1:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5437:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1698,
																"nodeType": "Block",
																"src": "5809:53:9",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1695,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1661,
																					"src": "5834:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1694,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "5827:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5827:20:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1697,
																		"nodeType": "ExpressionStatement",
																		"src": "5827:20:9"
																	}
																]
															},
															"id": 1699,
															"nodeType": "IfStatement",
															"src": "5433:429:9",
															"trueBody": {
																"id": 1693,
																"nodeType": "Block",
																"src": "5460:343:9",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "5644:145:9",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "5666:40:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "5695:10:9"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "5689:5:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5689:17:9"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "5670:15:9",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5738:2:9",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "5742:10:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5734:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5734:19:9"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "5755:15:9"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "5727:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5727:44:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5727:44:9"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1676,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5695:10:9",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1676,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5742:10:9",
																				"valueSize": 1
																			}
																		],
																		"id": 1692,
																		"nodeType": "InlineAssembly",
																		"src": "5635:154:9"
																	}
																]
															}
														}
													]
												},
												"id": 1701,
												"nodeType": "IfStatement",
												"src": "5292:580:9",
												"trueBody": {
													"id": 1687,
													"nodeType": "Block",
													"src": "5305:42:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1685,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1676,
																"src": "5326:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1665,
															"id": 1686,
															"nodeType": "Return",
															"src": "5319:17:9"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1703,
												"src": "4952:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4952:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1703,
												"src": "4968:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1656,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4968:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1703,
												"src": "4987:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4987:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1703,
												"src": "5005:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1660,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4951:81:9"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1703,
												"src": "5050:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1663,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5050:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5049:14:9"
									},
									"scope": 1704,
									"src": "4920:958:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1705,
							"src": "126:5754:9"
						}
					],
					"src": "33:5848:9"
				},
				"id": 9
			}
		}
	}
}